    <device schemaVersion="1.3">
        <vendor>Texas Instruments</vendor>
        <vendorID>TI</vendorID>
        <name>CC3220SF</name>
        <series>Wireless Connectivity MCU</series>
        <version>1</version>
        <description>SimpleLink(TM) CC3220SF wireless MCU</description>
        <cpu>
            <name>CM4</name>
            <revision>r1p0</revision>
            <endian>little</endian>
            <mpuPresent>0</mpuPresent>
            <fpuPresent>0</fpuPresent>
            <icachePresent>0</icachePresent>
            <dtcmPresent>0</dtcmPresent>
            <vtorPresent>0</vtorPresent>
            <nvicPrioBits>8</nvicPrioBits>
            <vendorSystickConfig>0</vendorSystickConfig>
        </cpu>
        <addressUnitBits>8</addressUnitBits>
        <width>32</width>
        <resetValue>0x00000000</resetValue>
        <resetMask>0xFFFFFFFF</resetMask>
        <peripherals>
            <peripheral>
                <name>_INTERRUPTS</name>
                <baseAddress>0</baseAddress>
                <interrupt>
                    <name>INTERRUPT_GPIOA0</name>
                    <description>GPIO port S0</description>
                    <value>16</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_GPIOA1</name>
                    <description>GPIO port S1</description>
                    <value>17</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_GPIOA2</name>
                    <description>GPIO port S2</description>
                    <value>18</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_GPIOA3</name>
                    <description>GPIO port S3</description>
                    <value>19</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_UART0</name>
                    <description>UART0 Rx and Tx</description>
                    <value>21</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_UART1</name>
                    <description>UART1 Rx and Tx</description>
                    <value>22</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_I2C</name>
                    <description>I2C controller</description>
                    <value>24</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_ADC0</name>
                    <description>ADC Channel 0</description>
                    <value>30</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_ADC1</name>
                    <description>ADC Channel 1</description>
                    <value>31</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_ADC2</name>
                    <description>ADC Channel 2</description>
                    <value>32</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_ADC3</name>
                    <description>ADC Channel 3</description>
                    <value>33</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_WDT</name>
                    <description>Watchdog Timer</description>
                    <value>34</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_TIMERA0A</name>
                    <description>16/32-Bit General Purpose Timer A0A</description>
                    <value>35</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_TIMERA0B</name>
                    <description>16/32-Bit General Purpose Timer A0B</description>
                    <value>36</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_TIMERA1A</name>
                    <description>16/32-Bit General Purpose Timer A1A</description>
                    <value>37</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_TIMERA1B</name>
                    <description>16/32-Bit General Purpose Timer A1B</description>
                    <value>38</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_TIMERA2A</name>
                    <description>16/32-Bit General Purpose Timer A2A</description>
                    <value>39</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_TIMERA2B</name>
                    <description>16/32-Bit General Purpose Timer A2B</description>
                    <value>40</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_TIMERA3A</name>
                    <description>16/32-Bit General Purpose Timer A3A</description>
                    <value>51</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_TIMERA3B</name>
                    <description>16/32-Bit General Purpose Timer A3B</description>
                    <value>52</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_UDMA</name>
                    <description>uDMA Software Interrupt</description>
                    <value>62</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_I2S</name>
                    <description>I2S controller</description>
                    <value>177</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_CAM</name>
                    <description>Camera</description>
                    <value>179</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_RAMWR</name>
                    <description>RAM WR Error</description>
                    <value>184</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_NET</name>
                    <description>Network Interrupt</description>
                    <value>187</value>
                </interrupt>
                <interrupt>
                    <name>INTERRUPT_SPI</name>
                    <description>SPI Interrupt</description>
                    <value>192</value>
                </interrupt>
            </peripheral>
            <peripheral>
                <name>WDT</name>
                <version>1.0</version>
                <description>WDT</description>
                <baseAddress>0x40000000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>LOAD</name>
                        <displayName>WDT_LOAD</displayName>
                        <description>LOAD</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>VALUE</name>
                        <displayName>WDT_VALUE</displayName>
                        <description>VALUE</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CTL</name>
                        <displayName>WDT_CTL</displayName>
                        <description>CTL</description>
                        <addressOffset>0x8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ICR</name>
                        <displayName>WDT_ICR</displayName>
                        <description>ICR</description>
                        <addressOffset>0xC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RIS</name>
                        <displayName>WDT_RIS</displayName>
                        <description>RIS</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MIS</name>
                        <displayName>WDT_MIS</displayName>
                        <description>MIS</description>
                        <addressOffset>0x14</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TEST</name>
                        <displayName>WDT_TEST</displayName>
                        <description>TEST</description>
                        <addressOffset>0x418</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>STALL_EN</name>
                                <description>Watchdog stall enable</description>
                                <lsb>10</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>LOCK</name>
                        <displayName>WDT_LOCK</displayName>
                        <description>LOCK</description>
                        <addressOffset>0xC00</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>GPIOA0</name>
                <version>1.0</version>
                <description>GPIOA0</description>
                <baseAddress>0x40004000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>DATA</name>
                        <displayName>GPIOA0_DATA</displayName>
                        <description>0x4000 5000 0x4000 6000 0x4000 7000 0x4002 4000 GPIO Data (GPIODATA)@@ offset 0x000 The GPIODATA register is the data register. In software control mode@@ values written in the GPIODATA register are transferred onto the GPIO port pins if the respective pins have been configured as outputs through the GPIO Direction (GPIODIR) register (see page 653). In order to write to GPIODATA@@ the corresponding bits in the mask@@ resulting from the address bus bits [9:2]@@ must be set. Otherwise@@ the bit values remain unchanged by the write. Similarly@@ the values read from this register are determined for each bit by the mask bit derived from the address used to access the data register@@ bits [9:2]. Bits that are set in the address mask cause the corresponding bits in GPIODATA to be read@@ and bits that are clear in the address mask cause the corresponding bits in GPIODATA to be read as 0@@ regardless of their value. A read from GPIODATA returns the last bit value written if the respective pins are configured as outputs@@ or it returns the value on the corresponding input pin when these are configured as inputs. All bits are cleared by a reset.</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DIR</name>
                        <displayName>GPIOA0_DIR</displayName>
                        <description>0x4000 5400 0x4000 6400 0x4000 7400 0x4002 4400 GPIO Direction (GPIODIR)@@ offset 0x400 The GPIODIR register is the data direction register. Setting a bit in the GPIODIR register configures the corresponding pin to be an output@@ while clearing a bit configures the corresponding pin to be an input. All bits are cleared by a reset@@ meaning all GPIO pins are inputs by default.</description>
                        <addressOffset>0x400</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IS</name>
                        <displayName>GPIOA0_IS</displayName>
                        <description>0x4000 5404 0x4000 6404 0x4000 7404 0x4002 4404 GPIO Interrupt Sense (GPIOIS)@@ offset 0x404 The GPIOIS register is the interrupt sense register. Setting a bit in the GPIOIS register configures the corresponding pin to detect levels@@ while clearing a bit configures the corresponding pin to detect edges. All bits are cleared by a reset.</description>
                        <addressOffset>0x404</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IBE</name>
                        <displayName>GPIOA0_IBE</displayName>
                        <description>0x4000 5408 0x4000 6408 0x4000 7408 0x4002 4408 GPIO Interrupt Both Edges (GPIOIBE)@@ offset 0x408 The GPIOIBE register allows both edges to cause interrupts. When the corresponding bit in the GPIO Interrupt Sense (GPIOIS) register is set to detect edges@@ setting a bit in the GPIOIBE register configures the corresponding pin to detect both rising and falling edges@@ regardless of the corresponding bit in the GPIO Interrupt Event (GPIOIEV) register . Clearing a bit configures the pin to be controlled by the GPIOIEV register. All bits are cleared by a reset.</description>
                        <addressOffset>0x408</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IEV</name>
                        <displayName>GPIOA0_IEV</displayName>
                        <description>0x4000 540C 0x4000 640C 0x4000 740C 0x4002 440C GPIO Interrupt Event (GPIOIEV)@@ offset 0x40C The GPIOIEV register is the interrupt event register. Setting a bit in the GPIOIEV register configures the corresponding pin to detect rising edges or high levels@@ depending on the corresponding bit value in the GPIO Interrupt Sense (GPIOIS) register . Clearing a bit configures the pin to detect falling edges or low levels@@ depending on the corresponding bit value in the GPIOIS register. All bits are cleared by a reset.</description>
                        <addressOffset>0x40C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IM</name>
                        <displayName>GPIOA0_IM</displayName>
                        <description>0x4000 5410 0x4000 6410 0x4000 7410 0x4002 4410 GPIO Interrupt Mask (GPIOIM)@@ offset 0x410 The GPIOIM register is the interrupt mask register. Setting a bit in the GPIOIM register allows interrupts that are generated by the corresponding pin to be sent to the interrupt controller on the combined interrupt signal. Clearing a bit prevents an interrupt on the corresponding pin from being sent to the interrupt controller. All bits are cleared by a reset.</description>
                        <addressOffset>0x410</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RIS</name>
                        <displayName>GPIOA0_RIS</displayName>
                        <description>0x4000 5414 0x4000 6414 0x4000 7414 0x4002 4414 GPIO Raw Interrupt Status (GPIORIS)@@ offset 0x414 The GPIORIS register is the raw interrupt status register. A bit in this register is set when an interrupt condition occurs on the corresponding GPIO pin. If the corresponding bit in the GPIO Interrupt Mask (GPIOIM) register is set@@ the interrupt is sent to the interrupt controller. Bits read as zero indicate that corresponding input pins have not initiated an interrupt. A bit in this register can be cleared by writing a 1 to the corresponding bit in the GPIO Interrupt Clear (GPIOICR) register.</description>
                        <addressOffset>0x414</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MIS</name>
                        <displayName>GPIOA0_MIS</displayName>
                        <description>0x4000 5418 0x4000 6418 0x4000 7418 0x4002 4418 GPIO Masked Interrupt Status (GPIOMIS)@@ offset 0x418 The GPIOMIS register is the masked interrupt status register. If a bit is set in this register@@ the corresponding interrupt has triggered an interrupt to the interrupt controller. If a bit is clear@@ either no interrupt has been generated@@ or the interrupt is masked. If no port pin@@ other than the one that is being used as an ADC trigger@@ is being used to generate interrupts@@ the appropriate Interrupt Set Enable (ENn) register can disable the interrupts for the port@@ and the ADC interrupt can be used to read back the converted data. Otherwise@@ the port interrupt handler must ignore and clear interrupts on the port pin and wait for the ADC interrupt@@ or the ADC interrupt must be disabled in the EN0 register and the port interrupt handler must poll the ADC registers until the conversion is completed. If no port pin@@ other than the one that is being used as an ADC trigger@@ is being used to generate interrupts@@ the appropriate Interrupt Set Enable (ENn) register can disable the interrupts for the port@@ and the ADC interrupt can be used to read back the converted data. Otherwise@@ the port interrupt handler must ignore and clear interrupts on the port pin and wait for the ADC interrupt@@ or the ADC interrupt must be disabled in the EN0 register and the port interrupt handler must poll the ADC registers until the conversion is completed. Note that if the Port B GPIOADCCTL register is cleared@@ PB4 can still be used as an external trigger for the ADC. This is a legacy mode which allows code written for previous Stellaris devices to operate on this microcontroller. GPIOMIS is the state of the interrupt after masking.</description>
                        <addressOffset>0x418</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ICR</name>
                        <displayName>GPIOA0_ICR</displayName>
                        <description>0x4000 541C 0x4000 641C 0x4000 741C 0x4002 441C GPIO Interrupt Clear (GPIOICR)@@ offset 0x41C The GPIOICR register is the interrupt clear register. Writing a 1 to a bit in this register clears the corresponding interrupt bit in the GPIORIS and GPIOMIS registers. Writing a 0 has no effect.</description>
                        <addressOffset>0x41C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>AFSEL</name>
                        <displayName>GPIOA0_AFSEL</displayName>
                        <description>0x4000 5420 0x4000 6420 0x4000 7420 0x4002 4420 GPIO Alternate Function Select (GPIOAFSEL)@@ offset 0x420 The GPIOAFSEL register is the mode control select register. If a bit is clear@@ the pin is used as a GPIO and is controlled by the GPIO registers. Setting a bit in this register configures the corresponding GPIO line to be controlled by an associated peripheral. Several possible peripheral functions are multiplexed on each GPIO. The GPIO Port Control (GPIOPCTL) register is used to select one of the possible functions.</description>
                        <addressOffset>0x420</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DR2R</name>
                        <displayName>GPIOA0_DR2R</displayName>
                        <description>0x4000 5500 0x4000 6500 0x4000 7500 0x4002 4500 GPIO 2-mA Drive Select (GPIODR2R)@@ offset 0x500 The GPIODR2R register is the 2-mA drive control register. Each GPIO signal in the port can be individually configured without affecting the other pads. When setting the DRV2 bit for a GPIO signal@@ the corresponding DRV4 bit in the GPIODR4R register and DRV8 bit in the GPIODR8R register are automatically cleared by hardware. By default@@ all GPIO pins have 2-mA drive.</description>
                        <addressOffset>0x500</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DR4R</name>
                        <displayName>GPIOA0_DR4R</displayName>
                        <description>0x4000 5504 0x4000 6504 0x4000 7504 0x4002 4504 GPIO 4-mA Drive Select (GPIODR4R)@@ offset 0x504 The GPIODR4R register is the 4-mA drive control register. Each GPIO signal in the port can be individually configured without affecting the other pads. When setting the DRV4 bit for a GPIO signal@@ the corresponding DRV2 bit in the GPIODR2R register and DRV8 bit in the GPIODR8R register are automatically cleared by hardware.</description>
                        <addressOffset>0x504</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DR8R</name>
                        <displayName>GPIOA0_DR8R</displayName>
                        <description>0x4000 5508 0x4000 6508 0x4000 7508 0x4002 4508 GPIO 8-mA Drive Select (GPIODR8R)@@ offset 0x508 The GPIODR8R register is the 8-mA drive control register. Each GPIO signal in the port can be individually configured without affecting the other pads. When setting the DRV8 bit for a GPIO signal@@ the corresponding DRV2 bit in the GPIODR2R register and DRV4 bit in the GPIODR4R register are automatically cleared by hardware. The 8-mA setting is also used for high-current operation. Note: There is no configuration difference between 8-mA and high-current operation. The additional current capacity results from a shift in the VOH/VOL levels.</description>
                        <addressOffset>0x508</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ODR</name>
                        <displayName>GPIOA0_ODR</displayName>
                        <description>0x4000 550C 0x4000 650C 0x4000 750C 0x4002 450C GPIO Open Drain Select (GPIOODR)@@ offset 0x50C The GPIOODR register is the open drain control register. Setting a bit in this register enables the open-drain configuration of the corresponding GPIO pad. When open-drain mode is enabled@@ the corresponding bit should also be set in the GPIO Digital Input Enable (GPIODEN) register . Corresponding bits in the drive strength and slew rate control registers (GPIODR2R@@ GPIODR4R@@ GPIODR8R@@ and GPIOSLR) can be set to achieve the desired rise and fall times. The GPIO acts as an open-drain input if the corresponding bit in the GPIODIR register is cleared. If open drain is selected while the GPIO is configured as an input@@ the GPIO will remain an input and the open-drain selection has no effect until the GPIO is changed to an output. When using the I2C module@@ in addition to configuring the pin to open drain@@ the GPIO Alternate Function Select (GPIOAFSEL) register bits for the I2C clock and data pins should be set</description>
                        <addressOffset>0x50C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PUR</name>
                        <displayName>GPIOA0_PUR</displayName>
                        <description>0x4000 5510 0x4000 6510 0x4000 7510 0x4002 4510 GPIO Pull-Up Select (GPIOPUR)@@ offset 0x510 The GPIOPUR register is the pull-up control register. When a bit is set@@ a weak pull-up resistor on the corresponding GPIO signal is enabled. Setting a bit in GPIOPUR automatically clears the corresponding bit in the GPIO Pull-Down Select (GPIOPDR) register . Write access to this register is protected with the GPIOCR register. Bits in GPIOCR that are cleared prevent writes to the equivalent bit in this register.</description>
                        <addressOffset>0x510</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PDR</name>
                        <displayName>GPIOA0_PDR</displayName>
                        <description>0x4000 5514 0x4000 6514 0x4000 7514 0x4002 4514 GPIO Pull-Down Select (GPIOPDR)@@ offset 0x514 The GPIOPDR register is the pull-down control register. When a bit is set@@ a weak pull-down resistor on the corresponding GPIO signal is enabled. Setting a bit in GPIOPDR automatically clears the corresponding bit in the GPIO Pull-Up Select (GPIOPUR) register</description>
                        <addressOffset>0x514</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SLR</name>
                        <displayName>GPIOA0_SLR</displayName>
                        <description>0x4000 5518 0x4000 6518 0x4000 7518 0x4002 4518 The GPIOSLR register is the slew rate control register. Slew rate control is only available when using the 8-mA drive strength option via the GPIO 8-mA Drive Select (GPIODR8R) register</description>
                        <addressOffset>0x518</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DEN</name>
                        <displayName>GPIOA0_DEN</displayName>
                        <description>0x4000 551C 0x4000 651C 0x4000 751C 0x4002 451C GPIO Digital Enable (GPIODEN)@@ offset 0x51C Note: Pins configured as digital inputs are Schmitt-triggered. The GPIODEN register is the digital enable register. By default@@ all GPIO signals except those listed below are configured out of reset to be undriven (tristate). Their digital function is disabled; they do not drive a logic value on the pin and they do not allow the pin voltage into the GPIO receiver. To use the pin as a digital input or output (either GPIO or alternate function)@@ the corresponding GPIODEN bit must be set.</description>
                        <addressOffset>0x51C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>LOCK</name>
                        <displayName>GPIOA0_LOCK</displayName>
                        <description>0x4000 5520 0x4000 6520 0x4000 7520 0x4002 4520 GPIO Lock (GPIOLOCK)@@ offset 0x520 The GPIOLOCK register enables write access to the GPIOCR register . Writing 0x4C4F.434B to the GPIOLOCK register unlocks the GPIOCR register. Writing any other value to the GPIOLOCK register re-enables the locked state. Reading the GPIOLOCK register returns the lock status rather than the 32-bit value that was previously written. Therefore@@ when write accesses are disabled@@ or locked@@ reading the GPIOLOCK register returns 0x0000.0001. When write accesses are enabled@@ or unlocked@@ reading the GPIOLOCK register returns 0x0000.0000.</description>
                        <addressOffset>0x520</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CR</name>
                        <displayName>GPIOA0_CR</displayName>
                        <description>0x4000 5524 0x4000 6524 0x4000 7524 0x4002 4524 GPIO Commit (GPIOCR)@@ offset 0x524 The GPIOCR register is the commit register. The value of the GPIOCR register determines which bits of the GPIOAFSEL@@ GPIOPUR@@ GPIOPDR@@ and GPIODEN registers are committed when a write to these registers is performed. If a bit in the GPIOCR register is cleared@@ the data being written to the corresponding bit in the GPIOAFSEL@@ GPIOPUR@@ GPIOPDR@@ or GPIODEN registers cannot be committed and retains its previous value. If a bit in the GPIOCR register is set@@ the data being written to the corresponding bit of the GPIOAFSEL@@ GPIOPUR@@ GPIOPDR@@ or GPIODEN registers is committed to the register and reflects the new value. The contents of the GPIOCR register can only be modified if the status in the GPIOLOCK register is unlocked. Writes to the GPIOCR register are ignored if the status in the GPIOLOCK register is locked.</description>
                        <addressOffset>0x524</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>AMSEL</name>
                        <displayName>GPIOA0_AMSEL</displayName>
                        <description>0x4000 5528 0x4000 6528 0x4000 7528 0x4002 4528 The GPIOAMSEL register controls isolation circuits to the analog side of a unified I/O pad. Because the GPIOs may be driven by a 5-V source and affect analog operation@@ analog circuitry requires isolation from the pins when they are not used in their analog function. Each bit of this register controls the isolation circuitry for the corresponding GPIO signal.</description>
                        <addressOffset>0x528</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCTL</name>
                        <displayName>GPIOA0_PCTL</displayName>
                        <description>This register is not used in cc3xx. equivalant register exsist outside GPIO IP (refer PAD*_config register in the shared comn space) 0x4000 552C 0x4000 652C 0x4000 752C 0x4002 452C GPIO Port Control (GPIOPCTL)@@ offset 0x52C The GPIOPCTL register is used in conjunction with the GPIOAFSEL register and selects the specific peripheral signal for each GPIO pin when using the alternate function mode. Most bits in the GPIOAFSEL register are cleared on reset@@ therefore most GPIO pins are configured as GPIOs by default. When a bit is set in the GPIOAFSEL register@@ the corresponding GPIO signal is controlled by an associated peripheral. The GPIOPCTL register selects one out of a set of peripheral functions for each GPIO@@ providing additional flexibility in signal definition.</description>
                        <addressOffset>0x52C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ADCCTL</name>
                        <displayName>GPIOA0_ADCCTL</displayName>
                        <description>This register is not used in cc3xx. ADC trigger via GPIO is not supported. 0x4000 5530 0x4000 6530 0x4000 7530 0x4002 4530 GPIO ADC Control (GPIOADCCTL)@@ offset 0x530 This register is used to configure a GPIO pin as a source for the ADC trigger. Note that if the Port B GPIOADCCTL register is cleared@@ PB4 can still be used as an external trigger for the ADC. This is a legacy mode which allows code written for previous Stellaris devices to operate on this microcontroller.</description>
                        <addressOffset>0x530</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DMACTL</name>
                        <displayName>GPIOA0_DMACTL</displayName>
                        <description>0x4000 5534 0x4000 6534 0x4000 7534 0x4002 4534 GPIO DMA Control (GPIODMACTL)@@ offset 0x534 This register is used to configure a GPIO pin as a source for the ?DMA trigger.</description>
                        <addressOffset>0x534</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SI</name>
                        <displayName>GPIOA0_SI</displayName>
                        <description>0x4000 5538 0x4000 6538 0x4000 7538 0x4002 4538 GPIO Select Interrupt (GPIOSI)@@ offset 0x538 This register is used to enable individual interrupts for each pin. Note: This register is only available on Port P and Port Q.</description>
                        <addressOffset>0x538</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID4</name>
                        <displayName>GPIOA0_PERIPHID4</displayName>
                        <description>0x4000 5FD0 0x4000 6FD0 0x4000 7FD0 0x4002 4FD0 GPIO Peripheral Identification 4 (GPIOPeriphID4)@@ offset 0xFD0 The GPIOPeriphID4@@ GPIOPeriphID5@@ GPIOPeriphID6@@ and GPIOPeriphID7 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFD0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID5</name>
                        <displayName>GPIOA0_PERIPHID5</displayName>
                        <description>0x4000 5FD4 0x4000 6FD4 0x4000 7FD4 0x4002 4FD4 GPIO Peripheral Identification 5 (GPIOPeriphID5)@@ offset 0xFD4 The GPIOPeriphID4@@ GPIOPeriphID5@@ GPIOPeriphID6@@ and GPIOPeriphID7 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFD4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID6</name>
                        <displayName>GPIOA0_PERIPHID6</displayName>
                        <description>0x4000 5FD8 0x4000 6FD8 0x4000 7FD8 0x4002 4FD8 GPIO Peripheral Identification 6 (GPIOPeriphID6)@@ offset 0xFD8 The GPIOPeriphID4@@ GPIOPeriphID5@@ GPIOPeriphID6@@ and GPIOPeriphID7 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFD8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID7</name>
                        <displayName>GPIOA0_PERIPHID7</displayName>
                        <description>0x4000 5FDC 0x4000 6FDC 0x4000 7FDC 0x4002 4FDC GPIO Peripheral Identification 7 (GPIOPeriphID7)@@ offset 0xFDC The GPIOPeriphID4@@ GPIOPeriphID5@@ GPIOPeriphID6@@ and GPIOPeriphID7 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFDC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID0</name>
                        <displayName>GPIOA0_PERIPHID0</displayName>
                        <description>0x4000 5FE0 0x4000 6FE0 0x4000 7FE0 0x4002 4FE0 GPIO Peripheral Identification 0 (GPIOPeriphID0)@@ offset 0xFE0 The GPIOPeriphID0@@ GPIOPeriphID1@@ GPIOPeriphID2@@ and GPIOPeriphID3 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFE0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID1</name>
                        <displayName>GPIOA0_PERIPHID1</displayName>
                        <description>0x4000 5FE4 0x4000 6FE4 0x4000 7FE4 0x4002 4FE4 GPIO Peripheral Identification 1 (GPIOPeriphID1)@@ offset 0xFE4 The GPIOPeriphID0@@ GPIOPeriphID1@@ GPIOPeriphID2@@ and GPIOPeriphID3 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFE4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID2</name>
                        <displayName>GPIOA0_PERIPHID2</displayName>
                        <description>0x4000 5FE8 0x4000 6FE8 0x4000 7FE8 0x4002 4FE8 GPIO Peripheral Identification 2 (GPIOPeriphID2)@@ offset 0xFE8 The GPIOPeriphID0@@ GPIOPeriphID1@@ GPIOPeriphID2@@ and GPIOPeriphID3 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFE8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID3</name>
                        <displayName>GPIOA0_PERIPHID3</displayName>
                        <description>0x4000 5FEC 0x4000 6FEC 0x4000 7FEC 0x4002 4FEC GPIO Peripheral Identification 3 (GPIOPeriphID3)@@ offset 0xFEC The GPIOPeriphID0@@ GPIOPeriphID1@@ GPIOPeriphID2@@ and GPIOPeriphID3 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFEC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCELLID0</name>
                        <displayName>GPIOA0_PCELLID0</displayName>
                        <description>0x4000 5FF0 0x4000 6FF0 0x4000 7FF0 0x4002 4FF0 GPIO PrimeCell Identification 0 (GPIOPCellID0)@@ offset 0xFF0 The GPIOPCellID0@@ GPIOPCellID1@@ GPIOPCellID2@@ and GPIOPCellID3 registers are four 8-bit wide registers@@ that can conceptually be treated as one 32-bit register. The register is used as a standard cross-peripheral identification system.</description>
                        <addressOffset>0xFF0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCELLID1</name>
                        <displayName>GPIOA0_PCELLID1</displayName>
                        <description>0x4000 5FF4 0x4000 6FF4 0x4000 7FF4 0x4002 4FF4 GPIO PrimeCell Identification 1 (GPIOPCellID1)@@ offset 0xFF4 The GPIOPCellID0@@ GPIOPCellID1@@ GPIOPCellID2@@ and GPIOPCellID3 registers are four 8-bit wide registers@@ that can conceptually be treated as one 32-bit register. The register is used as a standard cross-peripheral identification system.</description>
                        <addressOffset>0xFF4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCELLID2</name>
                        <displayName>GPIOA0_PCELLID2</displayName>
                        <description>0x4000 5FF8 0x4000 6FF8 0x4000 7FF8 0x4002 4FF8 GPIO PrimeCell Identification 2 (GPIOPCellID2)@@ offset 0xFF8 The GPIOPCellID0@@ GPIOPCellID1@@ GPIOPCellID2@@ and GPIOPCellID3 registers are four 8-bit wide registers@@ that can conceptually be treated as one 32-bit register. The register is used as a standard cross-peripheral identification system.</description>
                        <addressOffset>0xFF8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCELLID3</name>
                        <displayName>GPIOA0_PCELLID3</displayName>
                        <description>0x4000 5FFC 0x4000 6FFC 0x4000 7FFC 0x4002 4FFC GPIO PrimeCell Identification 3 (GPIOPCellID3)@@ offset 0xFFC The GPIOPCellID0@@ GPIOPCellID1@@ GPIOPCellID2@@ and GPIOPCellID3 registers are four 8-bit wide registers@@ that can conceptually be treated as one 32-bit register. The register is used as a standard cross-peripheral identification system.0xb1 ****************************************************************************</description>
                        <addressOffset>0xFFC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>GPIOA1</name>
                <version>1.0</version>
                <description>GPIOA1</description>
                <baseAddress>0x40005000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>DATA</name>
                        <displayName>GPIOA1_DATA</displayName>
                        <description>0x4000 5000 0x4000 6000 0x4000 7000 0x4002 4000 GPIO Data (GPIODATA)@@ offset 0x000 The GPIODATA register is the data register. In software control mode@@ values written in the GPIODATA register are transferred onto the GPIO port pins if the respective pins have been configured as outputs through the GPIO Direction (GPIODIR) register (see page 653). In order to write to GPIODATA@@ the corresponding bits in the mask@@ resulting from the address bus bits [9:2]@@ must be set. Otherwise@@ the bit values remain unchanged by the write. Similarly@@ the values read from this register are determined for each bit by the mask bit derived from the address used to access the data register@@ bits [9:2]. Bits that are set in the address mask cause the corresponding bits in GPIODATA to be read@@ and bits that are clear in the address mask cause the corresponding bits in GPIODATA to be read as 0@@ regardless of their value. A read from GPIODATA returns the last bit value written if the respective pins are configured as outputs@@ or it returns the value on the corresponding input pin when these are configured as inputs. All bits are cleared by a reset.</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DIR</name>
                        <displayName>GPIOA1_DIR</displayName>
                        <description>0x4000 5400 0x4000 6400 0x4000 7400 0x4002 4400 GPIO Direction (GPIODIR)@@ offset 0x400 The GPIODIR register is the data direction register. Setting a bit in the GPIODIR register configures the corresponding pin to be an output@@ while clearing a bit configures the corresponding pin to be an input. All bits are cleared by a reset@@ meaning all GPIO pins are inputs by default.</description>
                        <addressOffset>0x400</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IS</name>
                        <displayName>GPIOA1_IS</displayName>
                        <description>0x4000 5404 0x4000 6404 0x4000 7404 0x4002 4404 GPIO Interrupt Sense (GPIOIS)@@ offset 0x404 The GPIOIS register is the interrupt sense register. Setting a bit in the GPIOIS register configures the corresponding pin to detect levels@@ while clearing a bit configures the corresponding pin to detect edges. All bits are cleared by a reset.</description>
                        <addressOffset>0x404</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IBE</name>
                        <displayName>GPIOA1_IBE</displayName>
                        <description>0x4000 5408 0x4000 6408 0x4000 7408 0x4002 4408 GPIO Interrupt Both Edges (GPIOIBE)@@ offset 0x408 The GPIOIBE register allows both edges to cause interrupts. When the corresponding bit in the GPIO Interrupt Sense (GPIOIS) register is set to detect edges@@ setting a bit in the GPIOIBE register configures the corresponding pin to detect both rising and falling edges@@ regardless of the corresponding bit in the GPIO Interrupt Event (GPIOIEV) register . Clearing a bit configures the pin to be controlled by the GPIOIEV register. All bits are cleared by a reset.</description>
                        <addressOffset>0x408</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IEV</name>
                        <displayName>GPIOA1_IEV</displayName>
                        <description>0x4000 540C 0x4000 640C 0x4000 740C 0x4002 440C GPIO Interrupt Event (GPIOIEV)@@ offset 0x40C The GPIOIEV register is the interrupt event register. Setting a bit in the GPIOIEV register configures the corresponding pin to detect rising edges or high levels@@ depending on the corresponding bit value in the GPIO Interrupt Sense (GPIOIS) register . Clearing a bit configures the pin to detect falling edges or low levels@@ depending on the corresponding bit value in the GPIOIS register. All bits are cleared by a reset.</description>
                        <addressOffset>0x40C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IM</name>
                        <displayName>GPIOA1_IM</displayName>
                        <description>0x4000 5410 0x4000 6410 0x4000 7410 0x4002 4410 GPIO Interrupt Mask (GPIOIM)@@ offset 0x410 The GPIOIM register is the interrupt mask register. Setting a bit in the GPIOIM register allows interrupts that are generated by the corresponding pin to be sent to the interrupt controller on the combined interrupt signal. Clearing a bit prevents an interrupt on the corresponding pin from being sent to the interrupt controller. All bits are cleared by a reset.</description>
                        <addressOffset>0x410</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RIS</name>
                        <displayName>GPIOA1_RIS</displayName>
                        <description>0x4000 5414 0x4000 6414 0x4000 7414 0x4002 4414 GPIO Raw Interrupt Status (GPIORIS)@@ offset 0x414 The GPIORIS register is the raw interrupt status register. A bit in this register is set when an interrupt condition occurs on the corresponding GPIO pin. If the corresponding bit in the GPIO Interrupt Mask (GPIOIM) register is set@@ the interrupt is sent to the interrupt controller. Bits read as zero indicate that corresponding input pins have not initiated an interrupt. A bit in this register can be cleared by writing a 1 to the corresponding bit in the GPIO Interrupt Clear (GPIOICR) register.</description>
                        <addressOffset>0x414</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MIS</name>
                        <displayName>GPIOA1_MIS</displayName>
                        <description>0x4000 5418 0x4000 6418 0x4000 7418 0x4002 4418 GPIO Masked Interrupt Status (GPIOMIS)@@ offset 0x418 The GPIOMIS register is the masked interrupt status register. If a bit is set in this register@@ the corresponding interrupt has triggered an interrupt to the interrupt controller. If a bit is clear@@ either no interrupt has been generated@@ or the interrupt is masked. If no port pin@@ other than the one that is being used as an ADC trigger@@ is being used to generate interrupts@@ the appropriate Interrupt Set Enable (ENn) register can disable the interrupts for the port@@ and the ADC interrupt can be used to read back the converted data. Otherwise@@ the port interrupt handler must ignore and clear interrupts on the port pin and wait for the ADC interrupt@@ or the ADC interrupt must be disabled in the EN0 register and the port interrupt handler must poll the ADC registers until the conversion is completed. If no port pin@@ other than the one that is being used as an ADC trigger@@ is being used to generate interrupts@@ the appropriate Interrupt Set Enable (ENn) register can disable the interrupts for the port@@ and the ADC interrupt can be used to read back the converted data. Otherwise@@ the port interrupt handler must ignore and clear interrupts on the port pin and wait for the ADC interrupt@@ or the ADC interrupt must be disabled in the EN0 register and the port interrupt handler must poll the ADC registers until the conversion is completed. Note that if the Port B GPIOADCCTL register is cleared@@ PB4 can still be used as an external trigger for the ADC. This is a legacy mode which allows code written for previous Stellaris devices to operate on this microcontroller. GPIOMIS is the state of the interrupt after masking.</description>
                        <addressOffset>0x418</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ICR</name>
                        <displayName>GPIOA1_ICR</displayName>
                        <description>0x4000 541C 0x4000 641C 0x4000 741C 0x4002 441C GPIO Interrupt Clear (GPIOICR)@@ offset 0x41C The GPIOICR register is the interrupt clear register. Writing a 1 to a bit in this register clears the corresponding interrupt bit in the GPIORIS and GPIOMIS registers. Writing a 0 has no effect.</description>
                        <addressOffset>0x41C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>AFSEL</name>
                        <displayName>GPIOA1_AFSEL</displayName>
                        <description>0x4000 5420 0x4000 6420 0x4000 7420 0x4002 4420 GPIO Alternate Function Select (GPIOAFSEL)@@ offset 0x420 The GPIOAFSEL register is the mode control select register. If a bit is clear@@ the pin is used as a GPIO and is controlled by the GPIO registers. Setting a bit in this register configures the corresponding GPIO line to be controlled by an associated peripheral. Several possible peripheral functions are multiplexed on each GPIO. The GPIO Port Control (GPIOPCTL) register is used to select one of the possible functions.</description>
                        <addressOffset>0x420</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DR2R</name>
                        <displayName>GPIOA1_DR2R</displayName>
                        <description>0x4000 5500 0x4000 6500 0x4000 7500 0x4002 4500 GPIO 2-mA Drive Select (GPIODR2R)@@ offset 0x500 The GPIODR2R register is the 2-mA drive control register. Each GPIO signal in the port can be individually configured without affecting the other pads. When setting the DRV2 bit for a GPIO signal@@ the corresponding DRV4 bit in the GPIODR4R register and DRV8 bit in the GPIODR8R register are automatically cleared by hardware. By default@@ all GPIO pins have 2-mA drive.</description>
                        <addressOffset>0x500</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DR4R</name>
                        <displayName>GPIOA1_DR4R</displayName>
                        <description>0x4000 5504 0x4000 6504 0x4000 7504 0x4002 4504 GPIO 4-mA Drive Select (GPIODR4R)@@ offset 0x504 The GPIODR4R register is the 4-mA drive control register. Each GPIO signal in the port can be individually configured without affecting the other pads. When setting the DRV4 bit for a GPIO signal@@ the corresponding DRV2 bit in the GPIODR2R register and DRV8 bit in the GPIODR8R register are automatically cleared by hardware.</description>
                        <addressOffset>0x504</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DR8R</name>
                        <displayName>GPIOA1_DR8R</displayName>
                        <description>0x4000 5508 0x4000 6508 0x4000 7508 0x4002 4508 GPIO 8-mA Drive Select (GPIODR8R)@@ offset 0x508 The GPIODR8R register is the 8-mA drive control register. Each GPIO signal in the port can be individually configured without affecting the other pads. When setting the DRV8 bit for a GPIO signal@@ the corresponding DRV2 bit in the GPIODR2R register and DRV4 bit in the GPIODR4R register are automatically cleared by hardware. The 8-mA setting is also used for high-current operation. Note: There is no configuration difference between 8-mA and high-current operation. The additional current capacity results from a shift in the VOH/VOL levels.</description>
                        <addressOffset>0x508</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ODR</name>
                        <displayName>GPIOA1_ODR</displayName>
                        <description>0x4000 550C 0x4000 650C 0x4000 750C 0x4002 450C GPIO Open Drain Select (GPIOODR)@@ offset 0x50C The GPIOODR register is the open drain control register. Setting a bit in this register enables the open-drain configuration of the corresponding GPIO pad. When open-drain mode is enabled@@ the corresponding bit should also be set in the GPIO Digital Input Enable (GPIODEN) register . Corresponding bits in the drive strength and slew rate control registers (GPIODR2R@@ GPIODR4R@@ GPIODR8R@@ and GPIOSLR) can be set to achieve the desired rise and fall times. The GPIO acts as an open-drain input if the corresponding bit in the GPIODIR register is cleared. If open drain is selected while the GPIO is configured as an input@@ the GPIO will remain an input and the open-drain selection has no effect until the GPIO is changed to an output. When using the I2C module@@ in addition to configuring the pin to open drain@@ the GPIO Alternate Function Select (GPIOAFSEL) register bits for the I2C clock and data pins should be set</description>
                        <addressOffset>0x50C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PUR</name>
                        <displayName>GPIOA1_PUR</displayName>
                        <description>0x4000 5510 0x4000 6510 0x4000 7510 0x4002 4510 GPIO Pull-Up Select (GPIOPUR)@@ offset 0x510 The GPIOPUR register is the pull-up control register. When a bit is set@@ a weak pull-up resistor on the corresponding GPIO signal is enabled. Setting a bit in GPIOPUR automatically clears the corresponding bit in the GPIO Pull-Down Select (GPIOPDR) register . Write access to this register is protected with the GPIOCR register. Bits in GPIOCR that are cleared prevent writes to the equivalent bit in this register.</description>
                        <addressOffset>0x510</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PDR</name>
                        <displayName>GPIOA1_PDR</displayName>
                        <description>0x4000 5514 0x4000 6514 0x4000 7514 0x4002 4514 GPIO Pull-Down Select (GPIOPDR)@@ offset 0x514 The GPIOPDR register is the pull-down control register. When a bit is set@@ a weak pull-down resistor on the corresponding GPIO signal is enabled. Setting a bit in GPIOPDR automatically clears the corresponding bit in the GPIO Pull-Up Select (GPIOPUR) register</description>
                        <addressOffset>0x514</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SLR</name>
                        <displayName>GPIOA1_SLR</displayName>
                        <description>0x4000 5518 0x4000 6518 0x4000 7518 0x4002 4518 The GPIOSLR register is the slew rate control register. Slew rate control is only available when using the 8-mA drive strength option via the GPIO 8-mA Drive Select (GPIODR8R) register</description>
                        <addressOffset>0x518</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DEN</name>
                        <displayName>GPIOA1_DEN</displayName>
                        <description>0x4000 551C 0x4000 651C 0x4000 751C 0x4002 451C GPIO Digital Enable (GPIODEN)@@ offset 0x51C Note: Pins configured as digital inputs are Schmitt-triggered. The GPIODEN register is the digital enable register. By default@@ all GPIO signals except those listed below are configured out of reset to be undriven (tristate). Their digital function is disabled; they do not drive a logic value on the pin and they do not allow the pin voltage into the GPIO receiver. To use the pin as a digital input or output (either GPIO or alternate function)@@ the corresponding GPIODEN bit must be set.</description>
                        <addressOffset>0x51C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>LOCK</name>
                        <displayName>GPIOA1_LOCK</displayName>
                        <description>0x4000 5520 0x4000 6520 0x4000 7520 0x4002 4520 GPIO Lock (GPIOLOCK)@@ offset 0x520 The GPIOLOCK register enables write access to the GPIOCR register . Writing 0x4C4F.434B to the GPIOLOCK register unlocks the GPIOCR register. Writing any other value to the GPIOLOCK register re-enables the locked state. Reading the GPIOLOCK register returns the lock status rather than the 32-bit value that was previously written. Therefore@@ when write accesses are disabled@@ or locked@@ reading the GPIOLOCK register returns 0x0000.0001. When write accesses are enabled@@ or unlocked@@ reading the GPIOLOCK register returns 0x0000.0000.</description>
                        <addressOffset>0x520</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CR</name>
                        <displayName>GPIOA1_CR</displayName>
                        <description>0x4000 5524 0x4000 6524 0x4000 7524 0x4002 4524 GPIO Commit (GPIOCR)@@ offset 0x524 The GPIOCR register is the commit register. The value of the GPIOCR register determines which bits of the GPIOAFSEL@@ GPIOPUR@@ GPIOPDR@@ and GPIODEN registers are committed when a write to these registers is performed. If a bit in the GPIOCR register is cleared@@ the data being written to the corresponding bit in the GPIOAFSEL@@ GPIOPUR@@ GPIOPDR@@ or GPIODEN registers cannot be committed and retains its previous value. If a bit in the GPIOCR register is set@@ the data being written to the corresponding bit of the GPIOAFSEL@@ GPIOPUR@@ GPIOPDR@@ or GPIODEN registers is committed to the register and reflects the new value. The contents of the GPIOCR register can only be modified if the status in the GPIOLOCK register is unlocked. Writes to the GPIOCR register are ignored if the status in the GPIOLOCK register is locked.</description>
                        <addressOffset>0x524</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>AMSEL</name>
                        <displayName>GPIOA1_AMSEL</displayName>
                        <description>0x4000 5528 0x4000 6528 0x4000 7528 0x4002 4528 The GPIOAMSEL register controls isolation circuits to the analog side of a unified I/O pad. Because the GPIOs may be driven by a 5-V source and affect analog operation@@ analog circuitry requires isolation from the pins when they are not used in their analog function. Each bit of this register controls the isolation circuitry for the corresponding GPIO signal.</description>
                        <addressOffset>0x528</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCTL</name>
                        <displayName>GPIOA1_PCTL</displayName>
                        <description>This register is not used in cc3xx. equivalant register exsist outside GPIO IP (refer PAD*_config register in the shared comn space) 0x4000 552C 0x4000 652C 0x4000 752C 0x4002 452C GPIO Port Control (GPIOPCTL)@@ offset 0x52C The GPIOPCTL register is used in conjunction with the GPIOAFSEL register and selects the specific peripheral signal for each GPIO pin when using the alternate function mode. Most bits in the GPIOAFSEL register are cleared on reset@@ therefore most GPIO pins are configured as GPIOs by default. When a bit is set in the GPIOAFSEL register@@ the corresponding GPIO signal is controlled by an associated peripheral. The GPIOPCTL register selects one out of a set of peripheral functions for each GPIO@@ providing additional flexibility in signal definition.</description>
                        <addressOffset>0x52C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ADCCTL</name>
                        <displayName>GPIOA1_ADCCTL</displayName>
                        <description>This register is not used in cc3xx. ADC trigger via GPIO is not supported. 0x4000 5530 0x4000 6530 0x4000 7530 0x4002 4530 GPIO ADC Control (GPIOADCCTL)@@ offset 0x530 This register is used to configure a GPIO pin as a source for the ADC trigger. Note that if the Port B GPIOADCCTL register is cleared@@ PB4 can still be used as an external trigger for the ADC. This is a legacy mode which allows code written for previous Stellaris devices to operate on this microcontroller.</description>
                        <addressOffset>0x530</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DMACTL</name>
                        <displayName>GPIOA1_DMACTL</displayName>
                        <description>0x4000 5534 0x4000 6534 0x4000 7534 0x4002 4534 GPIO DMA Control (GPIODMACTL)@@ offset 0x534 This register is used to configure a GPIO pin as a source for the ?DMA trigger.</description>
                        <addressOffset>0x534</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SI</name>
                        <displayName>GPIOA1_SI</displayName>
                        <description>0x4000 5538 0x4000 6538 0x4000 7538 0x4002 4538 GPIO Select Interrupt (GPIOSI)@@ offset 0x538 This register is used to enable individual interrupts for each pin. Note: This register is only available on Port P and Port Q.</description>
                        <addressOffset>0x538</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID4</name>
                        <displayName>GPIOA1_PERIPHID4</displayName>
                        <description>0x4000 5FD0 0x4000 6FD0 0x4000 7FD0 0x4002 4FD0 GPIO Peripheral Identification 4 (GPIOPeriphID4)@@ offset 0xFD0 The GPIOPeriphID4@@ GPIOPeriphID5@@ GPIOPeriphID6@@ and GPIOPeriphID7 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFD0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID5</name>
                        <displayName>GPIOA1_PERIPHID5</displayName>
                        <description>0x4000 5FD4 0x4000 6FD4 0x4000 7FD4 0x4002 4FD4 GPIO Peripheral Identification 5 (GPIOPeriphID5)@@ offset 0xFD4 The GPIOPeriphID4@@ GPIOPeriphID5@@ GPIOPeriphID6@@ and GPIOPeriphID7 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFD4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID6</name>
                        <displayName>GPIOA1_PERIPHID6</displayName>
                        <description>0x4000 5FD8 0x4000 6FD8 0x4000 7FD8 0x4002 4FD8 GPIO Peripheral Identification 6 (GPIOPeriphID6)@@ offset 0xFD8 The GPIOPeriphID4@@ GPIOPeriphID5@@ GPIOPeriphID6@@ and GPIOPeriphID7 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFD8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID7</name>
                        <displayName>GPIOA1_PERIPHID7</displayName>
                        <description>0x4000 5FDC 0x4000 6FDC 0x4000 7FDC 0x4002 4FDC GPIO Peripheral Identification 7 (GPIOPeriphID7)@@ offset 0xFDC The GPIOPeriphID4@@ GPIOPeriphID5@@ GPIOPeriphID6@@ and GPIOPeriphID7 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFDC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID0</name>
                        <displayName>GPIOA1_PERIPHID0</displayName>
                        <description>0x4000 5FE0 0x4000 6FE0 0x4000 7FE0 0x4002 4FE0 GPIO Peripheral Identification 0 (GPIOPeriphID0)@@ offset 0xFE0 The GPIOPeriphID0@@ GPIOPeriphID1@@ GPIOPeriphID2@@ and GPIOPeriphID3 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFE0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID1</name>
                        <displayName>GPIOA1_PERIPHID1</displayName>
                        <description>0x4000 5FE4 0x4000 6FE4 0x4000 7FE4 0x4002 4FE4 GPIO Peripheral Identification 1 (GPIOPeriphID1)@@ offset 0xFE4 The GPIOPeriphID0@@ GPIOPeriphID1@@ GPIOPeriphID2@@ and GPIOPeriphID3 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFE4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID2</name>
                        <displayName>GPIOA1_PERIPHID2</displayName>
                        <description>0x4000 5FE8 0x4000 6FE8 0x4000 7FE8 0x4002 4FE8 GPIO Peripheral Identification 2 (GPIOPeriphID2)@@ offset 0xFE8 The GPIOPeriphID0@@ GPIOPeriphID1@@ GPIOPeriphID2@@ and GPIOPeriphID3 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFE8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID3</name>
                        <displayName>GPIOA1_PERIPHID3</displayName>
                        <description>0x4000 5FEC 0x4000 6FEC 0x4000 7FEC 0x4002 4FEC GPIO Peripheral Identification 3 (GPIOPeriphID3)@@ offset 0xFEC The GPIOPeriphID0@@ GPIOPeriphID1@@ GPIOPeriphID2@@ and GPIOPeriphID3 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFEC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCELLID0</name>
                        <displayName>GPIOA1_PCELLID0</displayName>
                        <description>0x4000 5FF0 0x4000 6FF0 0x4000 7FF0 0x4002 4FF0 GPIO PrimeCell Identification 0 (GPIOPCellID0)@@ offset 0xFF0 The GPIOPCellID0@@ GPIOPCellID1@@ GPIOPCellID2@@ and GPIOPCellID3 registers are four 8-bit wide registers@@ that can conceptually be treated as one 32-bit register. The register is used as a standard cross-peripheral identification system.</description>
                        <addressOffset>0xFF0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCELLID1</name>
                        <displayName>GPIOA1_PCELLID1</displayName>
                        <description>0x4000 5FF4 0x4000 6FF4 0x4000 7FF4 0x4002 4FF4 GPIO PrimeCell Identification 1 (GPIOPCellID1)@@ offset 0xFF4 The GPIOPCellID0@@ GPIOPCellID1@@ GPIOPCellID2@@ and GPIOPCellID3 registers are four 8-bit wide registers@@ that can conceptually be treated as one 32-bit register. The register is used as a standard cross-peripheral identification system.</description>
                        <addressOffset>0xFF4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCELLID2</name>
                        <displayName>GPIOA1_PCELLID2</displayName>
                        <description>0x4000 5FF8 0x4000 6FF8 0x4000 7FF8 0x4002 4FF8 GPIO PrimeCell Identification 2 (GPIOPCellID2)@@ offset 0xFF8 The GPIOPCellID0@@ GPIOPCellID1@@ GPIOPCellID2@@ and GPIOPCellID3 registers are four 8-bit wide registers@@ that can conceptually be treated as one 32-bit register. The register is used as a standard cross-peripheral identification system.</description>
                        <addressOffset>0xFF8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCELLID3</name>
                        <displayName>GPIOA1_PCELLID3</displayName>
                        <description>0x4000 5FFC 0x4000 6FFC 0x4000 7FFC 0x4002 4FFC GPIO PrimeCell Identification 3 (GPIOPCellID3)@@ offset 0xFFC The GPIOPCellID0@@ GPIOPCellID1@@ GPIOPCellID2@@ and GPIOPCellID3 registers are four 8-bit wide registers@@ that can conceptually be treated as one 32-bit register. The register is used as a standard cross-peripheral identification system.0xb1 ****************************************************************************</description>
                        <addressOffset>0xFFC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>GPIOA2</name>
                <version>1.0</version>
                <description>GPIOA2</description>
                <baseAddress>0x40006000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>DATA</name>
                        <displayName>GPIOA2_DATA</displayName>
                        <description>0x4000 5000 0x4000 6000 0x4000 7000 0x4002 4000 GPIO Data (GPIODATA)@@ offset 0x000 The GPIODATA register is the data register. In software control mode@@ values written in the GPIODATA register are transferred onto the GPIO port pins if the respective pins have been configured as outputs through the GPIO Direction (GPIODIR) register (see page 653). In order to write to GPIODATA@@ the corresponding bits in the mask@@ resulting from the address bus bits [9:2]@@ must be set. Otherwise@@ the bit values remain unchanged by the write. Similarly@@ the values read from this register are determined for each bit by the mask bit derived from the address used to access the data register@@ bits [9:2]. Bits that are set in the address mask cause the corresponding bits in GPIODATA to be read@@ and bits that are clear in the address mask cause the corresponding bits in GPIODATA to be read as 0@@ regardless of their value. A read from GPIODATA returns the last bit value written if the respective pins are configured as outputs@@ or it returns the value on the corresponding input pin when these are configured as inputs. All bits are cleared by a reset.</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DIR</name>
                        <displayName>GPIOA2_DIR</displayName>
                        <description>0x4000 5400 0x4000 6400 0x4000 7400 0x4002 4400 GPIO Direction (GPIODIR)@@ offset 0x400 The GPIODIR register is the data direction register. Setting a bit in the GPIODIR register configures the corresponding pin to be an output@@ while clearing a bit configures the corresponding pin to be an input. All bits are cleared by a reset@@ meaning all GPIO pins are inputs by default.</description>
                        <addressOffset>0x400</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IS</name>
                        <displayName>GPIOA2_IS</displayName>
                        <description>0x4000 5404 0x4000 6404 0x4000 7404 0x4002 4404 GPIO Interrupt Sense (GPIOIS)@@ offset 0x404 The GPIOIS register is the interrupt sense register. Setting a bit in the GPIOIS register configures the corresponding pin to detect levels@@ while clearing a bit configures the corresponding pin to detect edges. All bits are cleared by a reset.</description>
                        <addressOffset>0x404</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IBE</name>
                        <displayName>GPIOA2_IBE</displayName>
                        <description>0x4000 5408 0x4000 6408 0x4000 7408 0x4002 4408 GPIO Interrupt Both Edges (GPIOIBE)@@ offset 0x408 The GPIOIBE register allows both edges to cause interrupts. When the corresponding bit in the GPIO Interrupt Sense (GPIOIS) register is set to detect edges@@ setting a bit in the GPIOIBE register configures the corresponding pin to detect both rising and falling edges@@ regardless of the corresponding bit in the GPIO Interrupt Event (GPIOIEV) register . Clearing a bit configures the pin to be controlled by the GPIOIEV register. All bits are cleared by a reset.</description>
                        <addressOffset>0x408</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IEV</name>
                        <displayName>GPIOA2_IEV</displayName>
                        <description>0x4000 540C 0x4000 640C 0x4000 740C 0x4002 440C GPIO Interrupt Event (GPIOIEV)@@ offset 0x40C The GPIOIEV register is the interrupt event register. Setting a bit in the GPIOIEV register configures the corresponding pin to detect rising edges or high levels@@ depending on the corresponding bit value in the GPIO Interrupt Sense (GPIOIS) register . Clearing a bit configures the pin to detect falling edges or low levels@@ depending on the corresponding bit value in the GPIOIS register. All bits are cleared by a reset.</description>
                        <addressOffset>0x40C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IM</name>
                        <displayName>GPIOA2_IM</displayName>
                        <description>0x4000 5410 0x4000 6410 0x4000 7410 0x4002 4410 GPIO Interrupt Mask (GPIOIM)@@ offset 0x410 The GPIOIM register is the interrupt mask register. Setting a bit in the GPIOIM register allows interrupts that are generated by the corresponding pin to be sent to the interrupt controller on the combined interrupt signal. Clearing a bit prevents an interrupt on the corresponding pin from being sent to the interrupt controller. All bits are cleared by a reset.</description>
                        <addressOffset>0x410</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RIS</name>
                        <displayName>GPIOA2_RIS</displayName>
                        <description>0x4000 5414 0x4000 6414 0x4000 7414 0x4002 4414 GPIO Raw Interrupt Status (GPIORIS)@@ offset 0x414 The GPIORIS register is the raw interrupt status register. A bit in this register is set when an interrupt condition occurs on the corresponding GPIO pin. If the corresponding bit in the GPIO Interrupt Mask (GPIOIM) register is set@@ the interrupt is sent to the interrupt controller. Bits read as zero indicate that corresponding input pins have not initiated an interrupt. A bit in this register can be cleared by writing a 1 to the corresponding bit in the GPIO Interrupt Clear (GPIOICR) register.</description>
                        <addressOffset>0x414</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MIS</name>
                        <displayName>GPIOA2_MIS</displayName>
                        <description>0x4000 5418 0x4000 6418 0x4000 7418 0x4002 4418 GPIO Masked Interrupt Status (GPIOMIS)@@ offset 0x418 The GPIOMIS register is the masked interrupt status register. If a bit is set in this register@@ the corresponding interrupt has triggered an interrupt to the interrupt controller. If a bit is clear@@ either no interrupt has been generated@@ or the interrupt is masked. If no port pin@@ other than the one that is being used as an ADC trigger@@ is being used to generate interrupts@@ the appropriate Interrupt Set Enable (ENn) register can disable the interrupts for the port@@ and the ADC interrupt can be used to read back the converted data. Otherwise@@ the port interrupt handler must ignore and clear interrupts on the port pin and wait for the ADC interrupt@@ or the ADC interrupt must be disabled in the EN0 register and the port interrupt handler must poll the ADC registers until the conversion is completed. If no port pin@@ other than the one that is being used as an ADC trigger@@ is being used to generate interrupts@@ the appropriate Interrupt Set Enable (ENn) register can disable the interrupts for the port@@ and the ADC interrupt can be used to read back the converted data. Otherwise@@ the port interrupt handler must ignore and clear interrupts on the port pin and wait for the ADC interrupt@@ or the ADC interrupt must be disabled in the EN0 register and the port interrupt handler must poll the ADC registers until the conversion is completed. Note that if the Port B GPIOADCCTL register is cleared@@ PB4 can still be used as an external trigger for the ADC. This is a legacy mode which allows code written for previous Stellaris devices to operate on this microcontroller. GPIOMIS is the state of the interrupt after masking.</description>
                        <addressOffset>0x418</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ICR</name>
                        <displayName>GPIOA2_ICR</displayName>
                        <description>0x4000 541C 0x4000 641C 0x4000 741C 0x4002 441C GPIO Interrupt Clear (GPIOICR)@@ offset 0x41C The GPIOICR register is the interrupt clear register. Writing a 1 to a bit in this register clears the corresponding interrupt bit in the GPIORIS and GPIOMIS registers. Writing a 0 has no effect.</description>
                        <addressOffset>0x41C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>AFSEL</name>
                        <displayName>GPIOA2_AFSEL</displayName>
                        <description>0x4000 5420 0x4000 6420 0x4000 7420 0x4002 4420 GPIO Alternate Function Select (GPIOAFSEL)@@ offset 0x420 The GPIOAFSEL register is the mode control select register. If a bit is clear@@ the pin is used as a GPIO and is controlled by the GPIO registers. Setting a bit in this register configures the corresponding GPIO line to be controlled by an associated peripheral. Several possible peripheral functions are multiplexed on each GPIO. The GPIO Port Control (GPIOPCTL) register is used to select one of the possible functions.</description>
                        <addressOffset>0x420</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DR2R</name>
                        <displayName>GPIOA2_DR2R</displayName>
                        <description>0x4000 5500 0x4000 6500 0x4000 7500 0x4002 4500 GPIO 2-mA Drive Select (GPIODR2R)@@ offset 0x500 The GPIODR2R register is the 2-mA drive control register. Each GPIO signal in the port can be individually configured without affecting the other pads. When setting the DRV2 bit for a GPIO signal@@ the corresponding DRV4 bit in the GPIODR4R register and DRV8 bit in the GPIODR8R register are automatically cleared by hardware. By default@@ all GPIO pins have 2-mA drive.</description>
                        <addressOffset>0x500</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DR4R</name>
                        <displayName>GPIOA2_DR4R</displayName>
                        <description>0x4000 5504 0x4000 6504 0x4000 7504 0x4002 4504 GPIO 4-mA Drive Select (GPIODR4R)@@ offset 0x504 The GPIODR4R register is the 4-mA drive control register. Each GPIO signal in the port can be individually configured without affecting the other pads. When setting the DRV4 bit for a GPIO signal@@ the corresponding DRV2 bit in the GPIODR2R register and DRV8 bit in the GPIODR8R register are automatically cleared by hardware.</description>
                        <addressOffset>0x504</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DR8R</name>
                        <displayName>GPIOA2_DR8R</displayName>
                        <description>0x4000 5508 0x4000 6508 0x4000 7508 0x4002 4508 GPIO 8-mA Drive Select (GPIODR8R)@@ offset 0x508 The GPIODR8R register is the 8-mA drive control register. Each GPIO signal in the port can be individually configured without affecting the other pads. When setting the DRV8 bit for a GPIO signal@@ the corresponding DRV2 bit in the GPIODR2R register and DRV4 bit in the GPIODR4R register are automatically cleared by hardware. The 8-mA setting is also used for high-current operation. Note: There is no configuration difference between 8-mA and high-current operation. The additional current capacity results from a shift in the VOH/VOL levels.</description>
                        <addressOffset>0x508</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ODR</name>
                        <displayName>GPIOA2_ODR</displayName>
                        <description>0x4000 550C 0x4000 650C 0x4000 750C 0x4002 450C GPIO Open Drain Select (GPIOODR)@@ offset 0x50C The GPIOODR register is the open drain control register. Setting a bit in this register enables the open-drain configuration of the corresponding GPIO pad. When open-drain mode is enabled@@ the corresponding bit should also be set in the GPIO Digital Input Enable (GPIODEN) register . Corresponding bits in the drive strength and slew rate control registers (GPIODR2R@@ GPIODR4R@@ GPIODR8R@@ and GPIOSLR) can be set to achieve the desired rise and fall times. The GPIO acts as an open-drain input if the corresponding bit in the GPIODIR register is cleared. If open drain is selected while the GPIO is configured as an input@@ the GPIO will remain an input and the open-drain selection has no effect until the GPIO is changed to an output. When using the I2C module@@ in addition to configuring the pin to open drain@@ the GPIO Alternate Function Select (GPIOAFSEL) register bits for the I2C clock and data pins should be set</description>
                        <addressOffset>0x50C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PUR</name>
                        <displayName>GPIOA2_PUR</displayName>
                        <description>0x4000 5510 0x4000 6510 0x4000 7510 0x4002 4510 GPIO Pull-Up Select (GPIOPUR)@@ offset 0x510 The GPIOPUR register is the pull-up control register. When a bit is set@@ a weak pull-up resistor on the corresponding GPIO signal is enabled. Setting a bit in GPIOPUR automatically clears the corresponding bit in the GPIO Pull-Down Select (GPIOPDR) register . Write access to this register is protected with the GPIOCR register. Bits in GPIOCR that are cleared prevent writes to the equivalent bit in this register.</description>
                        <addressOffset>0x510</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PDR</name>
                        <displayName>GPIOA2_PDR</displayName>
                        <description>0x4000 5514 0x4000 6514 0x4000 7514 0x4002 4514 GPIO Pull-Down Select (GPIOPDR)@@ offset 0x514 The GPIOPDR register is the pull-down control register. When a bit is set@@ a weak pull-down resistor on the corresponding GPIO signal is enabled. Setting a bit in GPIOPDR automatically clears the corresponding bit in the GPIO Pull-Up Select (GPIOPUR) register</description>
                        <addressOffset>0x514</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SLR</name>
                        <displayName>GPIOA2_SLR</displayName>
                        <description>0x4000 5518 0x4000 6518 0x4000 7518 0x4002 4518 The GPIOSLR register is the slew rate control register. Slew rate control is only available when using the 8-mA drive strength option via the GPIO 8-mA Drive Select (GPIODR8R) register</description>
                        <addressOffset>0x518</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DEN</name>
                        <displayName>GPIOA2_DEN</displayName>
                        <description>0x4000 551C 0x4000 651C 0x4000 751C 0x4002 451C GPIO Digital Enable (GPIODEN)@@ offset 0x51C Note: Pins configured as digital inputs are Schmitt-triggered. The GPIODEN register is the digital enable register. By default@@ all GPIO signals except those listed below are configured out of reset to be undriven (tristate). Their digital function is disabled; they do not drive a logic value on the pin and they do not allow the pin voltage into the GPIO receiver. To use the pin as a digital input or output (either GPIO or alternate function)@@ the corresponding GPIODEN bit must be set.</description>
                        <addressOffset>0x51C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>LOCK</name>
                        <displayName>GPIOA2_LOCK</displayName>
                        <description>0x4000 5520 0x4000 6520 0x4000 7520 0x4002 4520 GPIO Lock (GPIOLOCK)@@ offset 0x520 The GPIOLOCK register enables write access to the GPIOCR register . Writing 0x4C4F.434B to the GPIOLOCK register unlocks the GPIOCR register. Writing any other value to the GPIOLOCK register re-enables the locked state. Reading the GPIOLOCK register returns the lock status rather than the 32-bit value that was previously written. Therefore@@ when write accesses are disabled@@ or locked@@ reading the GPIOLOCK register returns 0x0000.0001. When write accesses are enabled@@ or unlocked@@ reading the GPIOLOCK register returns 0x0000.0000.</description>
                        <addressOffset>0x520</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CR</name>
                        <displayName>GPIOA2_CR</displayName>
                        <description>0x4000 5524 0x4000 6524 0x4000 7524 0x4002 4524 GPIO Commit (GPIOCR)@@ offset 0x524 The GPIOCR register is the commit register. The value of the GPIOCR register determines which bits of the GPIOAFSEL@@ GPIOPUR@@ GPIOPDR@@ and GPIODEN registers are committed when a write to these registers is performed. If a bit in the GPIOCR register is cleared@@ the data being written to the corresponding bit in the GPIOAFSEL@@ GPIOPUR@@ GPIOPDR@@ or GPIODEN registers cannot be committed and retains its previous value. If a bit in the GPIOCR register is set@@ the data being written to the corresponding bit of the GPIOAFSEL@@ GPIOPUR@@ GPIOPDR@@ or GPIODEN registers is committed to the register and reflects the new value. The contents of the GPIOCR register can only be modified if the status in the GPIOLOCK register is unlocked. Writes to the GPIOCR register are ignored if the status in the GPIOLOCK register is locked.</description>
                        <addressOffset>0x524</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>AMSEL</name>
                        <displayName>GPIOA2_AMSEL</displayName>
                        <description>0x4000 5528 0x4000 6528 0x4000 7528 0x4002 4528 The GPIOAMSEL register controls isolation circuits to the analog side of a unified I/O pad. Because the GPIOs may be driven by a 5-V source and affect analog operation@@ analog circuitry requires isolation from the pins when they are not used in their analog function. Each bit of this register controls the isolation circuitry for the corresponding GPIO signal.</description>
                        <addressOffset>0x528</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCTL</name>
                        <displayName>GPIOA2_PCTL</displayName>
                        <description>This register is not used in cc3xx. equivalant register exsist outside GPIO IP (refer PAD*_config register in the shared comn space) 0x4000 552C 0x4000 652C 0x4000 752C 0x4002 452C GPIO Port Control (GPIOPCTL)@@ offset 0x52C The GPIOPCTL register is used in conjunction with the GPIOAFSEL register and selects the specific peripheral signal for each GPIO pin when using the alternate function mode. Most bits in the GPIOAFSEL register are cleared on reset@@ therefore most GPIO pins are configured as GPIOs by default. When a bit is set in the GPIOAFSEL register@@ the corresponding GPIO signal is controlled by an associated peripheral. The GPIOPCTL register selects one out of a set of peripheral functions for each GPIO@@ providing additional flexibility in signal definition.</description>
                        <addressOffset>0x52C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ADCCTL</name>
                        <displayName>GPIOA2_ADCCTL</displayName>
                        <description>This register is not used in cc3xx. ADC trigger via GPIO is not supported. 0x4000 5530 0x4000 6530 0x4000 7530 0x4002 4530 GPIO ADC Control (GPIOADCCTL)@@ offset 0x530 This register is used to configure a GPIO pin as a source for the ADC trigger. Note that if the Port B GPIOADCCTL register is cleared@@ PB4 can still be used as an external trigger for the ADC. This is a legacy mode which allows code written for previous Stellaris devices to operate on this microcontroller.</description>
                        <addressOffset>0x530</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DMACTL</name>
                        <displayName>GPIOA2_DMACTL</displayName>
                        <description>0x4000 5534 0x4000 6534 0x4000 7534 0x4002 4534 GPIO DMA Control (GPIODMACTL)@@ offset 0x534 This register is used to configure a GPIO pin as a source for the ?DMA trigger.</description>
                        <addressOffset>0x534</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SI</name>
                        <displayName>GPIOA2_SI</displayName>
                        <description>0x4000 5538 0x4000 6538 0x4000 7538 0x4002 4538 GPIO Select Interrupt (GPIOSI)@@ offset 0x538 This register is used to enable individual interrupts for each pin. Note: This register is only available on Port P and Port Q.</description>
                        <addressOffset>0x538</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID4</name>
                        <displayName>GPIOA2_PERIPHID4</displayName>
                        <description>0x4000 5FD0 0x4000 6FD0 0x4000 7FD0 0x4002 4FD0 GPIO Peripheral Identification 4 (GPIOPeriphID4)@@ offset 0xFD0 The GPIOPeriphID4@@ GPIOPeriphID5@@ GPIOPeriphID6@@ and GPIOPeriphID7 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFD0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID5</name>
                        <displayName>GPIOA2_PERIPHID5</displayName>
                        <description>0x4000 5FD4 0x4000 6FD4 0x4000 7FD4 0x4002 4FD4 GPIO Peripheral Identification 5 (GPIOPeriphID5)@@ offset 0xFD4 The GPIOPeriphID4@@ GPIOPeriphID5@@ GPIOPeriphID6@@ and GPIOPeriphID7 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFD4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID6</name>
                        <displayName>GPIOA2_PERIPHID6</displayName>
                        <description>0x4000 5FD8 0x4000 6FD8 0x4000 7FD8 0x4002 4FD8 GPIO Peripheral Identification 6 (GPIOPeriphID6)@@ offset 0xFD8 The GPIOPeriphID4@@ GPIOPeriphID5@@ GPIOPeriphID6@@ and GPIOPeriphID7 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFD8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID7</name>
                        <displayName>GPIOA2_PERIPHID7</displayName>
                        <description>0x4000 5FDC 0x4000 6FDC 0x4000 7FDC 0x4002 4FDC GPIO Peripheral Identification 7 (GPIOPeriphID7)@@ offset 0xFDC The GPIOPeriphID4@@ GPIOPeriphID5@@ GPIOPeriphID6@@ and GPIOPeriphID7 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFDC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID0</name>
                        <displayName>GPIOA2_PERIPHID0</displayName>
                        <description>0x4000 5FE0 0x4000 6FE0 0x4000 7FE0 0x4002 4FE0 GPIO Peripheral Identification 0 (GPIOPeriphID0)@@ offset 0xFE0 The GPIOPeriphID0@@ GPIOPeriphID1@@ GPIOPeriphID2@@ and GPIOPeriphID3 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFE0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID1</name>
                        <displayName>GPIOA2_PERIPHID1</displayName>
                        <description>0x4000 5FE4 0x4000 6FE4 0x4000 7FE4 0x4002 4FE4 GPIO Peripheral Identification 1 (GPIOPeriphID1)@@ offset 0xFE4 The GPIOPeriphID0@@ GPIOPeriphID1@@ GPIOPeriphID2@@ and GPIOPeriphID3 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFE4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID2</name>
                        <displayName>GPIOA2_PERIPHID2</displayName>
                        <description>0x4000 5FE8 0x4000 6FE8 0x4000 7FE8 0x4002 4FE8 GPIO Peripheral Identification 2 (GPIOPeriphID2)@@ offset 0xFE8 The GPIOPeriphID0@@ GPIOPeriphID1@@ GPIOPeriphID2@@ and GPIOPeriphID3 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFE8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID3</name>
                        <displayName>GPIOA2_PERIPHID3</displayName>
                        <description>0x4000 5FEC 0x4000 6FEC 0x4000 7FEC 0x4002 4FEC GPIO Peripheral Identification 3 (GPIOPeriphID3)@@ offset 0xFEC The GPIOPeriphID0@@ GPIOPeriphID1@@ GPIOPeriphID2@@ and GPIOPeriphID3 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFEC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCELLID0</name>
                        <displayName>GPIOA2_PCELLID0</displayName>
                        <description>0x4000 5FF0 0x4000 6FF0 0x4000 7FF0 0x4002 4FF0 GPIO PrimeCell Identification 0 (GPIOPCellID0)@@ offset 0xFF0 The GPIOPCellID0@@ GPIOPCellID1@@ GPIOPCellID2@@ and GPIOPCellID3 registers are four 8-bit wide registers@@ that can conceptually be treated as one 32-bit register. The register is used as a standard cross-peripheral identification system.</description>
                        <addressOffset>0xFF0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCELLID1</name>
                        <displayName>GPIOA2_PCELLID1</displayName>
                        <description>0x4000 5FF4 0x4000 6FF4 0x4000 7FF4 0x4002 4FF4 GPIO PrimeCell Identification 1 (GPIOPCellID1)@@ offset 0xFF4 The GPIOPCellID0@@ GPIOPCellID1@@ GPIOPCellID2@@ and GPIOPCellID3 registers are four 8-bit wide registers@@ that can conceptually be treated as one 32-bit register. The register is used as a standard cross-peripheral identification system.</description>
                        <addressOffset>0xFF4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCELLID2</name>
                        <displayName>GPIOA2_PCELLID2</displayName>
                        <description>0x4000 5FF8 0x4000 6FF8 0x4000 7FF8 0x4002 4FF8 GPIO PrimeCell Identification 2 (GPIOPCellID2)@@ offset 0xFF8 The GPIOPCellID0@@ GPIOPCellID1@@ GPIOPCellID2@@ and GPIOPCellID3 registers are four 8-bit wide registers@@ that can conceptually be treated as one 32-bit register. The register is used as a standard cross-peripheral identification system.</description>
                        <addressOffset>0xFF8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCELLID3</name>
                        <displayName>GPIOA2_PCELLID3</displayName>
                        <description>0x4000 5FFC 0x4000 6FFC 0x4000 7FFC 0x4002 4FFC GPIO PrimeCell Identification 3 (GPIOPCellID3)@@ offset 0xFFC The GPIOPCellID0@@ GPIOPCellID1@@ GPIOPCellID2@@ and GPIOPCellID3 registers are four 8-bit wide registers@@ that can conceptually be treated as one 32-bit register. The register is used as a standard cross-peripheral identification system.0xb1 ****************************************************************************</description>
                        <addressOffset>0xFFC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>GPIOA3</name>
                <version>1.0</version>
                <description>GPIOA3</description>
                <baseAddress>0x40007000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>DATA</name>
                        <displayName>GPIOA3_DATA</displayName>
                        <description>0x4000 5000 0x4000 6000 0x4000 7000 0x4002 4000 GPIO Data (GPIODATA)@@ offset 0x000 The GPIODATA register is the data register. In software control mode@@ values written in the GPIODATA register are transferred onto the GPIO port pins if the respective pins have been configured as outputs through the GPIO Direction (GPIODIR) register (see page 653). In order to write to GPIODATA@@ the corresponding bits in the mask@@ resulting from the address bus bits [9:2]@@ must be set. Otherwise@@ the bit values remain unchanged by the write. Similarly@@ the values read from this register are determined for each bit by the mask bit derived from the address used to access the data register@@ bits [9:2]. Bits that are set in the address mask cause the corresponding bits in GPIODATA to be read@@ and bits that are clear in the address mask cause the corresponding bits in GPIODATA to be read as 0@@ regardless of their value. A read from GPIODATA returns the last bit value written if the respective pins are configured as outputs@@ or it returns the value on the corresponding input pin when these are configured as inputs. All bits are cleared by a reset.</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DIR</name>
                        <displayName>GPIOA3_DIR</displayName>
                        <description>0x4000 5400 0x4000 6400 0x4000 7400 0x4002 4400 GPIO Direction (GPIODIR)@@ offset 0x400 The GPIODIR register is the data direction register. Setting a bit in the GPIODIR register configures the corresponding pin to be an output@@ while clearing a bit configures the corresponding pin to be an input. All bits are cleared by a reset@@ meaning all GPIO pins are inputs by default.</description>
                        <addressOffset>0x400</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IS</name>
                        <displayName>GPIOA3_IS</displayName>
                        <description>0x4000 5404 0x4000 6404 0x4000 7404 0x4002 4404 GPIO Interrupt Sense (GPIOIS)@@ offset 0x404 The GPIOIS register is the interrupt sense register. Setting a bit in the GPIOIS register configures the corresponding pin to detect levels@@ while clearing a bit configures the corresponding pin to detect edges. All bits are cleared by a reset.</description>
                        <addressOffset>0x404</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IBE</name>
                        <displayName>GPIOA3_IBE</displayName>
                        <description>0x4000 5408 0x4000 6408 0x4000 7408 0x4002 4408 GPIO Interrupt Both Edges (GPIOIBE)@@ offset 0x408 The GPIOIBE register allows both edges to cause interrupts. When the corresponding bit in the GPIO Interrupt Sense (GPIOIS) register is set to detect edges@@ setting a bit in the GPIOIBE register configures the corresponding pin to detect both rising and falling edges@@ regardless of the corresponding bit in the GPIO Interrupt Event (GPIOIEV) register . Clearing a bit configures the pin to be controlled by the GPIOIEV register. All bits are cleared by a reset.</description>
                        <addressOffset>0x408</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IEV</name>
                        <displayName>GPIOA3_IEV</displayName>
                        <description>0x4000 540C 0x4000 640C 0x4000 740C 0x4002 440C GPIO Interrupt Event (GPIOIEV)@@ offset 0x40C The GPIOIEV register is the interrupt event register. Setting a bit in the GPIOIEV register configures the corresponding pin to detect rising edges or high levels@@ depending on the corresponding bit value in the GPIO Interrupt Sense (GPIOIS) register . Clearing a bit configures the pin to detect falling edges or low levels@@ depending on the corresponding bit value in the GPIOIS register. All bits are cleared by a reset.</description>
                        <addressOffset>0x40C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IM</name>
                        <displayName>GPIOA3_IM</displayName>
                        <description>0x4000 5410 0x4000 6410 0x4000 7410 0x4002 4410 GPIO Interrupt Mask (GPIOIM)@@ offset 0x410 The GPIOIM register is the interrupt mask register. Setting a bit in the GPIOIM register allows interrupts that are generated by the corresponding pin to be sent to the interrupt controller on the combined interrupt signal. Clearing a bit prevents an interrupt on the corresponding pin from being sent to the interrupt controller. All bits are cleared by a reset.</description>
                        <addressOffset>0x410</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RIS</name>
                        <displayName>GPIOA3_RIS</displayName>
                        <description>0x4000 5414 0x4000 6414 0x4000 7414 0x4002 4414 GPIO Raw Interrupt Status (GPIORIS)@@ offset 0x414 The GPIORIS register is the raw interrupt status register. A bit in this register is set when an interrupt condition occurs on the corresponding GPIO pin. If the corresponding bit in the GPIO Interrupt Mask (GPIOIM) register is set@@ the interrupt is sent to the interrupt controller. Bits read as zero indicate that corresponding input pins have not initiated an interrupt. A bit in this register can be cleared by writing a 1 to the corresponding bit in the GPIO Interrupt Clear (GPIOICR) register.</description>
                        <addressOffset>0x414</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MIS</name>
                        <displayName>GPIOA3_MIS</displayName>
                        <description>0x4000 5418 0x4000 6418 0x4000 7418 0x4002 4418 GPIO Masked Interrupt Status (GPIOMIS)@@ offset 0x418 The GPIOMIS register is the masked interrupt status register. If a bit is set in this register@@ the corresponding interrupt has triggered an interrupt to the interrupt controller. If a bit is clear@@ either no interrupt has been generated@@ or the interrupt is masked. If no port pin@@ other than the one that is being used as an ADC trigger@@ is being used to generate interrupts@@ the appropriate Interrupt Set Enable (ENn) register can disable the interrupts for the port@@ and the ADC interrupt can be used to read back the converted data. Otherwise@@ the port interrupt handler must ignore and clear interrupts on the port pin and wait for the ADC interrupt@@ or the ADC interrupt must be disabled in the EN0 register and the port interrupt handler must poll the ADC registers until the conversion is completed. If no port pin@@ other than the one that is being used as an ADC trigger@@ is being used to generate interrupts@@ the appropriate Interrupt Set Enable (ENn) register can disable the interrupts for the port@@ and the ADC interrupt can be used to read back the converted data. Otherwise@@ the port interrupt handler must ignore and clear interrupts on the port pin and wait for the ADC interrupt@@ or the ADC interrupt must be disabled in the EN0 register and the port interrupt handler must poll the ADC registers until the conversion is completed. Note that if the Port B GPIOADCCTL register is cleared@@ PB4 can still be used as an external trigger for the ADC. This is a legacy mode which allows code written for previous Stellaris devices to operate on this microcontroller. GPIOMIS is the state of the interrupt after masking.</description>
                        <addressOffset>0x418</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ICR</name>
                        <displayName>GPIOA3_ICR</displayName>
                        <description>0x4000 541C 0x4000 641C 0x4000 741C 0x4002 441C GPIO Interrupt Clear (GPIOICR)@@ offset 0x41C The GPIOICR register is the interrupt clear register. Writing a 1 to a bit in this register clears the corresponding interrupt bit in the GPIORIS and GPIOMIS registers. Writing a 0 has no effect.</description>
                        <addressOffset>0x41C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>AFSEL</name>
                        <displayName>GPIOA3_AFSEL</displayName>
                        <description>0x4000 5420 0x4000 6420 0x4000 7420 0x4002 4420 GPIO Alternate Function Select (GPIOAFSEL)@@ offset 0x420 The GPIOAFSEL register is the mode control select register. If a bit is clear@@ the pin is used as a GPIO and is controlled by the GPIO registers. Setting a bit in this register configures the corresponding GPIO line to be controlled by an associated peripheral. Several possible peripheral functions are multiplexed on each GPIO. The GPIO Port Control (GPIOPCTL) register is used to select one of the possible functions.</description>
                        <addressOffset>0x420</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DR2R</name>
                        <displayName>GPIOA3_DR2R</displayName>
                        <description>0x4000 5500 0x4000 6500 0x4000 7500 0x4002 4500 GPIO 2-mA Drive Select (GPIODR2R)@@ offset 0x500 The GPIODR2R register is the 2-mA drive control register. Each GPIO signal in the port can be individually configured without affecting the other pads. When setting the DRV2 bit for a GPIO signal@@ the corresponding DRV4 bit in the GPIODR4R register and DRV8 bit in the GPIODR8R register are automatically cleared by hardware. By default@@ all GPIO pins have 2-mA drive.</description>
                        <addressOffset>0x500</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DR4R</name>
                        <displayName>GPIOA3_DR4R</displayName>
                        <description>0x4000 5504 0x4000 6504 0x4000 7504 0x4002 4504 GPIO 4-mA Drive Select (GPIODR4R)@@ offset 0x504 The GPIODR4R register is the 4-mA drive control register. Each GPIO signal in the port can be individually configured without affecting the other pads. When setting the DRV4 bit for a GPIO signal@@ the corresponding DRV2 bit in the GPIODR2R register and DRV8 bit in the GPIODR8R register are automatically cleared by hardware.</description>
                        <addressOffset>0x504</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DR8R</name>
                        <displayName>GPIOA3_DR8R</displayName>
                        <description>0x4000 5508 0x4000 6508 0x4000 7508 0x4002 4508 GPIO 8-mA Drive Select (GPIODR8R)@@ offset 0x508 The GPIODR8R register is the 8-mA drive control register. Each GPIO signal in the port can be individually configured without affecting the other pads. When setting the DRV8 bit for a GPIO signal@@ the corresponding DRV2 bit in the GPIODR2R register and DRV4 bit in the GPIODR4R register are automatically cleared by hardware. The 8-mA setting is also used for high-current operation. Note: There is no configuration difference between 8-mA and high-current operation. The additional current capacity results from a shift in the VOH/VOL levels.</description>
                        <addressOffset>0x508</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ODR</name>
                        <displayName>GPIOA3_ODR</displayName>
                        <description>0x4000 550C 0x4000 650C 0x4000 750C 0x4002 450C GPIO Open Drain Select (GPIOODR)@@ offset 0x50C The GPIOODR register is the open drain control register. Setting a bit in this register enables the open-drain configuration of the corresponding GPIO pad. When open-drain mode is enabled@@ the corresponding bit should also be set in the GPIO Digital Input Enable (GPIODEN) register . Corresponding bits in the drive strength and slew rate control registers (GPIODR2R@@ GPIODR4R@@ GPIODR8R@@ and GPIOSLR) can be set to achieve the desired rise and fall times. The GPIO acts as an open-drain input if the corresponding bit in the GPIODIR register is cleared. If open drain is selected while the GPIO is configured as an input@@ the GPIO will remain an input and the open-drain selection has no effect until the GPIO is changed to an output. When using the I2C module@@ in addition to configuring the pin to open drain@@ the GPIO Alternate Function Select (GPIOAFSEL) register bits for the I2C clock and data pins should be set</description>
                        <addressOffset>0x50C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PUR</name>
                        <displayName>GPIOA3_PUR</displayName>
                        <description>0x4000 5510 0x4000 6510 0x4000 7510 0x4002 4510 GPIO Pull-Up Select (GPIOPUR)@@ offset 0x510 The GPIOPUR register is the pull-up control register. When a bit is set@@ a weak pull-up resistor on the corresponding GPIO signal is enabled. Setting a bit in GPIOPUR automatically clears the corresponding bit in the GPIO Pull-Down Select (GPIOPDR) register . Write access to this register is protected with the GPIOCR register. Bits in GPIOCR that are cleared prevent writes to the equivalent bit in this register.</description>
                        <addressOffset>0x510</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PDR</name>
                        <displayName>GPIOA3_PDR</displayName>
                        <description>0x4000 5514 0x4000 6514 0x4000 7514 0x4002 4514 GPIO Pull-Down Select (GPIOPDR)@@ offset 0x514 The GPIOPDR register is the pull-down control register. When a bit is set@@ a weak pull-down resistor on the corresponding GPIO signal is enabled. Setting a bit in GPIOPDR automatically clears the corresponding bit in the GPIO Pull-Up Select (GPIOPUR) register</description>
                        <addressOffset>0x514</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SLR</name>
                        <displayName>GPIOA3_SLR</displayName>
                        <description>0x4000 5518 0x4000 6518 0x4000 7518 0x4002 4518 The GPIOSLR register is the slew rate control register. Slew rate control is only available when using the 8-mA drive strength option via the GPIO 8-mA Drive Select (GPIODR8R) register</description>
                        <addressOffset>0x518</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DEN</name>
                        <displayName>GPIOA3_DEN</displayName>
                        <description>0x4000 551C 0x4000 651C 0x4000 751C 0x4002 451C GPIO Digital Enable (GPIODEN)@@ offset 0x51C Note: Pins configured as digital inputs are Schmitt-triggered. The GPIODEN register is the digital enable register. By default@@ all GPIO signals except those listed below are configured out of reset to be undriven (tristate). Their digital function is disabled; they do not drive a logic value on the pin and they do not allow the pin voltage into the GPIO receiver. To use the pin as a digital input or output (either GPIO or alternate function)@@ the corresponding GPIODEN bit must be set.</description>
                        <addressOffset>0x51C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>LOCK</name>
                        <displayName>GPIOA3_LOCK</displayName>
                        <description>0x4000 5520 0x4000 6520 0x4000 7520 0x4002 4520 GPIO Lock (GPIOLOCK)@@ offset 0x520 The GPIOLOCK register enables write access to the GPIOCR register . Writing 0x4C4F.434B to the GPIOLOCK register unlocks the GPIOCR register. Writing any other value to the GPIOLOCK register re-enables the locked state. Reading the GPIOLOCK register returns the lock status rather than the 32-bit value that was previously written. Therefore@@ when write accesses are disabled@@ or locked@@ reading the GPIOLOCK register returns 0x0000.0001. When write accesses are enabled@@ or unlocked@@ reading the GPIOLOCK register returns 0x0000.0000.</description>
                        <addressOffset>0x520</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CR</name>
                        <displayName>GPIOA3_CR</displayName>
                        <description>0x4000 5524 0x4000 6524 0x4000 7524 0x4002 4524 GPIO Commit (GPIOCR)@@ offset 0x524 The GPIOCR register is the commit register. The value of the GPIOCR register determines which bits of the GPIOAFSEL@@ GPIOPUR@@ GPIOPDR@@ and GPIODEN registers are committed when a write to these registers is performed. If a bit in the GPIOCR register is cleared@@ the data being written to the corresponding bit in the GPIOAFSEL@@ GPIOPUR@@ GPIOPDR@@ or GPIODEN registers cannot be committed and retains its previous value. If a bit in the GPIOCR register is set@@ the data being written to the corresponding bit of the GPIOAFSEL@@ GPIOPUR@@ GPIOPDR@@ or GPIODEN registers is committed to the register and reflects the new value. The contents of the GPIOCR register can only be modified if the status in the GPIOLOCK register is unlocked. Writes to the GPIOCR register are ignored if the status in the GPIOLOCK register is locked.</description>
                        <addressOffset>0x524</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>AMSEL</name>
                        <displayName>GPIOA3_AMSEL</displayName>
                        <description>0x4000 5528 0x4000 6528 0x4000 7528 0x4002 4528 The GPIOAMSEL register controls isolation circuits to the analog side of a unified I/O pad. Because the GPIOs may be driven by a 5-V source and affect analog operation@@ analog circuitry requires isolation from the pins when they are not used in their analog function. Each bit of this register controls the isolation circuitry for the corresponding GPIO signal.</description>
                        <addressOffset>0x528</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCTL</name>
                        <displayName>GPIOA3_PCTL</displayName>
                        <description>This register is not used in cc3xx. equivalant register exsist outside GPIO IP (refer PAD*_config register in the shared comn space) 0x4000 552C 0x4000 652C 0x4000 752C 0x4002 452C GPIO Port Control (GPIOPCTL)@@ offset 0x52C The GPIOPCTL register is used in conjunction with the GPIOAFSEL register and selects the specific peripheral signal for each GPIO pin when using the alternate function mode. Most bits in the GPIOAFSEL register are cleared on reset@@ therefore most GPIO pins are configured as GPIOs by default. When a bit is set in the GPIOAFSEL register@@ the corresponding GPIO signal is controlled by an associated peripheral. The GPIOPCTL register selects one out of a set of peripheral functions for each GPIO@@ providing additional flexibility in signal definition.</description>
                        <addressOffset>0x52C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ADCCTL</name>
                        <displayName>GPIOA3_ADCCTL</displayName>
                        <description>This register is not used in cc3xx. ADC trigger via GPIO is not supported. 0x4000 5530 0x4000 6530 0x4000 7530 0x4002 4530 GPIO ADC Control (GPIOADCCTL)@@ offset 0x530 This register is used to configure a GPIO pin as a source for the ADC trigger. Note that if the Port B GPIOADCCTL register is cleared@@ PB4 can still be used as an external trigger for the ADC. This is a legacy mode which allows code written for previous Stellaris devices to operate on this microcontroller.</description>
                        <addressOffset>0x530</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DMACTL</name>
                        <displayName>GPIOA3_DMACTL</displayName>
                        <description>0x4000 5534 0x4000 6534 0x4000 7534 0x4002 4534 GPIO DMA Control (GPIODMACTL)@@ offset 0x534 This register is used to configure a GPIO pin as a source for the ?DMA trigger.</description>
                        <addressOffset>0x534</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SI</name>
                        <displayName>GPIOA3_SI</displayName>
                        <description>0x4000 5538 0x4000 6538 0x4000 7538 0x4002 4538 GPIO Select Interrupt (GPIOSI)@@ offset 0x538 This register is used to enable individual interrupts for each pin. Note: This register is only available on Port P and Port Q.</description>
                        <addressOffset>0x538</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID4</name>
                        <displayName>GPIOA3_PERIPHID4</displayName>
                        <description>0x4000 5FD0 0x4000 6FD0 0x4000 7FD0 0x4002 4FD0 GPIO Peripheral Identification 4 (GPIOPeriphID4)@@ offset 0xFD0 The GPIOPeriphID4@@ GPIOPeriphID5@@ GPIOPeriphID6@@ and GPIOPeriphID7 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFD0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID5</name>
                        <displayName>GPIOA3_PERIPHID5</displayName>
                        <description>0x4000 5FD4 0x4000 6FD4 0x4000 7FD4 0x4002 4FD4 GPIO Peripheral Identification 5 (GPIOPeriphID5)@@ offset 0xFD4 The GPIOPeriphID4@@ GPIOPeriphID5@@ GPIOPeriphID6@@ and GPIOPeriphID7 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFD4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID6</name>
                        <displayName>GPIOA3_PERIPHID6</displayName>
                        <description>0x4000 5FD8 0x4000 6FD8 0x4000 7FD8 0x4002 4FD8 GPIO Peripheral Identification 6 (GPIOPeriphID6)@@ offset 0xFD8 The GPIOPeriphID4@@ GPIOPeriphID5@@ GPIOPeriphID6@@ and GPIOPeriphID7 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFD8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID7</name>
                        <displayName>GPIOA3_PERIPHID7</displayName>
                        <description>0x4000 5FDC 0x4000 6FDC 0x4000 7FDC 0x4002 4FDC GPIO Peripheral Identification 7 (GPIOPeriphID7)@@ offset 0xFDC The GPIOPeriphID4@@ GPIOPeriphID5@@ GPIOPeriphID6@@ and GPIOPeriphID7 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFDC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID0</name>
                        <displayName>GPIOA3_PERIPHID0</displayName>
                        <description>0x4000 5FE0 0x4000 6FE0 0x4000 7FE0 0x4002 4FE0 GPIO Peripheral Identification 0 (GPIOPeriphID0)@@ offset 0xFE0 The GPIOPeriphID0@@ GPIOPeriphID1@@ GPIOPeriphID2@@ and GPIOPeriphID3 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFE0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID1</name>
                        <displayName>GPIOA3_PERIPHID1</displayName>
                        <description>0x4000 5FE4 0x4000 6FE4 0x4000 7FE4 0x4002 4FE4 GPIO Peripheral Identification 1 (GPIOPeriphID1)@@ offset 0xFE4 The GPIOPeriphID0@@ GPIOPeriphID1@@ GPIOPeriphID2@@ and GPIOPeriphID3 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFE4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID2</name>
                        <displayName>GPIOA3_PERIPHID2</displayName>
                        <description>0x4000 5FE8 0x4000 6FE8 0x4000 7FE8 0x4002 4FE8 GPIO Peripheral Identification 2 (GPIOPeriphID2)@@ offset 0xFE8 The GPIOPeriphID0@@ GPIOPeriphID1@@ GPIOPeriphID2@@ and GPIOPeriphID3 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFE8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID3</name>
                        <displayName>GPIOA3_PERIPHID3</displayName>
                        <description>0x4000 5FEC 0x4000 6FEC 0x4000 7FEC 0x4002 4FEC GPIO Peripheral Identification 3 (GPIOPeriphID3)@@ offset 0xFEC The GPIOPeriphID0@@ GPIOPeriphID1@@ GPIOPeriphID2@@ and GPIOPeriphID3 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFEC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCELLID0</name>
                        <displayName>GPIOA3_PCELLID0</displayName>
                        <description>0x4000 5FF0 0x4000 6FF0 0x4000 7FF0 0x4002 4FF0 GPIO PrimeCell Identification 0 (GPIOPCellID0)@@ offset 0xFF0 The GPIOPCellID0@@ GPIOPCellID1@@ GPIOPCellID2@@ and GPIOPCellID3 registers are four 8-bit wide registers@@ that can conceptually be treated as one 32-bit register. The register is used as a standard cross-peripheral identification system.</description>
                        <addressOffset>0xFF0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCELLID1</name>
                        <displayName>GPIOA3_PCELLID1</displayName>
                        <description>0x4000 5FF4 0x4000 6FF4 0x4000 7FF4 0x4002 4FF4 GPIO PrimeCell Identification 1 (GPIOPCellID1)@@ offset 0xFF4 The GPIOPCellID0@@ GPIOPCellID1@@ GPIOPCellID2@@ and GPIOPCellID3 registers are four 8-bit wide registers@@ that can conceptually be treated as one 32-bit register. The register is used as a standard cross-peripheral identification system.</description>
                        <addressOffset>0xFF4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCELLID2</name>
                        <displayName>GPIOA3_PCELLID2</displayName>
                        <description>0x4000 5FF8 0x4000 6FF8 0x4000 7FF8 0x4002 4FF8 GPIO PrimeCell Identification 2 (GPIOPCellID2)@@ offset 0xFF8 The GPIOPCellID0@@ GPIOPCellID1@@ GPIOPCellID2@@ and GPIOPCellID3 registers are four 8-bit wide registers@@ that can conceptually be treated as one 32-bit register. The register is used as a standard cross-peripheral identification system.</description>
                        <addressOffset>0xFF8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCELLID3</name>
                        <displayName>GPIOA3_PCELLID3</displayName>
                        <description>0x4000 5FFC 0x4000 6FFC 0x4000 7FFC 0x4002 4FFC GPIO PrimeCell Identification 3 (GPIOPCellID3)@@ offset 0xFFC The GPIOPCellID0@@ GPIOPCellID1@@ GPIOPCellID2@@ and GPIOPCellID3 registers are four 8-bit wide registers@@ that can conceptually be treated as one 32-bit register. The register is used as a standard cross-peripheral identification system.0xb1 ****************************************************************************</description>
                        <addressOffset>0xFFC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>UARTA0</name>
                <version>1.0</version>
                <description>UARTA0</description>
                <baseAddress>0x4000C000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>DR</name>
                        <displayName>UARTA0_DR</displayName>
                        <description>DR</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DATA</name>
                                <description>Data Transmitted or Received</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>RSR_ECR</name>
                        <displayName>UARTA0_RSR_ECR</displayName>
                        <description>RSR_ECR</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>UART_ECR_DATA</name>
                                <description>Error Clear</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>FR</name>
                        <displayName>UARTA0_FR</displayName>
                        <description>FR</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ILPR</name>
                        <displayName>UARTA0_ILPR</displayName>
                        <description>ILPR</description>
                        <addressOffset>0x20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ILPDVSR</name>
                                <description>IrDA Low-Power Divisor</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>IBRD</name>
                        <displayName>UARTA0_IBRD</displayName>
                        <description>IBRD</description>
                        <addressOffset>0x24</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DIVINT</name>
                                <description>Integer Baud-Rate Divisor</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>FBRD</name>
                        <displayName>UARTA0_FBRD</displayName>
                        <description>FBRD</description>
                        <addressOffset>0x28</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DIVFRAC</name>
                                <description>Fractional Baud-Rate Divisor</description>
                                <lsb>0</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>LCRH</name>
                        <displayName>UARTA0_LCRH</displayName>
                        <description>LCRH</description>
                        <addressOffset>0x2C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>WLEN</name>
                                <description>UART Word Length 0x00000000 : UART_LCRH_WLEN_5 : 5 bits (default) 0x00000020 : UART_LCRH_WLEN_6 : 6 bits 0x00000040 : UART_LCRH_WLEN_7 : 7 bits 0x00000060 : UART_LCRH_WLEN_8 : 8 bits</description>
                                <lsb>5</lsb>
                                <msb>6</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CTL</name>
                        <displayName>UARTA0_CTL</displayName>
                        <description>CTL</description>
                        <addressOffset>0x30</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IFLS</name>
                        <displayName>UARTA0_IFLS</displayName>
                        <description>IFLS</description>
                        <addressOffset>0x34</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>RX</name>
                                <description>UART Receive Interrupt FIFO Level Select</description>
                                <lsb>3</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TX</name>
                                <description>UART Transmit Interrupt FIFO Level Select</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>IM</name>
                        <displayName>UARTA0_IM</displayName>
                        <description>IM</description>
                        <addressOffset>0x38</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RIS</name>
                        <displayName>UARTA0_RIS</displayName>
                        <description>RIS</description>
                        <addressOffset>0x3C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MIS</name>
                        <displayName>UARTA0_MIS</displayName>
                        <description>MIS</description>
                        <addressOffset>0x40</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ICR</name>
                        <displayName>UARTA0_ICR</displayName>
                        <description>ICR</description>
                        <addressOffset>0x44</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DMACTL</name>
                        <displayName>UARTA0_DMACTL</displayName>
                        <description>DMACTL</description>
                        <addressOffset>0x48</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>LCTL</name>
                        <displayName>UARTA0_LCTL</displayName>
                        <description>LCTL</description>
                        <addressOffset>0x90</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>BLEN</name>
                                <description>Sync Break Length 0x00000000 : UART_LCTL_BLEN_13T : Sync break length is 13T bits (default) 0x00000010 : UART_LCTL_BLEN_14T : Sync break length is 14T bits 0x00000020 : UART_LCTL_BLEN_15T : Sync break length is 15T bits 0x00000030 : UART_LCTL_BLEN_16T : Sync break length is 16T bits</description>
                                <lsb>4</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>LSS</name>
                        <displayName>UARTA0_LSS</displayName>
                        <description>LSS</description>
                        <addressOffset>0x94</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TSS</name>
                                <description>Timer Snap Shot</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>LTIM</name>
                        <displayName>UARTA0_LTIM</displayName>
                        <description>LTIM</description>
                        <addressOffset>0x98</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TIMER</name>
                                <description>Timer Value</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>UART_9BITADDR</name>
                        <displayName>UARTA0_UART_9BITADDR</displayName>
                        <description>UART_9BITADDR</description>
                        <addressOffset>0xA4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>UART_9BITAMASK</name>
                        <displayName>UARTA0_UART_9BITAMASK</displayName>
                        <description>UART_9BITAMASK</description>
                        <addressOffset>0xA8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PP</name>
                        <displayName>UARTA0_PP</displayName>
                        <description>PP</description>
                        <addressOffset>0xFC0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CC</name>
                        <displayName>UARTA0_CC</displayName>
                        <description>CC</description>
                        <addressOffset>0xFC8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CS</name>
                                <description>UART Baud Clock Source 0x00000005 : UART_CC_CS_PIOSC : PIOSC 0x00000000 : UART_CC_CS_SYSCLK : The system clock (default)</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>UARTA1</name>
                <version>1.0</version>
                <description>UARTA1</description>
                <baseAddress>0x4000D000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>DR</name>
                        <displayName>UARTA1_DR</displayName>
                        <description>DR</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DATA</name>
                                <description>Data Transmitted or Received</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>RSR_ECR</name>
                        <displayName>UARTA1_RSR_ECR</displayName>
                        <description>RSR_ECR</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>UART_ECR_DATA</name>
                                <description>Error Clear</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>FR</name>
                        <displayName>UARTA1_FR</displayName>
                        <description>FR</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ILPR</name>
                        <displayName>UARTA1_ILPR</displayName>
                        <description>ILPR</description>
                        <addressOffset>0x20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ILPDVSR</name>
                                <description>IrDA Low-Power Divisor</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>IBRD</name>
                        <displayName>UARTA1_IBRD</displayName>
                        <description>IBRD</description>
                        <addressOffset>0x24</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DIVINT</name>
                                <description>Integer Baud-Rate Divisor</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>FBRD</name>
                        <displayName>UARTA1_FBRD</displayName>
                        <description>FBRD</description>
                        <addressOffset>0x28</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DIVFRAC</name>
                                <description>Fractional Baud-Rate Divisor</description>
                                <lsb>0</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>LCRH</name>
                        <displayName>UARTA1_LCRH</displayName>
                        <description>LCRH</description>
                        <addressOffset>0x2C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>WLEN</name>
                                <description>UART Word Length 0x00000000 : UART_LCRH_WLEN_5 : 5 bits (default) 0x00000020 : UART_LCRH_WLEN_6 : 6 bits 0x00000040 : UART_LCRH_WLEN_7 : 7 bits 0x00000060 : UART_LCRH_WLEN_8 : 8 bits</description>
                                <lsb>5</lsb>
                                <msb>6</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CTL</name>
                        <displayName>UARTA1_CTL</displayName>
                        <description>CTL</description>
                        <addressOffset>0x30</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IFLS</name>
                        <displayName>UARTA1_IFLS</displayName>
                        <description>IFLS</description>
                        <addressOffset>0x34</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>RX</name>
                                <description>UART Receive Interrupt FIFO Level Select</description>
                                <lsb>3</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TX</name>
                                <description>UART Transmit Interrupt FIFO Level Select</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>IM</name>
                        <displayName>UARTA1_IM</displayName>
                        <description>IM</description>
                        <addressOffset>0x38</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RIS</name>
                        <displayName>UARTA1_RIS</displayName>
                        <description>RIS</description>
                        <addressOffset>0x3C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MIS</name>
                        <displayName>UARTA1_MIS</displayName>
                        <description>MIS</description>
                        <addressOffset>0x40</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ICR</name>
                        <displayName>UARTA1_ICR</displayName>
                        <description>ICR</description>
                        <addressOffset>0x44</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DMACTL</name>
                        <displayName>UARTA1_DMACTL</displayName>
                        <description>DMACTL</description>
                        <addressOffset>0x48</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>LCTL</name>
                        <displayName>UARTA1_LCTL</displayName>
                        <description>LCTL</description>
                        <addressOffset>0x90</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>BLEN</name>
                                <description>Sync Break Length 0x00000000 : UART_LCTL_BLEN_13T : Sync break length is 13T bits (default) 0x00000010 : UART_LCTL_BLEN_14T : Sync break length is 14T bits 0x00000020 : UART_LCTL_BLEN_15T : Sync break length is 15T bits 0x00000030 : UART_LCTL_BLEN_16T : Sync break length is 16T bits</description>
                                <lsb>4</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>LSS</name>
                        <displayName>UARTA1_LSS</displayName>
                        <description>LSS</description>
                        <addressOffset>0x94</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TSS</name>
                                <description>Timer Snap Shot</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>LTIM</name>
                        <displayName>UARTA1_LTIM</displayName>
                        <description>LTIM</description>
                        <addressOffset>0x98</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TIMER</name>
                                <description>Timer Value</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>UART_9BITADDR</name>
                        <displayName>UARTA1_UART_9BITADDR</displayName>
                        <description>UART_9BITADDR</description>
                        <addressOffset>0xA4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>UART_9BITAMASK</name>
                        <displayName>UARTA1_UART_9BITAMASK</displayName>
                        <description>UART_9BITAMASK</description>
                        <addressOffset>0xA8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PP</name>
                        <displayName>UARTA1_PP</displayName>
                        <description>PP</description>
                        <addressOffset>0xFC0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CC</name>
                        <displayName>UARTA1_CC</displayName>
                        <description>CC</description>
                        <addressOffset>0xFC8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CS</name>
                                <description>UART Baud Clock Source 0x00000005 : UART_CC_CS_PIOSC : PIOSC 0x00000000 : UART_CC_CS_SYSCLK : The system clock (default)</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>I2CA0</name>
                <version>1.0</version>
                <description>I2CA0</description>
                <baseAddress>0x40020000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>MSA</name>
                        <displayName>I2CA0_MSA</displayName>
                        <description>MSA</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SA</name>
                                <description>I2C Slave Address</description>
                                <lsb>1</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MCS</name>
                        <displayName>I2CA0_MCS</displayName>
                        <description>MCS</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MDR</name>
                        <displayName>I2CA0_MDR</displayName>
                        <description>MDR</description>
                        <addressOffset>0x8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DATA</name>
                                <description>Data Transferred</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MTPR</name>
                        <displayName>I2CA0_MTPR</displayName>
                        <description>MTPR</description>
                        <addressOffset>0xC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TPR</name>
                                <description>SCL Clock Period</description>
                                <lsb>0</lsb>
                                <msb>6</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MIMR</name>
                        <displayName>I2CA0_MIMR</displayName>
                        <description>MIMR</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MRIS</name>
                        <displayName>I2CA0_MRIS</displayName>
                        <description>MRIS</description>
                        <addressOffset>0x14</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MMIS</name>
                        <displayName>I2CA0_MMIS</displayName>
                        <description>MMIS</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MICR</name>
                        <displayName>I2CA0_MICR</displayName>
                        <description>MICR</description>
                        <addressOffset>0x1C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MCR</name>
                        <displayName>I2CA0_MCR</displayName>
                        <description>MCR</description>
                        <addressOffset>0x20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MCLKOCNT</name>
                        <displayName>I2CA0_MCLKOCNT</displayName>
                        <description>MCLKOCNT</description>
                        <addressOffset>0x24</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CNTL</name>
                                <description>I2C Master Count</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MBMON</name>
                        <displayName>I2CA0_MBMON</displayName>
                        <description>MBMON</description>
                        <addressOffset>0x2C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MBLEN</name>
                        <displayName>I2CA0_MBLEN</displayName>
                        <description>MBLEN</description>
                        <addressOffset>0x30</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CNTL</name>
                                <description>I2C Burst Length</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MBCNT</name>
                        <displayName>I2CA0_MBCNT</displayName>
                        <description>MBCNT</description>
                        <addressOffset>0x34</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CNTL</name>
                                <description>I2C Master Burst Count</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SOAR</name>
                        <displayName>I2CA0_SOAR</displayName>
                        <description>SOAR</description>
                        <addressOffset>0x800</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>OAR</name>
                                <description>I2C Slave Own Address</description>
                                <lsb>0</lsb>
                                <msb>6</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SCSR</name>
                        <displayName>I2CA0_SCSR</displayName>
                        <description>SCSR</description>
                        <addressOffset>0x804</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SDR</name>
                        <displayName>I2CA0_SDR</displayName>
                        <description>SDR</description>
                        <addressOffset>0x808</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DATA</name>
                                <description>Data for Transfer</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SIMR</name>
                        <displayName>I2CA0_SIMR</displayName>
                        <description>SIMR</description>
                        <addressOffset>0x80C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SRIS</name>
                        <displayName>I2CA0_SRIS</displayName>
                        <description>SRIS</description>
                        <addressOffset>0x810</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SMIS</name>
                        <displayName>I2CA0_SMIS</displayName>
                        <description>SMIS</description>
                        <addressOffset>0x814</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SICR</name>
                        <displayName>I2CA0_SICR</displayName>
                        <description>SICR</description>
                        <addressOffset>0x818</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SOAR2</name>
                        <displayName>I2CA0_SOAR2</displayName>
                        <description>SOAR2</description>
                        <addressOffset>0x81C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>OAR2</name>
                                <description>I2C Slave Own Address 2</description>
                                <lsb>0</lsb>
                                <msb>6</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SACKCTL</name>
                        <displayName>I2CA0_SACKCTL</displayName>
                        <description>SACKCTL</description>
                        <addressOffset>0x820</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FIFODATA</name>
                        <displayName>I2CA0_FIFODATA</displayName>
                        <description>FIFODATA</description>
                        <addressOffset>0xF00</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DATA</name>
                                <description>I2C FIFO Data Byte</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>FIFOCTL</name>
                        <displayName>I2CA0_FIFOCTL</displayName>
                        <description>FIFOCTL</description>
                        <addressOffset>0xF04</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>RXTRIG</name>
                                <description>RX FIFO Trigger</description>
                                <lsb>16</lsb>
                                <msb>18</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TXTRIG</name>
                                <description>TX FIFO Trigger</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>FIFOSTATUS</name>
                        <displayName>I2CA0_FIFOSTATUS</displayName>
                        <description>FIFOSTATUS</description>
                        <addressOffset>0xF08</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>OBSMUXSEL0</name>
                        <displayName>I2CA0_OBSMUXSEL0</displayName>
                        <description>OBSMUXSEL0</description>
                        <addressOffset>0xF80</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>LN3</name>
                                <description>Observation Mux Lane 3</description>
                                <lsb>24</lsb>
                                <msb>26</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>LN2</name>
                                <description>Observation Mux Lane 2</description>
                                <lsb>16</lsb>
                                <msb>18</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>LN1</name>
                                <description>Observation Mux Lane 1</description>
                                <lsb>8</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>LN0</name>
                                <description>Observation Mux Lane 0</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>OBSMUXSEL1</name>
                        <displayName>I2CA0_OBSMUXSEL1</displayName>
                        <description>OBSMUXSEL1</description>
                        <addressOffset>0xF84</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>LN7</name>
                                <description>Observation Mux Lane 7</description>
                                <lsb>24</lsb>
                                <msb>26</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>LN6</name>
                                <description>Observation Mux Lane 6</description>
                                <lsb>16</lsb>
                                <msb>18</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>LN5</name>
                                <description>Observation Mux Lane 5</description>
                                <lsb>8</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>LN4</name>
                                <description>Observation Mux Lane 4</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MUXROUTE</name>
                        <displayName>I2CA0_MUXROUTE</displayName>
                        <description>MUXROUTE</description>
                        <addressOffset>0xF88</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>LN7ROUTE</name>
                                <description>Lane 7 output is routed to the lane pointed to by the offset in this bit field</description>
                                <lsb>28</lsb>
                                <msb>30</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>LN6ROUTE</name>
                                <description>Lane 6 output is routed to the lane pointed to by the offset in this bit field</description>
                                <lsb>24</lsb>
                                <msb>26</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>LN5ROUTE</name>
                                <description>Lane 5 output is routed to the lane pointed to by the offset in this bit field</description>
                                <lsb>20</lsb>
                                <msb>22</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>LN4ROUTE</name>
                                <description>Lane 4 output is routed to the lane pointed to by the offset in this bit field</description>
                                <lsb>16</lsb>
                                <msb>18</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>LN3ROUTE</name>
                                <description>Lane 3 output is routed to the lane pointed to by the offset in this bit field</description>
                                <lsb>12</lsb>
                                <msb>14</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>LN2ROUTE</name>
                                <description>Lane 2 output is routed to the lane pointed to by the offset in this bit field</description>
                                <lsb>8</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>LN1ROUTE</name>
                                <description>Lane 1 output is routed to the lane pointed to by the offset in this bit field</description>
                                <lsb>4</lsb>
                                <msb>6</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>LN0ROUTE</name>
                                <description>Lane 0 output is routed to the lane pointed to by the offset in this bit field</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>PV</name>
                        <displayName>I2CA0_PV</displayName>
                        <description>PV</description>
                        <addressOffset>0xFB0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MAJOR</name>
                                <description>Major Revision</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MINOR</name>
                                <description>Minor Revision</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>PP</name>
                        <displayName>I2CA0_PP</displayName>
                        <description>PP</description>
                        <addressOffset>0xFC0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PC</name>
                        <displayName>I2CA0_PC</displayName>
                        <description>PC</description>
                        <addressOffset>0xFC4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CC</name>
                        <displayName>I2CA0_CC</displayName>
                        <description>CC</description>
                        <addressOffset>0xFC8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>GPIOA4</name>
                <version>1.0</version>
                <description>GPIOA4</description>
                <baseAddress>0x40024000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>DATA</name>
                        <displayName>GPIOA4_DATA</displayName>
                        <description>0x4000 5000 0x4000 6000 0x4000 7000 0x4002 4000 GPIO Data (GPIODATA)@@ offset 0x000 The GPIODATA register is the data register. In software control mode@@ values written in the GPIODATA register are transferred onto the GPIO port pins if the respective pins have been configured as outputs through the GPIO Direction (GPIODIR) register (see page 653). In order to write to GPIODATA@@ the corresponding bits in the mask@@ resulting from the address bus bits [9:2]@@ must be set. Otherwise@@ the bit values remain unchanged by the write. Similarly@@ the values read from this register are determined for each bit by the mask bit derived from the address used to access the data register@@ bits [9:2]. Bits that are set in the address mask cause the corresponding bits in GPIODATA to be read@@ and bits that are clear in the address mask cause the corresponding bits in GPIODATA to be read as 0@@ regardless of their value. A read from GPIODATA returns the last bit value written if the respective pins are configured as outputs@@ or it returns the value on the corresponding input pin when these are configured as inputs. All bits are cleared by a reset.</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DIR</name>
                        <displayName>GPIOA4_DIR</displayName>
                        <description>0x4000 5400 0x4000 6400 0x4000 7400 0x4002 4400 GPIO Direction (GPIODIR)@@ offset 0x400 The GPIODIR register is the data direction register. Setting a bit in the GPIODIR register configures the corresponding pin to be an output@@ while clearing a bit configures the corresponding pin to be an input. All bits are cleared by a reset@@ meaning all GPIO pins are inputs by default.</description>
                        <addressOffset>0x400</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IS</name>
                        <displayName>GPIOA4_IS</displayName>
                        <description>0x4000 5404 0x4000 6404 0x4000 7404 0x4002 4404 GPIO Interrupt Sense (GPIOIS)@@ offset 0x404 The GPIOIS register is the interrupt sense register. Setting a bit in the GPIOIS register configures the corresponding pin to detect levels@@ while clearing a bit configures the corresponding pin to detect edges. All bits are cleared by a reset.</description>
                        <addressOffset>0x404</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IBE</name>
                        <displayName>GPIOA4_IBE</displayName>
                        <description>0x4000 5408 0x4000 6408 0x4000 7408 0x4002 4408 GPIO Interrupt Both Edges (GPIOIBE)@@ offset 0x408 The GPIOIBE register allows both edges to cause interrupts. When the corresponding bit in the GPIO Interrupt Sense (GPIOIS) register is set to detect edges@@ setting a bit in the GPIOIBE register configures the corresponding pin to detect both rising and falling edges@@ regardless of the corresponding bit in the GPIO Interrupt Event (GPIOIEV) register . Clearing a bit configures the pin to be controlled by the GPIOIEV register. All bits are cleared by a reset.</description>
                        <addressOffset>0x408</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IEV</name>
                        <displayName>GPIOA4_IEV</displayName>
                        <description>0x4000 540C 0x4000 640C 0x4000 740C 0x4002 440C GPIO Interrupt Event (GPIOIEV)@@ offset 0x40C The GPIOIEV register is the interrupt event register. Setting a bit in the GPIOIEV register configures the corresponding pin to detect rising edges or high levels@@ depending on the corresponding bit value in the GPIO Interrupt Sense (GPIOIS) register . Clearing a bit configures the pin to detect falling edges or low levels@@ depending on the corresponding bit value in the GPIOIS register. All bits are cleared by a reset.</description>
                        <addressOffset>0x40C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IM</name>
                        <displayName>GPIOA4_IM</displayName>
                        <description>0x4000 5410 0x4000 6410 0x4000 7410 0x4002 4410 GPIO Interrupt Mask (GPIOIM)@@ offset 0x410 The GPIOIM register is the interrupt mask register. Setting a bit in the GPIOIM register allows interrupts that are generated by the corresponding pin to be sent to the interrupt controller on the combined interrupt signal. Clearing a bit prevents an interrupt on the corresponding pin from being sent to the interrupt controller. All bits are cleared by a reset.</description>
                        <addressOffset>0x410</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RIS</name>
                        <displayName>GPIOA4_RIS</displayName>
                        <description>0x4000 5414 0x4000 6414 0x4000 7414 0x4002 4414 GPIO Raw Interrupt Status (GPIORIS)@@ offset 0x414 The GPIORIS register is the raw interrupt status register. A bit in this register is set when an interrupt condition occurs on the corresponding GPIO pin. If the corresponding bit in the GPIO Interrupt Mask (GPIOIM) register is set@@ the interrupt is sent to the interrupt controller. Bits read as zero indicate that corresponding input pins have not initiated an interrupt. A bit in this register can be cleared by writing a 1 to the corresponding bit in the GPIO Interrupt Clear (GPIOICR) register.</description>
                        <addressOffset>0x414</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MIS</name>
                        <displayName>GPIOA4_MIS</displayName>
                        <description>0x4000 5418 0x4000 6418 0x4000 7418 0x4002 4418 GPIO Masked Interrupt Status (GPIOMIS)@@ offset 0x418 The GPIOMIS register is the masked interrupt status register. If a bit is set in this register@@ the corresponding interrupt has triggered an interrupt to the interrupt controller. If a bit is clear@@ either no interrupt has been generated@@ or the interrupt is masked. If no port pin@@ other than the one that is being used as an ADC trigger@@ is being used to generate interrupts@@ the appropriate Interrupt Set Enable (ENn) register can disable the interrupts for the port@@ and the ADC interrupt can be used to read back the converted data. Otherwise@@ the port interrupt handler must ignore and clear interrupts on the port pin and wait for the ADC interrupt@@ or the ADC interrupt must be disabled in the EN0 register and the port interrupt handler must poll the ADC registers until the conversion is completed. If no port pin@@ other than the one that is being used as an ADC trigger@@ is being used to generate interrupts@@ the appropriate Interrupt Set Enable (ENn) register can disable the interrupts for the port@@ and the ADC interrupt can be used to read back the converted data. Otherwise@@ the port interrupt handler must ignore and clear interrupts on the port pin and wait for the ADC interrupt@@ or the ADC interrupt must be disabled in the EN0 register and the port interrupt handler must poll the ADC registers until the conversion is completed. Note that if the Port B GPIOADCCTL register is cleared@@ PB4 can still be used as an external trigger for the ADC. This is a legacy mode which allows code written for previous Stellaris devices to operate on this microcontroller. GPIOMIS is the state of the interrupt after masking.</description>
                        <addressOffset>0x418</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ICR</name>
                        <displayName>GPIOA4_ICR</displayName>
                        <description>0x4000 541C 0x4000 641C 0x4000 741C 0x4002 441C GPIO Interrupt Clear (GPIOICR)@@ offset 0x41C The GPIOICR register is the interrupt clear register. Writing a 1 to a bit in this register clears the corresponding interrupt bit in the GPIORIS and GPIOMIS registers. Writing a 0 has no effect.</description>
                        <addressOffset>0x41C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>AFSEL</name>
                        <displayName>GPIOA4_AFSEL</displayName>
                        <description>0x4000 5420 0x4000 6420 0x4000 7420 0x4002 4420 GPIO Alternate Function Select (GPIOAFSEL)@@ offset 0x420 The GPIOAFSEL register is the mode control select register. If a bit is clear@@ the pin is used as a GPIO and is controlled by the GPIO registers. Setting a bit in this register configures the corresponding GPIO line to be controlled by an associated peripheral. Several possible peripheral functions are multiplexed on each GPIO. The GPIO Port Control (GPIOPCTL) register is used to select one of the possible functions.</description>
                        <addressOffset>0x420</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DR2R</name>
                        <displayName>GPIOA4_DR2R</displayName>
                        <description>0x4000 5500 0x4000 6500 0x4000 7500 0x4002 4500 GPIO 2-mA Drive Select (GPIODR2R)@@ offset 0x500 The GPIODR2R register is the 2-mA drive control register. Each GPIO signal in the port can be individually configured without affecting the other pads. When setting the DRV2 bit for a GPIO signal@@ the corresponding DRV4 bit in the GPIODR4R register and DRV8 bit in the GPIODR8R register are automatically cleared by hardware. By default@@ all GPIO pins have 2-mA drive.</description>
                        <addressOffset>0x500</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DR4R</name>
                        <displayName>GPIOA4_DR4R</displayName>
                        <description>0x4000 5504 0x4000 6504 0x4000 7504 0x4002 4504 GPIO 4-mA Drive Select (GPIODR4R)@@ offset 0x504 The GPIODR4R register is the 4-mA drive control register. Each GPIO signal in the port can be individually configured without affecting the other pads. When setting the DRV4 bit for a GPIO signal@@ the corresponding DRV2 bit in the GPIODR2R register and DRV8 bit in the GPIODR8R register are automatically cleared by hardware.</description>
                        <addressOffset>0x504</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DR8R</name>
                        <displayName>GPIOA4_DR8R</displayName>
                        <description>0x4000 5508 0x4000 6508 0x4000 7508 0x4002 4508 GPIO 8-mA Drive Select (GPIODR8R)@@ offset 0x508 The GPIODR8R register is the 8-mA drive control register. Each GPIO signal in the port can be individually configured without affecting the other pads. When setting the DRV8 bit for a GPIO signal@@ the corresponding DRV2 bit in the GPIODR2R register and DRV4 bit in the GPIODR4R register are automatically cleared by hardware. The 8-mA setting is also used for high-current operation. Note: There is no configuration difference between 8-mA and high-current operation. The additional current capacity results from a shift in the VOH/VOL levels.</description>
                        <addressOffset>0x508</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ODR</name>
                        <displayName>GPIOA4_ODR</displayName>
                        <description>0x4000 550C 0x4000 650C 0x4000 750C 0x4002 450C GPIO Open Drain Select (GPIOODR)@@ offset 0x50C The GPIOODR register is the open drain control register. Setting a bit in this register enables the open-drain configuration of the corresponding GPIO pad. When open-drain mode is enabled@@ the corresponding bit should also be set in the GPIO Digital Input Enable (GPIODEN) register . Corresponding bits in the drive strength and slew rate control registers (GPIODR2R@@ GPIODR4R@@ GPIODR8R@@ and GPIOSLR) can be set to achieve the desired rise and fall times. The GPIO acts as an open-drain input if the corresponding bit in the GPIODIR register is cleared. If open drain is selected while the GPIO is configured as an input@@ the GPIO will remain an input and the open-drain selection has no effect until the GPIO is changed to an output. When using the I2C module@@ in addition to configuring the pin to open drain@@ the GPIO Alternate Function Select (GPIOAFSEL) register bits for the I2C clock and data pins should be set</description>
                        <addressOffset>0x50C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PUR</name>
                        <displayName>GPIOA4_PUR</displayName>
                        <description>0x4000 5510 0x4000 6510 0x4000 7510 0x4002 4510 GPIO Pull-Up Select (GPIOPUR)@@ offset 0x510 The GPIOPUR register is the pull-up control register. When a bit is set@@ a weak pull-up resistor on the corresponding GPIO signal is enabled. Setting a bit in GPIOPUR automatically clears the corresponding bit in the GPIO Pull-Down Select (GPIOPDR) register . Write access to this register is protected with the GPIOCR register. Bits in GPIOCR that are cleared prevent writes to the equivalent bit in this register.</description>
                        <addressOffset>0x510</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PDR</name>
                        <displayName>GPIOA4_PDR</displayName>
                        <description>0x4000 5514 0x4000 6514 0x4000 7514 0x4002 4514 GPIO Pull-Down Select (GPIOPDR)@@ offset 0x514 The GPIOPDR register is the pull-down control register. When a bit is set@@ a weak pull-down resistor on the corresponding GPIO signal is enabled. Setting a bit in GPIOPDR automatically clears the corresponding bit in the GPIO Pull-Up Select (GPIOPUR) register</description>
                        <addressOffset>0x514</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SLR</name>
                        <displayName>GPIOA4_SLR</displayName>
                        <description>0x4000 5518 0x4000 6518 0x4000 7518 0x4002 4518 The GPIOSLR register is the slew rate control register. Slew rate control is only available when using the 8-mA drive strength option via the GPIO 8-mA Drive Select (GPIODR8R) register</description>
                        <addressOffset>0x518</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DEN</name>
                        <displayName>GPIOA4_DEN</displayName>
                        <description>0x4000 551C 0x4000 651C 0x4000 751C 0x4002 451C GPIO Digital Enable (GPIODEN)@@ offset 0x51C Note: Pins configured as digital inputs are Schmitt-triggered. The GPIODEN register is the digital enable register. By default@@ all GPIO signals except those listed below are configured out of reset to be undriven (tristate). Their digital function is disabled; they do not drive a logic value on the pin and they do not allow the pin voltage into the GPIO receiver. To use the pin as a digital input or output (either GPIO or alternate function)@@ the corresponding GPIODEN bit must be set.</description>
                        <addressOffset>0x51C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>LOCK</name>
                        <displayName>GPIOA4_LOCK</displayName>
                        <description>0x4000 5520 0x4000 6520 0x4000 7520 0x4002 4520 GPIO Lock (GPIOLOCK)@@ offset 0x520 The GPIOLOCK register enables write access to the GPIOCR register . Writing 0x4C4F.434B to the GPIOLOCK register unlocks the GPIOCR register. Writing any other value to the GPIOLOCK register re-enables the locked state. Reading the GPIOLOCK register returns the lock status rather than the 32-bit value that was previously written. Therefore@@ when write accesses are disabled@@ or locked@@ reading the GPIOLOCK register returns 0x0000.0001. When write accesses are enabled@@ or unlocked@@ reading the GPIOLOCK register returns 0x0000.0000.</description>
                        <addressOffset>0x520</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CR</name>
                        <displayName>GPIOA4_CR</displayName>
                        <description>0x4000 5524 0x4000 6524 0x4000 7524 0x4002 4524 GPIO Commit (GPIOCR)@@ offset 0x524 The GPIOCR register is the commit register. The value of the GPIOCR register determines which bits of the GPIOAFSEL@@ GPIOPUR@@ GPIOPDR@@ and GPIODEN registers are committed when a write to these registers is performed. If a bit in the GPIOCR register is cleared@@ the data being written to the corresponding bit in the GPIOAFSEL@@ GPIOPUR@@ GPIOPDR@@ or GPIODEN registers cannot be committed and retains its previous value. If a bit in the GPIOCR register is set@@ the data being written to the corresponding bit of the GPIOAFSEL@@ GPIOPUR@@ GPIOPDR@@ or GPIODEN registers is committed to the register and reflects the new value. The contents of the GPIOCR register can only be modified if the status in the GPIOLOCK register is unlocked. Writes to the GPIOCR register are ignored if the status in the GPIOLOCK register is locked.</description>
                        <addressOffset>0x524</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>AMSEL</name>
                        <displayName>GPIOA4_AMSEL</displayName>
                        <description>0x4000 5528 0x4000 6528 0x4000 7528 0x4002 4528 The GPIOAMSEL register controls isolation circuits to the analog side of a unified I/O pad. Because the GPIOs may be driven by a 5-V source and affect analog operation@@ analog circuitry requires isolation from the pins when they are not used in their analog function. Each bit of this register controls the isolation circuitry for the corresponding GPIO signal.</description>
                        <addressOffset>0x528</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCTL</name>
                        <displayName>GPIOA4_PCTL</displayName>
                        <description>This register is not used in cc3xx. equivalant register exsist outside GPIO IP (refer PAD*_config register in the shared comn space) 0x4000 552C 0x4000 652C 0x4000 752C 0x4002 452C GPIO Port Control (GPIOPCTL)@@ offset 0x52C The GPIOPCTL register is used in conjunction with the GPIOAFSEL register and selects the specific peripheral signal for each GPIO pin when using the alternate function mode. Most bits in the GPIOAFSEL register are cleared on reset@@ therefore most GPIO pins are configured as GPIOs by default. When a bit is set in the GPIOAFSEL register@@ the corresponding GPIO signal is controlled by an associated peripheral. The GPIOPCTL register selects one out of a set of peripheral functions for each GPIO@@ providing additional flexibility in signal definition.</description>
                        <addressOffset>0x52C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ADCCTL</name>
                        <displayName>GPIOA4_ADCCTL</displayName>
                        <description>This register is not used in cc3xx. ADC trigger via GPIO is not supported. 0x4000 5530 0x4000 6530 0x4000 7530 0x4002 4530 GPIO ADC Control (GPIOADCCTL)@@ offset 0x530 This register is used to configure a GPIO pin as a source for the ADC trigger. Note that if the Port B GPIOADCCTL register is cleared@@ PB4 can still be used as an external trigger for the ADC. This is a legacy mode which allows code written for previous Stellaris devices to operate on this microcontroller.</description>
                        <addressOffset>0x530</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DMACTL</name>
                        <displayName>GPIOA4_DMACTL</displayName>
                        <description>0x4000 5534 0x4000 6534 0x4000 7534 0x4002 4534 GPIO DMA Control (GPIODMACTL)@@ offset 0x534 This register is used to configure a GPIO pin as a source for the ?DMA trigger.</description>
                        <addressOffset>0x534</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SI</name>
                        <displayName>GPIOA4_SI</displayName>
                        <description>0x4000 5538 0x4000 6538 0x4000 7538 0x4002 4538 GPIO Select Interrupt (GPIOSI)@@ offset 0x538 This register is used to enable individual interrupts for each pin. Note: This register is only available on Port P and Port Q.</description>
                        <addressOffset>0x538</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID4</name>
                        <displayName>GPIOA4_PERIPHID4</displayName>
                        <description>0x4000 5FD0 0x4000 6FD0 0x4000 7FD0 0x4002 4FD0 GPIO Peripheral Identification 4 (GPIOPeriphID4)@@ offset 0xFD0 The GPIOPeriphID4@@ GPIOPeriphID5@@ GPIOPeriphID6@@ and GPIOPeriphID7 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFD0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID5</name>
                        <displayName>GPIOA4_PERIPHID5</displayName>
                        <description>0x4000 5FD4 0x4000 6FD4 0x4000 7FD4 0x4002 4FD4 GPIO Peripheral Identification 5 (GPIOPeriphID5)@@ offset 0xFD4 The GPIOPeriphID4@@ GPIOPeriphID5@@ GPIOPeriphID6@@ and GPIOPeriphID7 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFD4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID6</name>
                        <displayName>GPIOA4_PERIPHID6</displayName>
                        <description>0x4000 5FD8 0x4000 6FD8 0x4000 7FD8 0x4002 4FD8 GPIO Peripheral Identification 6 (GPIOPeriphID6)@@ offset 0xFD8 The GPIOPeriphID4@@ GPIOPeriphID5@@ GPIOPeriphID6@@ and GPIOPeriphID7 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFD8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID7</name>
                        <displayName>GPIOA4_PERIPHID7</displayName>
                        <description>0x4000 5FDC 0x4000 6FDC 0x4000 7FDC 0x4002 4FDC GPIO Peripheral Identification 7 (GPIOPeriphID7)@@ offset 0xFDC The GPIOPeriphID4@@ GPIOPeriphID5@@ GPIOPeriphID6@@ and GPIOPeriphID7 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFDC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID0</name>
                        <displayName>GPIOA4_PERIPHID0</displayName>
                        <description>0x4000 5FE0 0x4000 6FE0 0x4000 7FE0 0x4002 4FE0 GPIO Peripheral Identification 0 (GPIOPeriphID0)@@ offset 0xFE0 The GPIOPeriphID0@@ GPIOPeriphID1@@ GPIOPeriphID2@@ and GPIOPeriphID3 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFE0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID1</name>
                        <displayName>GPIOA4_PERIPHID1</displayName>
                        <description>0x4000 5FE4 0x4000 6FE4 0x4000 7FE4 0x4002 4FE4 GPIO Peripheral Identification 1 (GPIOPeriphID1)@@ offset 0xFE4 The GPIOPeriphID0@@ GPIOPeriphID1@@ GPIOPeriphID2@@ and GPIOPeriphID3 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFE4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID2</name>
                        <displayName>GPIOA4_PERIPHID2</displayName>
                        <description>0x4000 5FE8 0x4000 6FE8 0x4000 7FE8 0x4002 4FE8 GPIO Peripheral Identification 2 (GPIOPeriphID2)@@ offset 0xFE8 The GPIOPeriphID0@@ GPIOPeriphID1@@ GPIOPeriphID2@@ and GPIOPeriphID3 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFE8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PERIPHID3</name>
                        <displayName>GPIOA4_PERIPHID3</displayName>
                        <description>0x4000 5FEC 0x4000 6FEC 0x4000 7FEC 0x4002 4FEC GPIO Peripheral Identification 3 (GPIOPeriphID3)@@ offset 0xFEC The GPIOPeriphID0@@ GPIOPeriphID1@@ GPIOPeriphID2@@ and GPIOPeriphID3 registers can conceptually be treated as one 32-bit register; each register contains eight bits of the 32-bit register@@ used by software to identify the peripheral.</description>
                        <addressOffset>0xFEC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCELLID0</name>
                        <displayName>GPIOA4_PCELLID0</displayName>
                        <description>0x4000 5FF0 0x4000 6FF0 0x4000 7FF0 0x4002 4FF0 GPIO PrimeCell Identification 0 (GPIOPCellID0)@@ offset 0xFF0 The GPIOPCellID0@@ GPIOPCellID1@@ GPIOPCellID2@@ and GPIOPCellID3 registers are four 8-bit wide registers@@ that can conceptually be treated as one 32-bit register. The register is used as a standard cross-peripheral identification system.</description>
                        <addressOffset>0xFF0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCELLID1</name>
                        <displayName>GPIOA4_PCELLID1</displayName>
                        <description>0x4000 5FF4 0x4000 6FF4 0x4000 7FF4 0x4002 4FF4 GPIO PrimeCell Identification 1 (GPIOPCellID1)@@ offset 0xFF4 The GPIOPCellID0@@ GPIOPCellID1@@ GPIOPCellID2@@ and GPIOPCellID3 registers are four 8-bit wide registers@@ that can conceptually be treated as one 32-bit register. The register is used as a standard cross-peripheral identification system.</description>
                        <addressOffset>0xFF4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCELLID2</name>
                        <displayName>GPIOA4_PCELLID2</displayName>
                        <description>0x4000 5FF8 0x4000 6FF8 0x4000 7FF8 0x4002 4FF8 GPIO PrimeCell Identification 2 (GPIOPCellID2)@@ offset 0xFF8 The GPIOPCellID0@@ GPIOPCellID1@@ GPIOPCellID2@@ and GPIOPCellID3 registers are four 8-bit wide registers@@ that can conceptually be treated as one 32-bit register. The register is used as a standard cross-peripheral identification system.</description>
                        <addressOffset>0xFF8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PCELLID3</name>
                        <displayName>GPIOA4_PCELLID3</displayName>
                        <description>0x4000 5FFC 0x4000 6FFC 0x4000 7FFC 0x4002 4FFC GPIO PrimeCell Identification 3 (GPIOPCellID3)@@ offset 0xFFC The GPIOPCellID0@@ GPIOPCellID1@@ GPIOPCellID2@@ and GPIOPCellID3 registers are four 8-bit wide registers@@ that can conceptually be treated as one 32-bit register. The register is used as a standard cross-peripheral identification system.0xb1 ****************************************************************************</description>
                        <addressOffset>0xFFC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>TIMERA0</name>
                <version>1.0</version>
                <description>TIMERA0</description>
                <baseAddress>0x40030000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>CFG</name>
                        <displayName>TIMERA0_CFG</displayName>
                        <description>GPTM Configuration</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CFG</name>
                                <description>GPTM Configuration</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAMR</name>
                        <displayName>TIMERA0_TAMR</displayName>
                        <description>GPTM Timer A Mode</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TAMR</name>
                                <description>GPTM Timer A Mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBMR</name>
                        <displayName>TIMERA0_TBMR</displayName>
                        <description>GPTM Timer B Mode</description>
                        <addressOffset>0x8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBMR</name>
                                <description>GPTM Timer B Mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CTL</name>
                        <displayName>TIMERA0_CTL</displayName>
                        <description>GPTM Control ##### GARNET BEGIN #####</description>
                        <addressOffset>0xC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBEVENT</name>
                                <description>GPTM Timer B Event Mode</description>
                                <lsb>10</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TAEVENT</name>
                                <description>GPTM Timer A Event Mode</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SYNC</name>
                        <displayName>TIMERA0_SYNC</displayName>
                        <description>GPTM Synchronize ##### GARNET END #####</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SYNC11</name>
                                <description>Synchronize GPTM Timer 11</description>
                                <lsb>22</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC10</name>
                                <description>Synchronize GPTM Timer 10</description>
                                <lsb>20</lsb>
                                <msb>21</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC9</name>
                                <description>Synchronize GPTM Timer 9</description>
                                <lsb>18</lsb>
                                <msb>19</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC8</name>
                                <description>Synchronize GPTM Timer 8</description>
                                <lsb>16</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC7</name>
                                <description>Synchronize GPTM Timer 7</description>
                                <lsb>14</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC6</name>
                                <description>Synchronize GPTM Timer 6</description>
                                <lsb>12</lsb>
                                <msb>13</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC5</name>
                                <description>Synchronize GPTM Timer 5</description>
                                <lsb>10</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC4</name>
                                <description>Synchronize GPTM Timer 4</description>
                                <lsb>8</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC3</name>
                                <description>Synchronize GPTM Timer 3</description>
                                <lsb>6</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC2</name>
                                <description>Synchronize GPTM Timer 2</description>
                                <lsb>4</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC1</name>
                                <description>Synchronize GPTM Timer 1</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC0</name>
                                <description>Synchronize GPTM Timer 0</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>IMR</name>
                        <displayName>TIMERA0_IMR</displayName>
                        <description>GPTM Interrupt Mask</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RIS</name>
                        <displayName>TIMERA0_RIS</displayName>
                        <description>GPTM Raw Interrupt Status</description>
                        <addressOffset>0x1C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MIS</name>
                        <displayName>TIMERA0_MIS</displayName>
                        <description>GPTM Masked Interrupt Status</description>
                        <addressOffset>0x20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ICR</name>
                        <displayName>TIMERA0_ICR</displayName>
                        <description>GPTM Interrupt Clear</description>
                        <addressOffset>0x24</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TAILR</name>
                        <displayName>TIMERA0_TAILR</displayName>
                        <description>GPTM Timer A Interval Load</description>
                        <addressOffset>0x28</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TAILRH</name>
                                <description>GPTM Timer A Interval Load Register High</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TAILRL</name>
                                <description>GPTM Timer A Interval Load Register Low</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBILR</name>
                        <displayName>TIMERA0_TBILR</displayName>
                        <description>GPTM Timer B Interval Load</description>
                        <addressOffset>0x2C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBILRL</name>
                                <description>GPTM Timer B Interval Load Register</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAMATCHR</name>
                        <displayName>TIMERA0_TAMATCHR</displayName>
                        <description>GPTM Timer A Match</description>
                        <addressOffset>0x30</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TBMATCHR</name>
                        <displayName>TIMERA0_TBMATCHR</displayName>
                        <description>GPTM Timer B Match</description>
                        <addressOffset>0x34</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TAPR</name>
                        <displayName>TIMERA0_TAPR</displayName>
                        <description>GPTM Timer A Prescale</description>
                        <addressOffset>0x38</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TAPSRH</name>
                                <description>GPTM Timer A Prescale High Byte ##### GARNET END #####</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TAPSR</name>
                                <description>GPTM Timer A Prescale ##### GARNET BEGIN #####</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBPR</name>
                        <displayName>TIMERA0_TBPR</displayName>
                        <description>GPTM Timer B Prescale</description>
                        <addressOffset>0x3C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBPSRH</name>
                                <description>GPTM Timer B Prescale High Byte ##### GARNET END #####</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TBPSR</name>
                                <description>GPTM Timer B Prescale ##### GARNET BEGIN #####</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAPMR</name>
                        <displayName>TIMERA0_TAPMR</displayName>
                        <description>GPTM TimerA Prescale Match</description>
                        <addressOffset>0x40</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TAPSMRH</name>
                                <description>GPTM Timer A Prescale Match High Byte ##### GARNET END #####</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TAPSMR</name>
                                <description>GPTM TimerA Prescale Match ##### GARNET BEGIN #####</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBPMR</name>
                        <displayName>TIMERA0_TBPMR</displayName>
                        <description>GPTM TimerB Prescale Match</description>
                        <addressOffset>0x44</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBPSMRH</name>
                                <description>GPTM Timer B Prescale Match High Byte ##### GARNET END #####</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TBPSMR</name>
                                <description>GPTM TimerB Prescale Match ##### GARNET BEGIN #####</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAR</name>
                        <displayName>TIMERA0_TAR</displayName>
                        <description>GPTM Timer A</description>
                        <addressOffset>0x48</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TARH</name>
                                <description>GPTM Timer A Register High</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TARL</name>
                                <description>GPTM Timer A Register Low</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBR</name>
                        <displayName>TIMERA0_TBR</displayName>
                        <description>GPTM Timer B</description>
                        <addressOffset>0x4C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBRL</name>
                                <description>GPTM Timer B</description>
                                <lsb>0</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAV</name>
                        <displayName>TIMERA0_TAV</displayName>
                        <description>GPTM Timer A Value</description>
                        <addressOffset>0x50</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TAVH</name>
                                <description>GPTM Timer A Value High</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TAVL</name>
                                <description>GPTM Timer A Register Low</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBV</name>
                        <displayName>TIMERA0_TBV</displayName>
                        <description>GPTM Timer B Value</description>
                        <addressOffset>0x54</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBVL</name>
                                <description>GPTM Timer B Register</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>RTCPD</name>
                        <displayName>TIMERA0_RTCPD</displayName>
                        <description>GPTM RTC Predivide</description>
                        <addressOffset>0x58</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>RTCPD</name>
                                <description>RTC Predivide Counter Value</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAPS</name>
                        <displayName>TIMERA0_TAPS</displayName>
                        <description>GPTM Timer A Prescale Snapshot</description>
                        <addressOffset>0x5C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PSS</name>
                                <description>GPTM Timer A Prescaler Snapshot</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBPS</name>
                        <displayName>TIMERA0_TBPS</displayName>
                        <description>GPTM Timer B Prescale Snapshot</description>
                        <addressOffset>0x60</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PSS</name>
                                <description>GPTM Timer A Prescaler Value</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAPV</name>
                        <displayName>TIMERA0_TAPV</displayName>
                        <description>GPTM Timer A Prescale Value</description>
                        <addressOffset>0x64</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PSV</name>
                                <description>GPTM Timer A Prescaler Value</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBPV</name>
                        <displayName>TIMERA0_TBPV</displayName>
                        <description>GPTM Timer B Prescale Value</description>
                        <addressOffset>0x68</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PSV</name>
                                <description>GPTM Timer B Prescaler Value</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DMAEV</name>
                        <displayName>TIMERA0_DMAEV</displayName>
                        <description>GPTM DMA Event</description>
                        <addressOffset>0x6C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PP</name>
                        <displayName>TIMERA0_PP</displayName>
                        <description>GPTM Peripheral Properties ***************************************************************************</description>
                        <addressOffset>0xFC0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SIZE</name>
                                <description>Count Size</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>TIMERA1</name>
                <version>1.0</version>
                <description>TIMERA1</description>
                <baseAddress>0x40031000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>CFG</name>
                        <displayName>TIMERA1_CFG</displayName>
                        <description>GPTM Configuration</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CFG</name>
                                <description>GPTM Configuration</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAMR</name>
                        <displayName>TIMERA1_TAMR</displayName>
                        <description>GPTM Timer A Mode</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TAMR</name>
                                <description>GPTM Timer A Mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBMR</name>
                        <displayName>TIMERA1_TBMR</displayName>
                        <description>GPTM Timer B Mode</description>
                        <addressOffset>0x8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBMR</name>
                                <description>GPTM Timer B Mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CTL</name>
                        <displayName>TIMERA1_CTL</displayName>
                        <description>GPTM Control ##### GARNET BEGIN #####</description>
                        <addressOffset>0xC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBEVENT</name>
                                <description>GPTM Timer B Event Mode</description>
                                <lsb>10</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TAEVENT</name>
                                <description>GPTM Timer A Event Mode</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SYNC</name>
                        <displayName>TIMERA1_SYNC</displayName>
                        <description>GPTM Synchronize ##### GARNET END #####</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SYNC11</name>
                                <description>Synchronize GPTM Timer 11</description>
                                <lsb>22</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC10</name>
                                <description>Synchronize GPTM Timer 10</description>
                                <lsb>20</lsb>
                                <msb>21</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC9</name>
                                <description>Synchronize GPTM Timer 9</description>
                                <lsb>18</lsb>
                                <msb>19</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC8</name>
                                <description>Synchronize GPTM Timer 8</description>
                                <lsb>16</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC7</name>
                                <description>Synchronize GPTM Timer 7</description>
                                <lsb>14</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC6</name>
                                <description>Synchronize GPTM Timer 6</description>
                                <lsb>12</lsb>
                                <msb>13</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC5</name>
                                <description>Synchronize GPTM Timer 5</description>
                                <lsb>10</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC4</name>
                                <description>Synchronize GPTM Timer 4</description>
                                <lsb>8</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC3</name>
                                <description>Synchronize GPTM Timer 3</description>
                                <lsb>6</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC2</name>
                                <description>Synchronize GPTM Timer 2</description>
                                <lsb>4</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC1</name>
                                <description>Synchronize GPTM Timer 1</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC0</name>
                                <description>Synchronize GPTM Timer 0</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>IMR</name>
                        <displayName>TIMERA1_IMR</displayName>
                        <description>GPTM Interrupt Mask</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RIS</name>
                        <displayName>TIMERA1_RIS</displayName>
                        <description>GPTM Raw Interrupt Status</description>
                        <addressOffset>0x1C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MIS</name>
                        <displayName>TIMERA1_MIS</displayName>
                        <description>GPTM Masked Interrupt Status</description>
                        <addressOffset>0x20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ICR</name>
                        <displayName>TIMERA1_ICR</displayName>
                        <description>GPTM Interrupt Clear</description>
                        <addressOffset>0x24</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TAILR</name>
                        <displayName>TIMERA1_TAILR</displayName>
                        <description>GPTM Timer A Interval Load</description>
                        <addressOffset>0x28</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TAILRH</name>
                                <description>GPTM Timer A Interval Load Register High</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TAILRL</name>
                                <description>GPTM Timer A Interval Load Register Low</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBILR</name>
                        <displayName>TIMERA1_TBILR</displayName>
                        <description>GPTM Timer B Interval Load</description>
                        <addressOffset>0x2C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBILRL</name>
                                <description>GPTM Timer B Interval Load Register</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAMATCHR</name>
                        <displayName>TIMERA1_TAMATCHR</displayName>
                        <description>GPTM Timer A Match</description>
                        <addressOffset>0x30</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TBMATCHR</name>
                        <displayName>TIMERA1_TBMATCHR</displayName>
                        <description>GPTM Timer B Match</description>
                        <addressOffset>0x34</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TAPR</name>
                        <displayName>TIMERA1_TAPR</displayName>
                        <description>GPTM Timer A Prescale</description>
                        <addressOffset>0x38</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TAPSRH</name>
                                <description>GPTM Timer A Prescale High Byte ##### GARNET END #####</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TAPSR</name>
                                <description>GPTM Timer A Prescale ##### GARNET BEGIN #####</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBPR</name>
                        <displayName>TIMERA1_TBPR</displayName>
                        <description>GPTM Timer B Prescale</description>
                        <addressOffset>0x3C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBPSRH</name>
                                <description>GPTM Timer B Prescale High Byte ##### GARNET END #####</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TBPSR</name>
                                <description>GPTM Timer B Prescale ##### GARNET BEGIN #####</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAPMR</name>
                        <displayName>TIMERA1_TAPMR</displayName>
                        <description>GPTM TimerA Prescale Match</description>
                        <addressOffset>0x40</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TAPSMRH</name>
                                <description>GPTM Timer A Prescale Match High Byte ##### GARNET END #####</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TAPSMR</name>
                                <description>GPTM TimerA Prescale Match ##### GARNET BEGIN #####</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBPMR</name>
                        <displayName>TIMERA1_TBPMR</displayName>
                        <description>GPTM TimerB Prescale Match</description>
                        <addressOffset>0x44</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBPSMRH</name>
                                <description>GPTM Timer B Prescale Match High Byte ##### GARNET END #####</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TBPSMR</name>
                                <description>GPTM TimerB Prescale Match ##### GARNET BEGIN #####</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAR</name>
                        <displayName>TIMERA1_TAR</displayName>
                        <description>GPTM Timer A</description>
                        <addressOffset>0x48</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TARH</name>
                                <description>GPTM Timer A Register High</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TARL</name>
                                <description>GPTM Timer A Register Low</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBR</name>
                        <displayName>TIMERA1_TBR</displayName>
                        <description>GPTM Timer B</description>
                        <addressOffset>0x4C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBRL</name>
                                <description>GPTM Timer B</description>
                                <lsb>0</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAV</name>
                        <displayName>TIMERA1_TAV</displayName>
                        <description>GPTM Timer A Value</description>
                        <addressOffset>0x50</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TAVH</name>
                                <description>GPTM Timer A Value High</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TAVL</name>
                                <description>GPTM Timer A Register Low</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBV</name>
                        <displayName>TIMERA1_TBV</displayName>
                        <description>GPTM Timer B Value</description>
                        <addressOffset>0x54</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBVL</name>
                                <description>GPTM Timer B Register</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>RTCPD</name>
                        <displayName>TIMERA1_RTCPD</displayName>
                        <description>GPTM RTC Predivide</description>
                        <addressOffset>0x58</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>RTCPD</name>
                                <description>RTC Predivide Counter Value</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAPS</name>
                        <displayName>TIMERA1_TAPS</displayName>
                        <description>GPTM Timer A Prescale Snapshot</description>
                        <addressOffset>0x5C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PSS</name>
                                <description>GPTM Timer A Prescaler Snapshot</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBPS</name>
                        <displayName>TIMERA1_TBPS</displayName>
                        <description>GPTM Timer B Prescale Snapshot</description>
                        <addressOffset>0x60</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PSS</name>
                                <description>GPTM Timer A Prescaler Value</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAPV</name>
                        <displayName>TIMERA1_TAPV</displayName>
                        <description>GPTM Timer A Prescale Value</description>
                        <addressOffset>0x64</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PSV</name>
                                <description>GPTM Timer A Prescaler Value</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBPV</name>
                        <displayName>TIMERA1_TBPV</displayName>
                        <description>GPTM Timer B Prescale Value</description>
                        <addressOffset>0x68</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PSV</name>
                                <description>GPTM Timer B Prescaler Value</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DMAEV</name>
                        <displayName>TIMERA1_DMAEV</displayName>
                        <description>GPTM DMA Event</description>
                        <addressOffset>0x6C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PP</name>
                        <displayName>TIMERA1_PP</displayName>
                        <description>GPTM Peripheral Properties ***************************************************************************</description>
                        <addressOffset>0xFC0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SIZE</name>
                                <description>Count Size</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>TIMERA2</name>
                <version>1.0</version>
                <description>TIMERA2</description>
                <baseAddress>0x40032000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>CFG</name>
                        <displayName>TIMERA2_CFG</displayName>
                        <description>GPTM Configuration</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CFG</name>
                                <description>GPTM Configuration</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAMR</name>
                        <displayName>TIMERA2_TAMR</displayName>
                        <description>GPTM Timer A Mode</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TAMR</name>
                                <description>GPTM Timer A Mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBMR</name>
                        <displayName>TIMERA2_TBMR</displayName>
                        <description>GPTM Timer B Mode</description>
                        <addressOffset>0x8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBMR</name>
                                <description>GPTM Timer B Mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CTL</name>
                        <displayName>TIMERA2_CTL</displayName>
                        <description>GPTM Control ##### GARNET BEGIN #####</description>
                        <addressOffset>0xC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBEVENT</name>
                                <description>GPTM Timer B Event Mode</description>
                                <lsb>10</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TAEVENT</name>
                                <description>GPTM Timer A Event Mode</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SYNC</name>
                        <displayName>TIMERA2_SYNC</displayName>
                        <description>GPTM Synchronize ##### GARNET END #####</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SYNC11</name>
                                <description>Synchronize GPTM Timer 11</description>
                                <lsb>22</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC10</name>
                                <description>Synchronize GPTM Timer 10</description>
                                <lsb>20</lsb>
                                <msb>21</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC9</name>
                                <description>Synchronize GPTM Timer 9</description>
                                <lsb>18</lsb>
                                <msb>19</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC8</name>
                                <description>Synchronize GPTM Timer 8</description>
                                <lsb>16</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC7</name>
                                <description>Synchronize GPTM Timer 7</description>
                                <lsb>14</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC6</name>
                                <description>Synchronize GPTM Timer 6</description>
                                <lsb>12</lsb>
                                <msb>13</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC5</name>
                                <description>Synchronize GPTM Timer 5</description>
                                <lsb>10</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC4</name>
                                <description>Synchronize GPTM Timer 4</description>
                                <lsb>8</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC3</name>
                                <description>Synchronize GPTM Timer 3</description>
                                <lsb>6</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC2</name>
                                <description>Synchronize GPTM Timer 2</description>
                                <lsb>4</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC1</name>
                                <description>Synchronize GPTM Timer 1</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC0</name>
                                <description>Synchronize GPTM Timer 0</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>IMR</name>
                        <displayName>TIMERA2_IMR</displayName>
                        <description>GPTM Interrupt Mask</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RIS</name>
                        <displayName>TIMERA2_RIS</displayName>
                        <description>GPTM Raw Interrupt Status</description>
                        <addressOffset>0x1C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MIS</name>
                        <displayName>TIMERA2_MIS</displayName>
                        <description>GPTM Masked Interrupt Status</description>
                        <addressOffset>0x20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ICR</name>
                        <displayName>TIMERA2_ICR</displayName>
                        <description>GPTM Interrupt Clear</description>
                        <addressOffset>0x24</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TAILR</name>
                        <displayName>TIMERA2_TAILR</displayName>
                        <description>GPTM Timer A Interval Load</description>
                        <addressOffset>0x28</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TAILRH</name>
                                <description>GPTM Timer A Interval Load Register High</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TAILRL</name>
                                <description>GPTM Timer A Interval Load Register Low</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBILR</name>
                        <displayName>TIMERA2_TBILR</displayName>
                        <description>GPTM Timer B Interval Load</description>
                        <addressOffset>0x2C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBILRL</name>
                                <description>GPTM Timer B Interval Load Register</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAMATCHR</name>
                        <displayName>TIMERA2_TAMATCHR</displayName>
                        <description>GPTM Timer A Match</description>
                        <addressOffset>0x30</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TBMATCHR</name>
                        <displayName>TIMERA2_TBMATCHR</displayName>
                        <description>GPTM Timer B Match</description>
                        <addressOffset>0x34</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TAPR</name>
                        <displayName>TIMERA2_TAPR</displayName>
                        <description>GPTM Timer A Prescale</description>
                        <addressOffset>0x38</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TAPSRH</name>
                                <description>GPTM Timer A Prescale High Byte ##### GARNET END #####</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TAPSR</name>
                                <description>GPTM Timer A Prescale ##### GARNET BEGIN #####</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBPR</name>
                        <displayName>TIMERA2_TBPR</displayName>
                        <description>GPTM Timer B Prescale</description>
                        <addressOffset>0x3C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBPSRH</name>
                                <description>GPTM Timer B Prescale High Byte ##### GARNET END #####</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TBPSR</name>
                                <description>GPTM Timer B Prescale ##### GARNET BEGIN #####</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAPMR</name>
                        <displayName>TIMERA2_TAPMR</displayName>
                        <description>GPTM TimerA Prescale Match</description>
                        <addressOffset>0x40</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TAPSMRH</name>
                                <description>GPTM Timer A Prescale Match High Byte ##### GARNET END #####</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TAPSMR</name>
                                <description>GPTM TimerA Prescale Match ##### GARNET BEGIN #####</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBPMR</name>
                        <displayName>TIMERA2_TBPMR</displayName>
                        <description>GPTM TimerB Prescale Match</description>
                        <addressOffset>0x44</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBPSMRH</name>
                                <description>GPTM Timer B Prescale Match High Byte ##### GARNET END #####</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TBPSMR</name>
                                <description>GPTM TimerB Prescale Match ##### GARNET BEGIN #####</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAR</name>
                        <displayName>TIMERA2_TAR</displayName>
                        <description>GPTM Timer A</description>
                        <addressOffset>0x48</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TARH</name>
                                <description>GPTM Timer A Register High</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TARL</name>
                                <description>GPTM Timer A Register Low</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBR</name>
                        <displayName>TIMERA2_TBR</displayName>
                        <description>GPTM Timer B</description>
                        <addressOffset>0x4C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBRL</name>
                                <description>GPTM Timer B</description>
                                <lsb>0</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAV</name>
                        <displayName>TIMERA2_TAV</displayName>
                        <description>GPTM Timer A Value</description>
                        <addressOffset>0x50</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TAVH</name>
                                <description>GPTM Timer A Value High</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TAVL</name>
                                <description>GPTM Timer A Register Low</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBV</name>
                        <displayName>TIMERA2_TBV</displayName>
                        <description>GPTM Timer B Value</description>
                        <addressOffset>0x54</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBVL</name>
                                <description>GPTM Timer B Register</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>RTCPD</name>
                        <displayName>TIMERA2_RTCPD</displayName>
                        <description>GPTM RTC Predivide</description>
                        <addressOffset>0x58</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>RTCPD</name>
                                <description>RTC Predivide Counter Value</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAPS</name>
                        <displayName>TIMERA2_TAPS</displayName>
                        <description>GPTM Timer A Prescale Snapshot</description>
                        <addressOffset>0x5C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PSS</name>
                                <description>GPTM Timer A Prescaler Snapshot</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBPS</name>
                        <displayName>TIMERA2_TBPS</displayName>
                        <description>GPTM Timer B Prescale Snapshot</description>
                        <addressOffset>0x60</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PSS</name>
                                <description>GPTM Timer A Prescaler Value</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAPV</name>
                        <displayName>TIMERA2_TAPV</displayName>
                        <description>GPTM Timer A Prescale Value</description>
                        <addressOffset>0x64</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PSV</name>
                                <description>GPTM Timer A Prescaler Value</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBPV</name>
                        <displayName>TIMERA2_TBPV</displayName>
                        <description>GPTM Timer B Prescale Value</description>
                        <addressOffset>0x68</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PSV</name>
                                <description>GPTM Timer B Prescaler Value</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DMAEV</name>
                        <displayName>TIMERA2_DMAEV</displayName>
                        <description>GPTM DMA Event</description>
                        <addressOffset>0x6C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PP</name>
                        <displayName>TIMERA2_PP</displayName>
                        <description>GPTM Peripheral Properties ***************************************************************************</description>
                        <addressOffset>0xFC0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SIZE</name>
                                <description>Count Size</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>TIMERA3</name>
                <version>1.0</version>
                <description>TIMERA3</description>
                <baseAddress>0x40033000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>CFG</name>
                        <displayName>TIMERA3_CFG</displayName>
                        <description>GPTM Configuration</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CFG</name>
                                <description>GPTM Configuration</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAMR</name>
                        <displayName>TIMERA3_TAMR</displayName>
                        <description>GPTM Timer A Mode</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TAMR</name>
                                <description>GPTM Timer A Mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBMR</name>
                        <displayName>TIMERA3_TBMR</displayName>
                        <description>GPTM Timer B Mode</description>
                        <addressOffset>0x8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBMR</name>
                                <description>GPTM Timer B Mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CTL</name>
                        <displayName>TIMERA3_CTL</displayName>
                        <description>GPTM Control ##### GARNET BEGIN #####</description>
                        <addressOffset>0xC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBEVENT</name>
                                <description>GPTM Timer B Event Mode</description>
                                <lsb>10</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TAEVENT</name>
                                <description>GPTM Timer A Event Mode</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SYNC</name>
                        <displayName>TIMERA3_SYNC</displayName>
                        <description>GPTM Synchronize ##### GARNET END #####</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SYNC11</name>
                                <description>Synchronize GPTM Timer 11</description>
                                <lsb>22</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC10</name>
                                <description>Synchronize GPTM Timer 10</description>
                                <lsb>20</lsb>
                                <msb>21</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC9</name>
                                <description>Synchronize GPTM Timer 9</description>
                                <lsb>18</lsb>
                                <msb>19</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC8</name>
                                <description>Synchronize GPTM Timer 8</description>
                                <lsb>16</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC7</name>
                                <description>Synchronize GPTM Timer 7</description>
                                <lsb>14</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC6</name>
                                <description>Synchronize GPTM Timer 6</description>
                                <lsb>12</lsb>
                                <msb>13</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC5</name>
                                <description>Synchronize GPTM Timer 5</description>
                                <lsb>10</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC4</name>
                                <description>Synchronize GPTM Timer 4</description>
                                <lsb>8</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC3</name>
                                <description>Synchronize GPTM Timer 3</description>
                                <lsb>6</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC2</name>
                                <description>Synchronize GPTM Timer 2</description>
                                <lsb>4</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC1</name>
                                <description>Synchronize GPTM Timer 1</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SYNC0</name>
                                <description>Synchronize GPTM Timer 0</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>IMR</name>
                        <displayName>TIMERA3_IMR</displayName>
                        <description>GPTM Interrupt Mask</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RIS</name>
                        <displayName>TIMERA3_RIS</displayName>
                        <description>GPTM Raw Interrupt Status</description>
                        <addressOffset>0x1C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MIS</name>
                        <displayName>TIMERA3_MIS</displayName>
                        <description>GPTM Masked Interrupt Status</description>
                        <addressOffset>0x20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ICR</name>
                        <displayName>TIMERA3_ICR</displayName>
                        <description>GPTM Interrupt Clear</description>
                        <addressOffset>0x24</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TAILR</name>
                        <displayName>TIMERA3_TAILR</displayName>
                        <description>GPTM Timer A Interval Load</description>
                        <addressOffset>0x28</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TAILRH</name>
                                <description>GPTM Timer A Interval Load Register High</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TAILRL</name>
                                <description>GPTM Timer A Interval Load Register Low</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBILR</name>
                        <displayName>TIMERA3_TBILR</displayName>
                        <description>GPTM Timer B Interval Load</description>
                        <addressOffset>0x2C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBILRL</name>
                                <description>GPTM Timer B Interval Load Register</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAMATCHR</name>
                        <displayName>TIMERA3_TAMATCHR</displayName>
                        <description>GPTM Timer A Match</description>
                        <addressOffset>0x30</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TBMATCHR</name>
                        <displayName>TIMERA3_TBMATCHR</displayName>
                        <description>GPTM Timer B Match</description>
                        <addressOffset>0x34</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TAPR</name>
                        <displayName>TIMERA3_TAPR</displayName>
                        <description>GPTM Timer A Prescale</description>
                        <addressOffset>0x38</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TAPSRH</name>
                                <description>GPTM Timer A Prescale High Byte ##### GARNET END #####</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TAPSR</name>
                                <description>GPTM Timer A Prescale ##### GARNET BEGIN #####</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBPR</name>
                        <displayName>TIMERA3_TBPR</displayName>
                        <description>GPTM Timer B Prescale</description>
                        <addressOffset>0x3C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBPSRH</name>
                                <description>GPTM Timer B Prescale High Byte ##### GARNET END #####</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TBPSR</name>
                                <description>GPTM Timer B Prescale ##### GARNET BEGIN #####</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAPMR</name>
                        <displayName>TIMERA3_TAPMR</displayName>
                        <description>GPTM TimerA Prescale Match</description>
                        <addressOffset>0x40</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TAPSMRH</name>
                                <description>GPTM Timer A Prescale Match High Byte ##### GARNET END #####</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TAPSMR</name>
                                <description>GPTM TimerA Prescale Match ##### GARNET BEGIN #####</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBPMR</name>
                        <displayName>TIMERA3_TBPMR</displayName>
                        <description>GPTM TimerB Prescale Match</description>
                        <addressOffset>0x44</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBPSMRH</name>
                                <description>GPTM Timer B Prescale Match High Byte ##### GARNET END #####</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TBPSMR</name>
                                <description>GPTM TimerB Prescale Match ##### GARNET BEGIN #####</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAR</name>
                        <displayName>TIMERA3_TAR</displayName>
                        <description>GPTM Timer A</description>
                        <addressOffset>0x48</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TARH</name>
                                <description>GPTM Timer A Register High</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TARL</name>
                                <description>GPTM Timer A Register Low</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBR</name>
                        <displayName>TIMERA3_TBR</displayName>
                        <description>GPTM Timer B</description>
                        <addressOffset>0x4C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBRL</name>
                                <description>GPTM Timer B</description>
                                <lsb>0</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAV</name>
                        <displayName>TIMERA3_TAV</displayName>
                        <description>GPTM Timer A Value</description>
                        <addressOffset>0x50</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TAVH</name>
                                <description>GPTM Timer A Value High</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TAVL</name>
                                <description>GPTM Timer A Register Low</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBV</name>
                        <displayName>TIMERA3_TBV</displayName>
                        <description>GPTM Timer B Value</description>
                        <addressOffset>0x54</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TBVL</name>
                                <description>GPTM Timer B Register</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>RTCPD</name>
                        <displayName>TIMERA3_RTCPD</displayName>
                        <description>GPTM RTC Predivide</description>
                        <addressOffset>0x58</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>RTCPD</name>
                                <description>RTC Predivide Counter Value</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAPS</name>
                        <displayName>TIMERA3_TAPS</displayName>
                        <description>GPTM Timer A Prescale Snapshot</description>
                        <addressOffset>0x5C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PSS</name>
                                <description>GPTM Timer A Prescaler Snapshot</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBPS</name>
                        <displayName>TIMERA3_TBPS</displayName>
                        <description>GPTM Timer B Prescale Snapshot</description>
                        <addressOffset>0x60</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PSS</name>
                                <description>GPTM Timer A Prescaler Value</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TAPV</name>
                        <displayName>TIMERA3_TAPV</displayName>
                        <description>GPTM Timer A Prescale Value</description>
                        <addressOffset>0x64</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PSV</name>
                                <description>GPTM Timer A Prescaler Value</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TBPV</name>
                        <displayName>TIMERA3_TBPV</displayName>
                        <description>GPTM Timer B Prescale Value</description>
                        <addressOffset>0x68</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PSV</name>
                                <description>GPTM Timer B Prescaler Value</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DMAEV</name>
                        <displayName>TIMERA3_DMAEV</displayName>
                        <description>GPTM DMA Event</description>
                        <addressOffset>0x6C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PP</name>
                        <displayName>TIMERA3_PP</displayName>
                        <description>GPTM Peripheral Properties ***************************************************************************</description>
                        <addressOffset>0xFC0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SIZE</name>
                                <description>Count Size</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>STACKDIE_CTRL</name>
                <version>1.0</version>
                <description>STACKDIE_CTRL</description>
                <baseAddress>0x400F5000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>STK_UP_RESET</name>
                        <displayName>STACKDIE_CTRL_STK_UP_RESET</displayName>
                        <description>Can be written only by Base Processor. Writing to this register will reset the stack processor reset will be de-asserted upon clearing this register.</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SR_MASTER_PRIORITY</name>
                        <displayName>STACKDIE_CTRL_SR_MASTER_PRIORITY</displayName>
                        <description>This register defines who among base processor and stack processor have highest priority for Sram Access. Can be written only by Base Processor.</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PRIORITY</name>
                                <description>00 : Equal Priority 01 : Stack Processor have priority 10 : Base Processor have priority 11 : Unused</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>STK_SR_ACC_CTL_BK2</name>
                        <displayName>STACKDIE_CTRL_STK_SR_ACC_CTL_BK2</displayName>
                        <description>In Spinlock mode this Register defines who among base processor and stack processor have access to Sram Bank2 right now. In Handshake mode this Register defines who among base processor and stack processor have access to Sram Bank2 and Bank3 right now. Its Clear only register and is set by hardware. Lower bit can be cleared only by Base Processor and Upper bit Cleared only by the Stack processor.</description>
                        <addressOffset>0x8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>BASE_UP_ACC_REQ_BK2</name>
                        <displayName>STACKDIE_CTRL_BASE_UP_ACC_REQ_BK2</displayName>
                        <description>In Spinlock mode whenever Base processor wants the access to Sram Bank2 it should request for it by writing into this register. It'll get interrupt whenever it is granted. In Handshake mode this bit will be set by Stack processor. Its a set only bit and is cleared by HW when the request is granted.</description>
                        <addressOffset>0xC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>STK_UP_ACC_REQ_BK2</name>
                        <displayName>STACKDIE_CTRL_STK_UP_ACC_REQ_BK2</displayName>
                        <description>In Spinlock mode Whenever Stack processor wants the access to Sram Bank2 it should request for it by writing into this register. It'll get interrupt whenever it is granted. In Handshake mode this bit will be set by the Base processor. Its a set only bit and is cleared by HW when the request is granted.</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>STK_SR_ACC_CTL_BK3</name>
                        <displayName>STACKDIE_CTRL_STK_SR_ACC_CTL_BK3</displayName>
                        <description>Register defines who among base processor and stack processor have access to Sram Bank3 right now. Its Clear only register and is set by hardware. Lower bit can be cleared only by Base Processor and Upper bit Cleared only by the Stack processor.</description>
                        <addressOffset>0x14</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>BASE_UP_ACC_REQ_BK3</name>
                        <displayName>STACKDIE_CTRL_BASE_UP_ACC_REQ_BK3</displayName>
                        <description>In Spinlock mode whenever Base processor wants the access to Sram Bank3 it should request for it by writing into this register. It'll get interrupt whenever it is granted. In Handshake mode this bit will be set by Stack processor. Its a set only bit and is cleared by HW when the request is granted.</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>STK_UP_ACC_REQ_BK3</name>
                        <displayName>STACKDIE_CTRL_STK_UP_ACC_REQ_BK3</displayName>
                        <description>In Spinlock mode Whenever Stack processor wants the access to Sram Bank3 it should request for it by writing into this register. It'll get interrupt whenever it is granted. In Handshake mode this bit will be set by the Base processor. Its a set only bit and is cleared by HW when the request is granted.</description>
                        <addressOffset>0x1C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RDSM_CFG_CPU</name>
                        <displayName>STACKDIE_CTRL_RDSM_CFG_CPU</displayName>
                        <description>Read State Machine timing configuration register. Generally Bit 4 and 3 will be identical. For stacked die always 43 are 0 and 6:5 == 1 for 120Mhz.</description>
                        <addressOffset>0x20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>FLCLK_PULSE_WIDTH</name>
                                <description>Bank Clock Hi Time 00 : HCLK pulse 01 : 1 cycle of HCLK 10 : 1.5 cycles of HCLK 11 : 2 cycles of HCLK</description>
                                <lsb>6</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>READ_WAIT_STATE</name>
                                <description>Number of wait states inserted</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>RDSM_CFG_EE</name>
                        <displayName>STACKDIE_CTRL_RDSM_CFG_EE</displayName>
                        <description>Read State Machine timing configuration register. Generally Bit 4 and 3 will be identical. For stacked die always 43 are 0 and 6:5 == 1 for 120Mhz.</description>
                        <addressOffset>0x24</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>FLCLK_PULSE_WIDTH</name>
                                <description>Bank Clock Hi Time 00 : HCLK pulse 01 : 1 cycle of HCLK 10 : 1.5 cycles of HCLK 11 : 2 cycles of HCLK</description>
                                <lsb>6</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>READ_WAIT_STATE</name>
                                <description>Number of wait states inserted</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>BASE_UP_IRQ_LOG</name>
                        <displayName>STACKDIE_CTRL_BASE_UP_IRQ_LOG</displayName>
                        <description>Reading this register Base procesor will able to know the reason for the interrupt. This is clear only register - set by HW upon an interrupt to Base processor and can be cleared only by BASE processor.</description>
                        <addressOffset>0x28</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>STK_UP_IRQ_LOG</name>
                        <displayName>STACKDIE_CTRL_STK_UP_IRQ_LOG</displayName>
                        <description>Reading this register Stack procesor will able to know the reason for the interrupt. This is clear only register - set by HW upon an interrupt to Stack processor and can be cleared only by Stack processor.</description>
                        <addressOffset>0x2C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>STK_CLK_EN</name>
                        <displayName>STACKDIE_CTRL_STK_CLK_EN</displayName>
                        <description>Can be written only by base processor. Controls the enable pin of the cgcs for the clocks going to CM3 dft ctrl block and Sram.</description>
                        <addressOffset>0x30</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SPIN_LOCK_MODE</name>
                        <displayName>STACKDIE_CTRL_SPIN_LOCK_MODE</displayName>
                        <description>Can be written only by the base processor. Decides the ram sharing mode :: handshake or Spinlock mode.</description>
                        <addressOffset>0x34</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>BUS_FAULT_ADDR</name>
                        <displayName>STACKDIE_CTRL_BUS_FAULT_ADDR</displayName>
                        <description>Stores the last bus fault address.</description>
                        <addressOffset>0x38</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>BUS_FAULT_CLR</name>
                        <displayName>STACKDIE_CTRL_BUS_FAULT_CLR</displayName>
                        <description>write only registers on read returns 0.W Write 1 to clear the bust fault to store the new bus fault address</description>
                        <addressOffset>0x3C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RESET_CAUSE</name>
                        <displayName>STACKDIE_CTRL_RESET_CAUSE</displayName>
                        <description>Reset cause value captured from the ICR_CLKRST block.</description>
                        <addressOffset>0x40</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>WDOG_TIMER_EVENT</name>
                        <displayName>STACKDIE_CTRL_WDOG_TIMER_EVENT</displayName>
                        <description>Watchdog timer event value captured from the ICR_CLKRST block</description>
                        <addressOffset>0x44</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DMA_REQ</name>
                        <displayName>STACKDIE_CTRL_DMA_REQ</displayName>
                        <description>To send Dma Request to bottom die.</description>
                        <addressOffset>0x48</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SRAM_JUMP_OFFSET_ADDR</name>
                        <displayName>STACKDIE_CTRL_SRAM_JUMP_OFFSET_ADDR</displayName>
                        <description>Address offset within SRAM to which CM3 should jump after reset.</description>
                        <addressOffset>0x4C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SW_REG1</name>
                        <displayName>STACKDIE_CTRL_SW_REG1</displayName>
                        <description>These are sw registers for topdie processor and bottom die processor to communicate. Both can set and read these registers. In case of write clash bottom die's processor wins and top die processor access is ignored.</description>
                        <addressOffset>0x50</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SW_REG2</name>
                        <displayName>STACKDIE_CTRL_SW_REG2</displayName>
                        <description>These are sw registers for topdie processor and bottom die processor to communicate. Both can set and read these registers. In case of write clash bottom die's processor wins and top die processor access is ignored.</description>
                        <addressOffset>0x54</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FMC_SLEEP_CTL</name>
                        <displayName>STACKDIE_CTRL_FMC_SLEEP_CTL</displayName>
                        <description>By posting the request Flash can be put into low-power mode (Sleep) without powering down the Flash. Earlier (in Garnet) this was fully h/w controlled and the control for this was coming from SysCtl while entering into Cortex Deep-sleep mode. But for our device the D2D i/f doesnt support this. The Firmware has to program the register in the top-die for entering into this mode and wait for an interrupt.</description>
                        <addressOffset>0x58</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MISC_CTL</name>
                        <displayName>STACKDIE_CTRL_MISC_CTL</displayName>
                        <description>Miscellanious control register.</description>
                        <addressOffset>0x5C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SW_DFT_CTL</name>
                        <displayName>STACKDIE_CTRL_SW_DFT_CTL</displayName>
                        <description>DFT control and status bits</description>
                        <addressOffset>0xFC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PADN_CTL_0</name>
                        <displayName>STACKDIE_CTRL_PADN_CTL_0</displayName>
                        <description>Mainly for For controlling the pads OEN pins. There are total 60 pads and hence 60 control registe i.e n value varies from 0 to 59. Here is the mapping for the pad_ctl register number and the functionality : 0 D2DPAD_DMAREQ1 1 D2DPAD_DMAREQ0 2 D2DPAD_INT2BASE 3 D2DPAD_PIOSC 4 D2DPAD_RST_N 5 D2DPAD_POR_RST_N 6 D2DPAD_HCLK 7 D2DPAD_JTAG_TDO 8 D2DPAD_JTAG_TCK 9 D2DPAD_JTAG_TMS 10 D2DPAD_JTAG_TDI 11-27 D2DPAD_FROMSTACK[D2D_FROMSTACK_SIZE -1:0] 28-56 D2DPAD_TOSTACK [D2D_TOSTACK_SIZE -1:0] 57-59 D2DPAD_SPARE [D2D_SPARE_PAD_SIZE -1:0] 0:00 ****************************************************************************</description>
                        <addressOffset>0x100</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>COMMON_REG</name>
                <version>1.0</version>
                <description>COMMON_REG</description>
                <baseAddress>0x400F7000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>I2C_PROPERTIES_REGISTER</name>
                        <displayName>COMMON_REG_I2C_PROPERTIES_REGISTER</displayName>
                        <description>I2C_PROPERTIES_REGISTER</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>COMMON_REG_I2C_Properties_Register_I2C_Properties_Register</name>
                                <description>Each semaphore register is of 2 bit.  When this register is set to 2b01  Apps have access and when set to 2b10  NW have access.  Ideally both the master can modify any of this 2 bit, but assumption apps will write only 2b01 or 2b00 to this register and nw will write only 2b10 or 2b00.  Implementation is when any of the bit of this register is set, only next write allowedvis 2b00  Again assumption is one master will not write 2b00 if other is already holding the semaphore.</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SPI_PROPERTIES_REGISTER</name>
                        <displayName>COMMON_REG_SPI_PROPERTIES_REGISTER</displayName>
                        <description>SPI_PROPERTIES_REGISTER</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>COMMON_REG_SPI_Properties_Register_SPI_Properties_Register</name>
                                <description>Each semaphore register is of 2 bit.  When this register is set to 2b01  Apps have access and when set to 2b10  NW have access.  Ideally both the master can modify any of this 2 bit, but assumption apps will write only 2b01 or 2b00 to this register and nw will write only 2b10 or 2b00.  Implementation is when any of the bit of this register is set, only next write allowedvis 2b00  Again assumption is one master will not write 2b00 if other is already holding the semaphore.</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APPS_SH_RESOURCE_INTERRUPT_ENABLE</name>
                        <displayName>COMMON_REG_APPS_SH_RESOURCE_INTERRUPT_ENABLE</displayName>
                        <description>APPS_SH_RESOURCE_INTERRUPT_ENABLE</description>
                        <addressOffset>0xC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>COMMON_REG_APPS_sh_resource_Interrupt_enable_APPS_sh_resource_Interrupt_enable</name>
                                <description>Interrupt enable APPS bit 0 -&gt; when '1' enable I2C interrupt bit 1 -&gt; when '1' enable SPI interrupt bit 3 -&gt; when '1' enable GPIO interrupt</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APPS_SH_RESOURCE_INTERRUPT_STATUS</name>
                        <displayName>COMMON_REG_APPS_SH_RESOURCE_INTERRUPT_STATUS</displayName>
                        <description>APPS_SH_RESOURCE_INTERRUPT_STATUS</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>COMMON_REG_APPS_sh_resource_Interrupt_status_APPS_sh_resource_Interrupt_status</name>
                                <description>Interrupt enable APPS bit 0 -&gt; when '1' enable I2C interrupt bit 1 -&gt; when '1' enable SPI interrupt bit 3 -&gt; when '1' enable GPIO interrupt</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>NWP_SH_RESOURCE_INTERRUPT_ENABLE</name>
                        <displayName>COMMON_REG_NWP_SH_RESOURCE_INTERRUPT_ENABLE</displayName>
                        <description>NWP_SH_RESOURCE_INTERRUPT_ENABLE</description>
                        <addressOffset>0x14</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>COMMON_REG_NWP_sh_resource_Interrupt_enable_NWP_sh_resource_Interrupt_enable</name>
                                <description>Interrupt enable NWP bit 0 -&gt; when '1' enable I2C interrupt bit 1 -&gt; when '1' enable SPI interrupt bit 3 -&gt; when '1' enable GPIO interrupt</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>NWP_SH_RESOURCE_INTERRUPT_STATUS</name>
                        <displayName>COMMON_REG_NWP_SH_RESOURCE_INTERRUPT_STATUS</displayName>
                        <description>NWP_SH_RESOURCE_INTERRUPT_STATUS</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>COMMON_REG_NWP_sh_resource_Interrupt_status_NWP_sh_resource_Interrupt_status</name>
                                <description>Interrupt enable NWP bit 0 -&gt; when '1' enable I2C interrupt bit 1 -&gt; when '1' enable SPI interrupt bit 3 -&gt; when '1' enable GPIO interrupt</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>FLASH_CTRL_REG</name>
                        <displayName>COMMON_REG_FLASH_CTRL_REG</displayName>
                        <description>FLASH_CTRL_REG</description>
                        <addressOffset>0x1C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>COMMON_REG_Flash_ctrl_reg_Flash_ctrl_reg</name>
                                <description>Each semaphore register is of 2 bit.  When this register is set to 2b01  Apps have access and when set to 2b10  NW have access.  Ideally both the master can modify any of this 2 bit, but assumption apps will write only 2b01 or 2b00 to this register and nw will write only 2b10 or 2b00.  Implementation is when any of the bit of this register is set, only next write allowedvis 2b00  Again assumption is one master will not write 2b00 if other is already holding the semaphore.</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>BUS_MATRIX_M0_SEGMENT_ACCESS_CONFIG</name>
                        <displayName>COMMON_REG_BUS_MATRIX_M0_SEGMENT_ACCESS_CONFIG</displayName>
                        <description>BUS_MATRIX_M0_SEGMENT_ACCESS_CONFIG</description>
                        <addressOffset>0x24</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>COMMON_REG_Bus_matrix_M0_segment_access_config_Bus_matrix_M0_segment_access_config</name>
                                <description>Master 0 control word matrix to each segment. Tieoff. Bit value 1 indicates segment is accesable.</description>
                                <lsb>0</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>BUS_MATRIX_M1_SEGMENT_ACCESS_CONFIG</name>
                        <displayName>COMMON_REG_BUS_MATRIX_M1_SEGMENT_ACCESS_CONFIG</displayName>
                        <description>BUS_MATRIX_M1_SEGMENT_ACCESS_CONFIG</description>
                        <addressOffset>0x28</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>COMMON_REG_Bus_matrix_M1_segment_access_config_Bus_matrix_M1_segment_access_config</name>
                                <description>Master 1 control word matrix to each segment. Tieoff. Bit value 1 indicates segment is accesable.</description>
                                <lsb>0</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>BUS_MATRIX_M2_SEGMENT_ACCESS_CONFIG</name>
                        <displayName>COMMON_REG_BUS_MATRIX_M2_SEGMENT_ACCESS_CONFIG</displayName>
                        <description>BUS_MATRIX_M2_SEGMENT_ACCESS_CONFIG</description>
                        <addressOffset>0x2C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>COMMON_REG_Bus_matrix_M2_segment_access_config_Bus_matrix_M2_segment_access_config</name>
                                <description>Master 2 control word matrix to each segment. Tieoff. Bit value 1 indicates segment is accesable.</description>
                                <lsb>0</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>BUS_MATRIX_M3_SEGMENT_ACCESS_CONFIG</name>
                        <displayName>COMMON_REG_BUS_MATRIX_M3_SEGMENT_ACCESS_CONFIG</displayName>
                        <description>BUS_MATRIX_M3_SEGMENT_ACCESS_CONFIG</description>
                        <addressOffset>0x30</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>COMMON_REG_Bus_matrix_M3_segment_access_config_Bus_matrix_M3_segment_access_config</name>
                                <description>Master 3 control word matrix to each segment. Tieoff. Bit value 1 indicates segment is accesable.</description>
                                <lsb>0</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>BUS_MATRIX_M4_SEGMENT_ACCESS_CONFIG</name>
                        <displayName>COMMON_REG_BUS_MATRIX_M4_SEGMENT_ACCESS_CONFIG</displayName>
                        <description>BUS_MATRIX_M4_SEGMENT_ACCESS_CONFIG</description>
                        <addressOffset>0x34</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>COMMON_REG_Bus_matrix_M4_segment_access_config_Bus_matrix_M4_segment_access_config</name>
                                <description>Master 4 control word matrix to each segment. Tieoff. Bit value 1 indicates segment is accesable.</description>
                                <lsb>0</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>BUS_MATRIX_M5_SEGMENT_ACCESS_CONFIG</name>
                        <displayName>COMMON_REG_BUS_MATRIX_M5_SEGMENT_ACCESS_CONFIG</displayName>
                        <description>BUS_MATRIX_M5_SEGMENT_ACCESS_CONFIG</description>
                        <addressOffset>0x38</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>COMMON_REG_Bus_matrix_M5_segment_access_config_Bus_matrix_M5_segment_access_config</name>
                                <description>Master 5 control word matrix to each segment. Tieoff. Bit value 1 indicates segment is accesable.</description>
                                <lsb>0</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PROPERTIES_REGISTER</name>
                        <displayName>COMMON_REG_GPIO_PROPERTIES_REGISTER</displayName>
                        <description>GPIO_PROPERTIES_REGISTER</description>
                        <addressOffset>0x3C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>COMMON_REG_GPIO_properties_register_GPIO_properties_register</name>
                                <description>Shared GPIO configuration register. Bit [1:0] to configure GPIO0 Bit [3:2] to configure GPIO1 Bit [5:4] to configure GPIO2 Bit [7:6] to configure GPIO3 Bit [9:8] to configure GPIO4 each GPIO can be individully selected. When 00? GPIO is free resource. When 01? GPIO is APPS resource. When 10? GPIO is NWP resource. Writing 11 doesnt have any affect, i.e. If one write only relevant gpio semaphore and other bits are 1s, it'll not disturb the other semaphore bits. For example : Say If NW wants to take control of gpio-1, one should write 10'b11_1111_1011 and if one wants to release it write 10'b11_1111_0011.</description>
                                <lsb>0</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APPS_NW_SEMAPHORE1</name>
                        <displayName>COMMON_REG_APPS_NW_SEMAPHORE1</displayName>
                        <description>APPS_NW_SEMAPHORE1</description>
                        <addressOffset>0x40</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_NW_SEMAPHORE2</name>
                        <displayName>COMMON_REG_APPS_NW_SEMAPHORE2</displayName>
                        <description>APPS_NW_SEMAPHORE2</description>
                        <addressOffset>0x44</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_NW_SEMAPHORE3</name>
                        <displayName>COMMON_REG_APPS_NW_SEMAPHORE3</displayName>
                        <description>APPS_NW_SEMAPHORE3</description>
                        <addressOffset>0x48</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_NW_SEMAPHORE4</name>
                        <displayName>COMMON_REG_APPS_NW_SEMAPHORE4</displayName>
                        <description>APPS_NW_SEMAPHORE4</description>
                        <addressOffset>0x4C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_NW_SEMAPHORE5</name>
                        <displayName>COMMON_REG_APPS_NW_SEMAPHORE5</displayName>
                        <description>APPS_NW_SEMAPHORE5</description>
                        <addressOffset>0x50</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_NW_SEMAPHORE6</name>
                        <displayName>COMMON_REG_APPS_NW_SEMAPHORE6</displayName>
                        <description>APPS_NW_SEMAPHORE6</description>
                        <addressOffset>0x54</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_NW_SEMAPHORE7</name>
                        <displayName>COMMON_REG_APPS_NW_SEMAPHORE7</displayName>
                        <description>APPS_NW_SEMAPHORE7</description>
                        <addressOffset>0x58</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_NW_SEMAPHORE8</name>
                        <displayName>COMMON_REG_APPS_NW_SEMAPHORE8</displayName>
                        <description>APPS_NW_SEMAPHORE8</description>
                        <addressOffset>0x5C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_NW_SEMAPHORE9</name>
                        <displayName>COMMON_REG_APPS_NW_SEMAPHORE9</displayName>
                        <description>APPS_NW_SEMAPHORE9</description>
                        <addressOffset>0x60</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_NW_SEMAPHORE10</name>
                        <displayName>COMMON_REG_APPS_NW_SEMAPHORE10</displayName>
                        <description>APPS_NW_SEMAPHORE10</description>
                        <addressOffset>0x64</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_NW_SEMAPHORE11</name>
                        <displayName>COMMON_REG_APPS_NW_SEMAPHORE11</displayName>
                        <description>APPS_NW_SEMAPHORE11</description>
                        <addressOffset>0x68</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_NW_SEMAPHORE12</name>
                        <displayName>COMMON_REG_APPS_NW_SEMAPHORE12</displayName>
                        <description>APPS_NW_SEMAPHORE12</description>
                        <addressOffset>0x6C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_SEMAPPHORE_PEND</name>
                        <displayName>COMMON_REG_APPS_SEMAPPHORE_PEND</displayName>
                        <description>APPS_SEMAPPHORE_PEND</description>
                        <addressOffset>0x70</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>NW_SEMAPPHORE_PEND</name>
                        <displayName>COMMON_REG_NW_SEMAPPHORE_PEND</displayName>
                        <description>NW_SEMAPPHORE_PEND</description>
                        <addressOffset>0x74</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SEMAPHORE_STATUS</name>
                        <displayName>COMMON_REG_SEMAPHORE_STATUS</displayName>
                        <description>SEMAPHORE_STATUS</description>
                        <addressOffset>0x78</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IDMEM_TIM_UPDATE</name>
                        <displayName>COMMON_REG_IDMEM_TIM_UPDATE</displayName>
                        <description>IDMEM_TIM_UPDATE</description>
                        <addressOffset>0x7C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FPGA_ROM_WR_EN</name>
                        <displayName>COMMON_REG_FPGA_ROM_WR_EN</displayName>
                        <description>FPGA_ROM_WR_EN</description>
                        <addressOffset>0x80</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>NW_INT_MASK</name>
                        <displayName>COMMON_REG_NW_INT_MASK</displayName>
                        <description>NW_INT_MASK</description>
                        <addressOffset>0x84</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>NW_INT_MASK_SET</name>
                        <displayName>COMMON_REG_NW_INT_MASK_SET</displayName>
                        <description>NW_INT_MASK_SET</description>
                        <addressOffset>0x88</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>NW_INT_MASK_CLR</name>
                        <displayName>COMMON_REG_NW_INT_MASK_CLR</displayName>
                        <description>NW_INT_MASK_CLR</description>
                        <addressOffset>0x8C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>NW_INT_STS_CLR</name>
                        <displayName>COMMON_REG_NW_INT_STS_CLR</displayName>
                        <description>NW_INT_STS_CLR</description>
                        <addressOffset>0x90</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>NW_INT_ACK</name>
                        <displayName>COMMON_REG_NW_INT_ACK</displayName>
                        <description>NW_INT_ACK</description>
                        <addressOffset>0x94</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>NW_INT_TRIG</name>
                        <displayName>COMMON_REG_NW_INT_TRIG</displayName>
                        <description>NW_INT_TRIG</description>
                        <addressOffset>0x98</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>NW_INT_STS_MASKED</name>
                        <displayName>COMMON_REG_NW_INT_STS_MASKED</displayName>
                        <description>NW_INT_STS_MASKED</description>
                        <addressOffset>0x9C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>NW_INT_STS_RAW</name>
                        <displayName>COMMON_REG_NW_INT_STS_RAW</displayName>
                        <description>NW_INT_STS_RAW</description>
                        <addressOffset>0xA0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_INT_MASK</name>
                        <displayName>COMMON_REG_APPS_INT_MASK</displayName>
                        <description>APPS_INT_MASK</description>
                        <addressOffset>0xA4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_INT_MASK_SET</name>
                        <displayName>COMMON_REG_APPS_INT_MASK_SET</displayName>
                        <description>APPS_INT_MASK_SET</description>
                        <addressOffset>0xA8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_INT_MASK_CLR</name>
                        <displayName>COMMON_REG_APPS_INT_MASK_CLR</displayName>
                        <description>APPS_INT_MASK_CLR</description>
                        <addressOffset>0xAC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_INT_STS_CLR</name>
                        <displayName>COMMON_REG_APPS_INT_STS_CLR</displayName>
                        <description>APPS_INT_STS_CLR</description>
                        <addressOffset>0xB0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_INT_ACK</name>
                        <displayName>COMMON_REG_APPS_INT_ACK</displayName>
                        <description>APPS_INT_ACK</description>
                        <addressOffset>0xB4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_INT_TRIG</name>
                        <displayName>COMMON_REG_APPS_INT_TRIG</displayName>
                        <description>APPS_INT_TRIG</description>
                        <addressOffset>0xB8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_INT_STS_MASKED</name>
                        <displayName>COMMON_REG_APPS_INT_STS_MASKED</displayName>
                        <description>APPS_INT_STS_MASKED</description>
                        <addressOffset>0xBC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_INT_STS_RAW</name>
                        <displayName>COMMON_REG_APPS_INT_STS_RAW</displayName>
                        <description>APPS_INT_STS_RAW</description>
                        <addressOffset>0xC0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IDMEM_TIM_UPDATED</name>
                        <displayName>COMMON_REG_IDMEM_TIM_UPDATED</displayName>
                        <description>IDMEM_TIM_UPDATED</description>
                        <addressOffset>0xC4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_GPIO_TRIG_EN</name>
                        <displayName>COMMON_REG_APPS_GPIO_TRIG_EN</displayName>
                        <description>APPS_GPIO_TRIG_EN</description>
                        <addressOffset>0xC8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>APPS_GPIO_TRIG_EN</name>
                                <description>APPS GPIO Trigger EN control. Bit 0: when '1' enable GPIO 0 trigger. This bit enables trigger for all GPIO 0 pins (GPIO 0 to GPIO7). Bit 1: when '1' enable GPIO 1 trigger. This bit enables trigger for all GPIO 1 pins ( GPIO8 to GPIO15). Bit 2: when '1' enable GPIO 2 trigger. This bit enables trigger for all GPIO 2 pins (GPIO16 to GPIO23). Bit 3: when '1' enable GPIO 3 trigger. This bit enables trigger for all GPIO 3 pins (GPIO24 to GPIO31). Bit 4: when '1' enable GPIO 4 trigger. This bit enables trigger for all GPIO 4 pins.(GPIO32 to GPIO39)</description>
                                <lsb>0</lsb>
                                <msb>4</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>EMU_DEBUG_REG</name>
                        <displayName>COMMON_REG_EMU_DEBUG_REG</displayName>
                        <description>EMU_DEBUG_REG</description>
                        <addressOffset>0xCC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SEMAPHORE_STATUS2</name>
                        <displayName>COMMON_REG_SEMAPHORE_STATUS2</displayName>
                        <description>SEMAPHORE_STATUS2</description>
                        <addressOffset>0xD0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SEMPAPHORE_STATUS2</name>
                                <description>SEMAPHORE STATUS 23:22 :semaphore status of apps_nw_semaphore11 21:20 :semaphore status of apps_nw_semaphore11 19:18 :semaphore status of apps_nw_semaphore10 17:16 :semaphore status of apps_nw_semaphore9 15:14 :semaphore status of apps_nw_semaphore8 13:12 :semaphore status of apps_nw_semaphore7 11:10 :semaphore status of apps_nw_semaphore6 9:8 :semaphore status of apps_nw_semaphore5 7:6 :semaphore status of apps_nw_semaphore4 5:4 :semaphore status of apps_nw_semaphore3 3:2 :semaphore status of apps_nw_semaphore2 1:0 :semaphore status of apps_nw_semaphore1</description>
                                <lsb>0</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SEMAPHORE_PREV_OWNER1</name>
                        <displayName>COMMON_REG_SEMAPHORE_PREV_OWNER1</displayName>
                        <description>SEMAPHORE_PREV_OWNER1</description>
                        <addressOffset>0xD4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SEMAPHORE_PREV_OWNER1</name>
                                <description>1:0 : prvious owner of i2c_properties_reg[1:0] 3:2 : prvious owner of spi_properties_reg[1:0] 5:4 : prvious owner of gpio_properties_reg[1:0] 9:8 : prvious owner of gpio_properties_reg[3:2] 11:10 : prvious owner of gpio_properties_reg[5:4] 13:12 : prvious owner of gpio_properties_reg[7:6] 15:14 : prvious owner of gpio_properties_reg[9:8] 17:16 : prvious owner of flash_control_reg[1:0]</description>
                                <lsb>0</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SEMAPHORE_PREV_OWNER2</name>
                        <displayName>COMMON_REG_SEMAPHORE_PREV_OWNER2</displayName>
                        <description>SEMAPHORE_PREV_OWNER2</description>
                        <addressOffset>0xD8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SEMAPHORE_PREV_OWNER2</name>
                                <description>1:0 : previous owner of apps_nw_semaphore1_reg[1:0] 3:2 : previous owner of apps_nw_semaphore2_reg[1:0] 5:4 : previous owner of apps_nw_semaphore3_reg[1:0] 7:6 : previous owner of apps_nw_semaphore4_reg[1:0] 9:8 : previous owner of apps_nw_semaphore5_reg[1:0] 11:10 : previous owner of apps_nw_semaphore6_reg[1:0] 13:12 : previous owner of apps_nw_semaphore7_reg[1:0] 15:14 : previous owner of apps_nw_semaphore8_reg[1:0] 17:16 : previous owner of apps_nw_semaphore9_reg[1:0] 19:18 : previous owner of apps_nw_semaphore10_reg[1:0] 21:20 : previous owner of apps_nw_semaphore11_reg[1:0] 23:22 : previous owner of apps_nw_semaphore12_reg[1:0]</description>
                                <lsb>0</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>FLASH_CONTROL</name>
                <version>1.0</version>
                <description>FLASH_CONTROL</description>
                <baseAddress>0x400FD000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>FMA</name>
                        <displayName>FLASH_CONTROL_FMA</displayName>
                        <description>Flash Memory Address (FMA) offset 0x000 During a write operation this register contains a 4-byte-aligned address and specifies where the data is written. During erase operations this register contains a 1 KB-aligned CPU byte address and specifies which block is erased. Note that the alignment requirements must be met by software or the results of the operation are unpredictable.</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>OFFSET</name>
                                <description>Address Offset Address offset in Flash memory where operation is performed except for nonvolatile registers</description>
                                <lsb>0</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>FMD</name>
                        <displayName>FLASH_CONTROL_FMD</displayName>
                        <description>Flash Memory Data (FMD) offset 0x004 This register contains the data to be written during the programming cycle or read during the read cycle. Note that the contents of this register are undefined for a read access of an execute-only block. This register is not used during erase cycles.</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FMC</name>
                        <displayName>FLASH_CONTROL_FMC</displayName>
                        <description>Flash Memory Control (FMC) offset 0x008 When this register is written the Flash memory controller initiates the appropriate access cycle for the location specified by the Flash Memory Address (FMA) register . If the access is a write access the data contained in the Flash Memory Data (FMD) register is written to the specified address. This register must be the final register written and initiates the memory operation. The four control bits in the lower byte of this register are used to initiate memory operations.</description>
                        <addressOffset>0x8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>WRKEY</name>
                                <description>Flash Memory Write Key This field contains a write key which is used to minimize the incidence of accidental Flash memory writes. The value 0xA442 must be written into this field for a Flash memory write to occur. Writes to the FMC register without this WRKEY value are ignored. A read of this field returns the value 0.</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>FCRIS</name>
                        <displayName>FLASH_CONTROL_FCRIS</displayName>
                        <description>Flash Controller Raw Interrupt Status (FCRIS) offset 0x00C This register indicates that the Flash memory controller has an interrupt condition. An interrupt is sent to the interrupt controller only if the corresponding FCIM register bit is set.</description>
                        <addressOffset>0xC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FCIM</name>
                        <displayName>FLASH_CONTROL_FCIM</displayName>
                        <description>Flash Controller Interrupt Mask (FCIM) offset 0x010 This register controls whether the Flash memory controller generates interrupts to the controller.</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FCMISC</name>
                        <displayName>FLASH_CONTROL_FCMISC</displayName>
                        <description>Flash Controller Masked Interrupt Status and Clear (FCMISC) offset 0x014 This register provides two functions. First it reports the cause of an interrupt by indicating which interrupt source or sources are signalling the interrupt. Second it serves as the method to clear the interrupt reporting.</description>
                        <addressOffset>0x14</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FMC2</name>
                        <displayName>FLASH_CONTROL_FMC2</displayName>
                        <description>Flash Memory Control 2 (FMC2) offset 0x020 When this register is written the Flash memory controller initiates the appropriate access cycle for the location specified by the Flash Memory Address (FMA) register . If the access is a write access the data contained in the Flash Write Buffer (FWB) registers is written. This register must be the final register written as it initiates the memory operation.</description>
                        <addressOffset>0x20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>WRKEY</name>
                                <description>Flash Memory Write Key This field contains a write key which is used to minimize the incidence of accidental Flash memory writes. The value 0xA442 must be written into this field for a write to occur. Writes to the FMC2 register without this WRKEY value are ignored. A read of this field returns the value 0.</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>FWBVAL</name>
                        <displayName>FLASH_CONTROL_FWBVAL</displayName>
                        <description>Flash Write Buffer Valid (FWBVAL) offset 0x030 This register provides a bitwise status of which FWBn registers have been written by the processor since the last write of the Flash memory write buffer. The entries with a 1 are written on the next write of the Flash memory write buffer. This register is cleared after the write operation by hardware. A protection violation on the write operation also clears this status. Software can program the same 32 words to various Flash memory locations by setting the FWB[n] bits after they are cleared by the write operation. The next write operation then uses the same data as the previous one. In addition if a FWBn register change should not be written to Flash memory software can clear the corresponding FWB[n] bit to preserve the existing data when the next write operation occurs.</description>
                        <addressOffset>0x30</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB1</name>
                        <displayName>FLASH_CONTROL_FWB1</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x100</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB2</name>
                        <displayName>FLASH_CONTROL_FWB2</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x104</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB3</name>
                        <displayName>FLASH_CONTROL_FWB3</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x108</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB4</name>
                        <displayName>FLASH_CONTROL_FWB4</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x10C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB5</name>
                        <displayName>FLASH_CONTROL_FWB5</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x110</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB6</name>
                        <displayName>FLASH_CONTROL_FWB6</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x114</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB7</name>
                        <displayName>FLASH_CONTROL_FWB7</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x118</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB8</name>
                        <displayName>FLASH_CONTROL_FWB8</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x11C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB9</name>
                        <displayName>FLASH_CONTROL_FWB9</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x120</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB10</name>
                        <displayName>FLASH_CONTROL_FWB10</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x124</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB11</name>
                        <displayName>FLASH_CONTROL_FWB11</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x128</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB12</name>
                        <displayName>FLASH_CONTROL_FWB12</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x12C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB13</name>
                        <displayName>FLASH_CONTROL_FWB13</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x130</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB14</name>
                        <displayName>FLASH_CONTROL_FWB14</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x134</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB15</name>
                        <displayName>FLASH_CONTROL_FWB15</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x138</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB16</name>
                        <displayName>FLASH_CONTROL_FWB16</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x13C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB17</name>
                        <displayName>FLASH_CONTROL_FWB17</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x140</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB18</name>
                        <displayName>FLASH_CONTROL_FWB18</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x144</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB19</name>
                        <displayName>FLASH_CONTROL_FWB19</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x148</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB20</name>
                        <displayName>FLASH_CONTROL_FWB20</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x14C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB21</name>
                        <displayName>FLASH_CONTROL_FWB21</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x150</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB22</name>
                        <displayName>FLASH_CONTROL_FWB22</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x154</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB23</name>
                        <displayName>FLASH_CONTROL_FWB23</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x158</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB24</name>
                        <displayName>FLASH_CONTROL_FWB24</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x15C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB25</name>
                        <displayName>FLASH_CONTROL_FWB25</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x160</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB26</name>
                        <displayName>FLASH_CONTROL_FWB26</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x164</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB27</name>
                        <displayName>FLASH_CONTROL_FWB27</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x168</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB28</name>
                        <displayName>FLASH_CONTROL_FWB28</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x16C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB29</name>
                        <displayName>FLASH_CONTROL_FWB29</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x170</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB30</name>
                        <displayName>FLASH_CONTROL_FWB30</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x174</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB31</name>
                        <displayName>FLASH_CONTROL_FWB31</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x178</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FWB32</name>
                        <displayName>FLASH_CONTROL_FWB32</displayName>
                        <description>Flash Write Buffer n (FWBn) offset 0x100 - 0x17C These 32 registers hold the contents of the data to be written into the Flash memory on a buffered Flash memory write operation. The offset selects one of the 32-bit registers. Only FWBn registers that have been updated since the preceding buffered Flash memory write operation are written into the Flash memory so it is not necessary to write the entire bank of registers in order to write 1 or 2 words. The FWBn registers are written into the Flash memory with the FWB0 register corresponding to the address contained in FMA. FWB1 is written to the address FMA+0x4 etc. Note that only data bits that are 0 result in the Flash memory being modified. A data bit that is 1 leaves the content of the Flash memory bit at its previous value.</description>
                        <addressOffset>0x17C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FSIZE</name>
                        <displayName>FLASH_CONTROL_FSIZE</displayName>
                        <description>Flash Size (FSIZE) offset 0xFC0 This register indicates the size of the on-chip Flash memory. Important: This register should be used to determine the size of the Flash memory that is implemented on this microcontroller. However to support legacy software the DC0 register is available. A read of the DC0 register correctly identifies legacy memory sizes. Software must use the FSIZE register for memory sizes that are not listed in the DC0 register description.</description>
                        <addressOffset>0xFC0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SIZE</name>
                                <description>Flash Size Indicates the size of the on-chip Flash memory. Value Description 0x0003 8 KB of Flash 0x0007 16 KB of Flash 0x000F 32 KB of Flash 0x001F 64 KB of Flash 0x002F 96 KB of Flash 0x003F 128 KB of Flash 0x005F 192 KB of Flash 0x007F 256 KB of Flash</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SSIZE</name>
                        <displayName>FLASH_CONTROL_SSIZE</displayName>
                        <description>SRAM Size (SSIZE) offset 0xFC4 This register indicates the size of the on-chip SRAM. Important: This register should be used to determine the size of the SRAM that is implemented on this microcontroller. However to support legacy software the DC0 register is available. A read of the DC0 register correctly identifies legacy memory sizes. Software must use the SSIZE register for memory sizes that are not listed in the DC0 register description. ****************************************************************************</description>
                        <addressOffset>0xFC4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SRAM_SIZE</name>
                                <description>SRAM Size Indicates the size of the on-chip SRAM. Value Description 0x0007 2 KB of SRAM 0x000F 4 KB of SRAM 0x0017 6 KB of SRAM 0x001F 8 KB of SRAM 0x002F 12 KB of SRAM 0x003F 16 KB of SRAM 0x004F 20 KB of SRAM 0x005F 24 KB of SRAM 0x007F 32 KB of SRAM</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>SYSTEM_CONTROL</name>
                <version>1.0</version>
                <description>SYSTEM_CONTROL</description>
                <baseAddress>0x400FE000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>HL_REV</name>
                        <displayName>SYSTEM_CONTROL_HL_REV</displayName>
                        <description>IP Revision Identifier (X.Y.R) Used by software to track features bugs and compatibility</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SCHEME</name>
                                <description>SCHEME</description>
                                <lsb>30</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>FUNC</name>
                                <description>Function indicates a software compatible module family. If there is no level of software compatibility a new Func number (and hence REVISION) should be assigned.</description>
                                <lsb>16</lsb>
                                <msb>27</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>R_RTL</name>
                                <description>RTL Version (R) maintained by IP design owner. RTL follows a numbering such as X.Y.R.Z which are explained in this table. R changes ONLY when: (1) PDS uploads occur which may have been due to spec changes (2) Bug fixes occur (3) Resets to '0' when X or Y changes. Design team has an internal 'Z' (customer invisible) number which increments on every drop that happens due to DV and RTL updates. Z resets to 0 when R increments.</description>
                                <lsb>11</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>X_MAJOR</name>
                                <description>Major Revision (X) maintained by IP specification owner. X changes ONLY when: (1) There is a major feature addition. An example would be adding Master Mode to Utopia Level2. The Func field (or Class/Type in old PID format) will remain the same. X does NOT change due to: (1) Bug fixes (2) Change in feature parameters.</description>
                                <lsb>8</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CUSTOM</name>
                                <description>CUSTOM</description>
                                <lsb>6</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>Y_MINOR</name>
                                <description>Minor Revision (Y) maintained by IP specification owner. Y changes ONLY when: (1) Features are scaled (up or down). Flexibility exists in that this feature scalability may either be represented in the Y change or a specific register in the IP that indicates which features are exactly available. (2) When feature creeps from Is-Not list to Is list. But this may not be the case once it sees silicon; in which case X will change. Y does NOT change due to: (1) Bug fixes (2) Typos or clarifications (3) major functional/feature change/addition/deletion. Instead these changes may be reflected via R S X as applicable. Spec owner maintains a customer-invisible number 'S' which changes due to: (1) Typos/clarifications (2) Bug documentation. Note that this bug is not due to a spec change but due to implementation. Nevertheless the spec tracks the IP bugs. An RTL release (say for silicon PG1.1) that occurs due to bug fix should document the corresponding spec number (X.Y.S) in its release notes.</description>
                                <lsb>0</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>HL_HWINFO</name>
                        <displayName>SYSTEM_CONTROL_HL_HWINFO</displayName>
                        <description>Information about the IP module's hardware configuration i.e. typically the module's HDL generics (if any). Actual field format and encoding is up to the module's designer to decide.</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SIZE</name>
                                <description>MEM_SIZE</description>
                                <lsb>2</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>HL_SYSCONFIG</name>
                        <displayName>SYSTEM_CONTROL_HL_SYSCONFIG</displayName>
                        <description>Clock management configuration</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>STANDBYMODE</name>
                                <description>Configuration of the local initiator state management mode. By definition initiator may generate read/write transaction as long as it is out of STANDBY state. 0x0 Force-standby mode: local initiator is unconditionally placed in standby state.Backup mode for debug only. 0x1 No-standby mode: local initiator is unconditionally placed out of standby state.Backup mode for debug only. 0x2 Smart-standby mode: local initiator standby status depends on local conditions i.e. the module's functional requirement from the initiator.IP module shall not generate (initiator-related) wakeup events. 0x3 &amp;quot;Smart-Standby wakeup-capable mode: local initiator standby status depends on local conditions i.e. the module's functional requirement from the initiator. IP module may generate (master-related) wakeup events when in standby state.Mode is only relevant if the appropriate IP module &amp;quot;&amp;quot;mwakeup&amp;quot;&amp;quot; output is implemented.&amp;quot;</description>
                                <lsb>4</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>IDLEMODE</name>
                                <description>Configuration of the local target state management mode. By definition target can handle read/write transaction as long as it is out of IDLE state. 0x0 Force-idle mode: local target's idle state follows (acknowledges) the system's idle requests unconditionally i.e. regardless of the IP module's internal requirements.Backup mode for debug only. 0x1 No-idle mode: local target never enters idle state.Backup mode for debug only. 0x2 Smart-idle mode: local target's idle state eventually follows (acknowledges) the system's idle requests depending on the IP module's internal requirements.IP module shall not generate (IRQ- or DMA-request-related) wakeup events. 0x3 &amp;quot;Smart-idle wakeup-capable mode: local target's idle state eventually follows (acknowledges) the system's idle requests depending on the IP module's internal requirements.IP module may generate (IRQ- or DMA-request-related) wakeup events when in idle state.Mode is only relevant if the appropriate IP module &amp;quot;&amp;quot;swakeup&amp;quot;&amp;quot; output(s) is (are) implemented.&amp;quot;</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SYSCONFIG</name>
                        <displayName>SYSTEM_CONTROL_SYSCONFIG</displayName>
                        <description>System Configuration Register This register allows controlling various parameters of the OCP interface.</description>
                        <addressOffset>0x110</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>STANDBYMODE</name>
                                <description>Master interface power Management standby/wait control. The bit field is only useful when generic parameter MADMA_EN (Master ADMA enable) is set as active otherwise it is a read only register read a '0'. 0x0 Force-standby. Mstandby is forced unconditionnaly. 0x1 No-standby. Mstandby is never asserted. 0x2 Smart-standby mode: local initiator standby status depends on local conditions i.e. the module's functional requirement from the initiator.IP module shall not generate (initiator-related) wakeup events. 0x3 Smart-Standby wakeup-capable mode: &amp;quot;local initiator standby status depends on local conditions i.e. the module's functional requirement from the initiator. IP module may generate (master-related) wakeup events when in standby state.Mode is only relevant if the appropriate IP module &amp;quot;&amp;quot;mwakeup&amp;quot;&amp;quot; output is implemented.&amp;quot;</description>
                                <lsb>12</lsb>
                                <msb>13</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CLOCKACTIVITY</name>
                                <description>Clocks activity during wake up mode period. Bit8: OCP interface clock Bit9: Functional clock 0x0 OCP and Functional clock may be switched off. 0x1 OCP clock is maintained. Functional clock may be switched-off. 0x2 Functional clock is maintained. OCP clock may be switched-off. 0x3 OCP and Functional clocks are maintained.</description>
                                <lsb>8</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SIDLEMODE</name>
                                <description>Power management 0x0 If an idle request is detected the MMCHS acknowledges it unconditionally and goes in Inactive mode. Interrupt and DMA requests are unconditionally de-asserted. 0x1 If an idle request is detected the request is ignored and the module keeps on behaving normally. 0x2 Smart-idle mode: local target's idle state eventually follows (acknowledges) the system's idle requests depending on the IP module's internal requirements.IP module shall not generate (IRQ- or DMA-request-related) wakeup events. 0x3 Smart-idle wakeup-capable mode: &amp;quot;local target's idle state eventually follows (acknowledges) the system's idle requests depending on the IP module's internal requirements.IP module may generate (IRQ- or DMA-request-related) wakeup events when in idle state.Mode is only relevant if the appropriate IP module &amp;quot;&amp;quot;swakeup&amp;quot;&amp;quot; output(s) is (are) implemented.&amp;quot;</description>
                                <lsb>3</lsb>
                                <msb>4</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SYSSTATUS</name>
                        <displayName>SYSTEM_CONTROL_SYSSTATUS</displayName>
                        <description>System Status Register This register provides status information about the module excluding the interrupt status information</description>
                        <addressOffset>0x114</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CSRE</name>
                        <displayName>SYSTEM_CONTROL_CSRE</displayName>
                        <description>Card status response error This register enables the host controller to detect card status errors of response type R1 R1b for all cards and of R5 R5b and R6 response for cards types SD or SDIO. When a bit MMCHS_CSRE[i] is set to 1 if the corresponding bit at the same position in the response MMCHS_RSP0[i] is set to 1 the host controller indicates a card error (MMCHS_STAT[CERR]) interrupt status to avoid the host driver reading the response register (MMCHS_RSP0). Note: No automatic card error detection for autoCMD12 is implemented; the host system has to check autoCMD12 response register (MMCHS_RESP76) for possible card errors.</description>
                        <addressOffset>0x124</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SYSTEST</name>
                        <displayName>SYSTEM_CONTROL_SYSTEST</displayName>
                        <description>System Test register This register is used to control the signals that connect to I/O pins when the module is configured in system test (SYSTEST) mode for boundary connectivity verification. Note: In SYSTEST mode a write into MMCHS_CMD register will not start a transfer. The buffer behaves as a stack accessible only by the local host (push and pop operations). In this mode the Transfer Block Size (MMCHS_BLK[BLEN]) and the Blocks count for current transfer (MMCHS_BLK[NBLK]) are needed to generate a Buffer write ready interrupt (MMCHS_STAT[BWR]) or a Buffer read ready interrupt (MMCHS_STAT[BRR]) and DMA requests if enabled.</description>
                        <addressOffset>0x128</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CON</name>
                        <displayName>SYSTEM_CONTROL_CON</displayName>
                        <description>Configuration register This register is used: - to select the functional mode or the SYSTEST mode for any card. - to send an initialization sequence to any card. - to enable the detection on DAT[1] of a card interrupt for SDIO cards only. and also to configure : - specific data and command transfers for MMC cards only. - the parameters related to the card detect and write protect input signals.</description>
                        <addressOffset>0x12C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DVAL</name>
                                <description>Debounce filter value All cards This register is used to define a debounce period to filter the card detect input signal (SDCD). The usage of the card detect input signal (SDCD) is optional and depends on the system integration and the type of the connector housing that accommodates the card. 0x0 33 us debounce period 0x1 231 us debounce period 0x2 1 ms debounce period 0x3 84 ms debounce period</description>
                                <lsb>9</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>PWCNT</name>
                        <displayName>SYSTEM_CONTROL_PWCNT</displayName>
                        <description>Power counter register This register is used to program a mmc counter to delay command transfers after activating the PAD power this value depends on PAD characteristics and voltage.</description>
                        <addressOffset>0x130</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PWRCNT</name>
                                <description>Power counter register. This register is used to introduce a delay between the PAD ACTIVE pin assertion and the command issued. 0x0000 No additional delay added 0x0001 TCF delay (card clock period) 0x0002 TCF x 2 delay (card clock period) 0xFFFE TCF x 65534 delay (card clock period) 0xFFFF TCF x 65535 delay (card clock period)</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>BLK</name>
                        <displayName>SYSTEM_CONTROL_BLK</displayName>
                        <description>Transfer Length Configuration register MMCHS_BLK[BLEN] is the block size register. MMCHS_BLK[NBLK] is the block count register. This register shall be used for any card.</description>
                        <addressOffset>0x204</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>NBLK</name>
                                <description>Blocks count for current transfer This register is enabled when Block count Enable (MMCHS_CMD[BCE]) is set to 1 and is valid only for multiple block transfers. Setting the block count to 0 results no data blocks being transferred. Note: The host controller decrements the block count after each block transfer and stops when the count reaches zero. This register can be accessed only if no transaction is executing (i.e after a transaction has stopped). Read operations during transfers may return an invalid value and write operation will be ignored. In suspend context the number of blocks yet to be transferred can be determined by reading this register. When restoring transfer context prior to issuing a Resume command The local host shall restore the previously saved block count. 0x0000 Stop count 0x0001 1 block 0x0002 2 blocks 0xFFFF 65535 blocks</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>BLEN</name>
                                <description>Transfer Block Size. This register specifies the block size for block data transfers. Read operations during transfers may return an invalid value and write operations are ignored. When a CMD12 command is issued to stop the transfer a read of the BLEN field after transfer completion (MMCHS_STAT[TC] set to 1) will not return the true byte number of data length while the stop occurs but the value written in this register before transfer is launched. 0x000 No data transfer 0x001 1 byte block length 0x002 2 bytes block length 0x003 3 bytes block length 0x1FF 511 bytes block length 0x200 512 bytes block length 0x7FF 2047 bytes block length 0x800 2048 bytes block length</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>ARG</name>
                        <displayName>SYSTEM_CONTROL_ARG</displayName>
                        <description>Command argument Register This register contains command argument specified as bit 39-8 of Command-Format These registers must be initialized prior to sending the command itself to the card (write action into the register MMCHS_CMD register). Only exception is for a command index specifying stuff bits in arguments making a write unnecessary.</description>
                        <addressOffset>0x208</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CMD</name>
                        <displayName>SYSTEM_CONTROL_CMD</displayName>
                        <description>Command and transfer mode register MMCHS_CMD[31:16] = the command register MMCHS_CMD[15:0] = the transfer mode. This register configures the data and command transfers. A write into the most significant byte send the command. A write into MMCHS_CMD[15:0] registers during data transfer has no effect. This register shall be used for any card. Note: In SYSTEST mode a write into MMCHS_CMD register will not start a transfer.</description>
                        <addressOffset>0x20C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>INDX</name>
                                <description>Command index Binary encoded value from 0 to 63 specifying the command number send to card 0x00 CMD0 or ACMD0 0x01 CMD1 or ACMD1 0x02 CMD2 or ACMD2 0x03 CMD3 or ACMD3 0x04 CMD4 or ACMD4 0x05 CMD5 or ACMD5 0x06 CMD6 or ACMD6 0x07 CMD7 or ACMD7 0x08 CMD8 or ACMD8 0x09 CMD9 or ACMD9 0x0A CMD10 or ACMD10 0x0B CMD11 or ACMD11 0x0C CMD12 or ACMD12 0x0D CMD13 or ACMD13 0x0E CMD14 or ACMD14 0x0F CMD15 or ACMD15 0x10 CMD16 or ACMD16 0x11 CMD17 or ACMD17 0x12 CMD18 or ACMD18 0x13 CMD19 or ACMD19 0x14 CMD20 or ACMD20 0x15 CMD21 or ACMD21 0x16 CMD22 or ACMD22 0x17 CMD23 or ACMD23 0x18 CMD24 or ACMD24 0x19 CMD25 or ACMD25 0x1A CMD26 or ACMD26 0x1B CMD27 or ACMD27 0x1C CMD28 or ACMD28 0x1D CMD29 or ACMD29 0x1E CMD30 or ACMD30 0x1F CMD31 or ACMD31 0x20 CMD32 or ACMD32 0x21 CMD33 or ACMD33 0x22 CMD34 or ACMD34 0x23 CMD35 or ACMD35 0x24 CMD36 or ACMD36 0x25 CMD37 or ACMD37 0x26 CMD38 or ACMD38 0x27 CMD39 or ACMD39 0x28 CMD40 or ACMD40 0x29 CMD41 or ACMD41 0x2A CMD42 or ACMD42 0x2B CMD43 or ACMD43 0x2C CMD44 or ACMD44 0x2D CMD45 or ACMD45 0x2E CMD46 or ACMD46 0x2F CMD47 or ACMD47 0x30 CMD48 or ACMD48 0x31 CMD49 or ACMD49 0x32 CMD50 or ACMD50 0x33 CMD51 or ACMD51 0x34 CMD52 or ACMD52 0x35 CMD53 or ACMD53 0x36 CMD54 or ACMD54 0x37 CMD55 or ACMD55 0x38 CMD56 or ACMD56 0x39 CMD57 or ACMD57 0x3A CMD58 or ACMD58 0x3B CMD59 or ACMD59 0x3C CMD60 or ACMD60 0x3D CMD61 or ACMD61 0x3E CMD62 or ACMD62 0x3F CMD63 or ACMD63</description>
                                <lsb>24</lsb>
                                <msb>29</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CMD_TYPE</name>
                                <description>Command type This register specifies three types of special command: Suspend Resume and Abort. These bits shall be set to 00b for all other commands. 0x0 Others Commands 0x1 &amp;quot;CMD52 for writing &amp;quot;&amp;quot;Bus Suspend&amp;quot;&amp;quot; in CCCR&amp;quot; 0x2 &amp;quot;CMD52 for writing &amp;quot;&amp;quot;Function Select&amp;quot;&amp;quot; in CCCR&amp;quot; 0x3 &amp;quot;Abort command CMD12 CMD52 for writing &amp;quot;&amp;quot; I/O Abort&amp;quot;&amp;quot; in CCCR&amp;quot;</description>
                                <lsb>22</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>RSP_TYPE</name>
                                <description>Response type This bits defines the response type of the command 0x0 No response 0x1 Response Length 136 bits 0x2 Response Length 48 bits 0x3 Response Length 48 bits with busy after response</description>
                                <lsb>16</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>RSP10</name>
                        <displayName>SYSTEM_CONTROL_RSP10</displayName>
                        <description>Command response[31:0] Register This 32-bit register holds bits positions [31:0] of command response type R1/R1b/R2/R3/R4/R5/R5b/R6</description>
                        <addressOffset>0x210</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>RSP1</name>
                                <description>Command Response [31:16]</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>RSP0</name>
                                <description>Command Response [15:0]</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>RSP32</name>
                        <displayName>SYSTEM_CONTROL_RSP32</displayName>
                        <description>Command response[63:32] Register This 32-bit register holds bits positions [63:32] of command response type R2</description>
                        <addressOffset>0x214</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>RSP3</name>
                                <description>Command Response [63:48]</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>RSP2</name>
                                <description>Command Response [47:32]</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>RSP54</name>
                        <displayName>SYSTEM_CONTROL_RSP54</displayName>
                        <description>Command response[95:64] Register This 32-bit register holds bits positions [95:64] of command response type R2</description>
                        <addressOffset>0x218</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>RSP5</name>
                                <description>Command Response [95:80]</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>RSP4</name>
                                <description>Command Response [79:64]</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>RSP76</name>
                        <displayName>SYSTEM_CONTROL_RSP76</displayName>
                        <description>Command response[127:96] Register This 32-bit register holds bits positions [127:96] of command response type R2</description>
                        <addressOffset>0x21C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>RSP7</name>
                                <description>Command Response [127:112]</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>RSP6</name>
                                <description>Command Response [111:96]</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DATA</name>
                        <displayName>SYSTEM_CONTROL_DATA</displayName>
                        <description>Data Register This register is the 32-bit entry point of the buffer for read or write data transfers. The buffer size is 32bits x256(1024 bytes). Bytes within a word are stored and read in little endian format. This buffer can be used as two 512 byte buffers to transfer data efficiently without reducing the throughput. Sequential and contiguous access is necessary to increment the pointer correctly. Random or skipped access is not allowed. In little endian if the local host accesses this register byte-wise or 16bit-wise the least significant byte (bits [7:0]) must always be written/read first. The update of the buffer address is done on the most significant byte write for full 32-bit DATA register or on the most significant byte of the last word of block transfer. Example 1: Byte or 16-bit access Mbyteen[3:0]=0001 (1-byte) =&gt; Mbyteen[3:0]=0010 (1-byte) =&gt; Mbyteen[3:0]=1100 (2-bytes) OK Mbyteen[3:0]=0001 (1-byte) =&gt; Mbyteen[3:0]=0010 (1-byte) =&gt; Mbyteen[3:0]=0100 (1-byte) OK Mbyteen[3:0]=0001 (1-byte) =&gt; Mbyteen[3:0]=0010 (1-byte) =&gt; Mbyteen[3:0]=1000 (1-byte) Bad</description>
                        <addressOffset>0x220</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PSTATE</name>
                        <displayName>SYSTEM_CONTROL_PSTATE</displayName>
                        <description>Present state register The Host can get status of the Host Controller from this 32-bit read only register.</description>
                        <addressOffset>0x224</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DLEV</name>
                                <description>DAT[3:0] line signal level DAT[3] =&gt; bit 23 DAT[2] =&gt; bit 22 DAT[1] =&gt; bit 21 DAT[0] =&gt; bit 20 This status is used to check DAT line level to recover from errors and for debugging. This is especially useful in detecting the busy signal level from DAT[0]. The value of these registers after reset depends on the DAT lines level at that time.</description>
                                <lsb>20</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>HCTL</name>
                        <displayName>SYSTEM_CONTROL_HCTL</displayName>
                        <description>Control register This register defines the host controls to set power wakeup and transfer parameters. MMCHS_HCTL[31:24] = Wakeup control MMCHS_HCTL[23:16] = Block gap control MMCHS_HCTL[15:8] = Power control MMCHS_HCTL[7:0] = Host control</description>
                        <addressOffset>0x228</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SDVS</name>
                                <description>SD bus voltage select All cards. The host driver should set to these bits to select the voltage level for the card according to the voltage supported by the system (MMCHS_CAPA[VS18VS30VS33]) before starting a transfer. 0x5 1.8V (Typical) 0x6 3.0V (Typical) 0x7 3.3V (Typical)</description>
                                <lsb>9</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>DMAS</name>
                                <description>DMA Select Mode: One of supported DMA modes can be selected. The host driver shall check support of DMA modes by referring the Capabilities register. Use of selected DMA is determined by DMA Enable of the Transfer Mode register. This register is only meaningful when MADMA_EN is set to 1. When MADMA_EN is set to 0 the bit field is read only and returned value is 0. 0x0 Reserved 0x1 Reserved 0x2 32-bit Address ADMA2 is selected 0x3 Reserved</description>
                                <lsb>3</lsb>
                                <msb>4</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SYSCTL</name>
                        <displayName>SYSTEM_CONTROL_SYSCTL</displayName>
                        <description>SD system control register This register defines the system controls to set software resets clock frequency management and data timeout. MMCHS_SYSCTL[31:24] = Software resets MMCHS_SYSCTL[23:16] = Timeout control MMCHS_SYSCTL[15:0] = Clock control</description>
                        <addressOffset>0x22C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DTO</name>
                                <description>Data timeout counter value and busy timeout. This value determines the interval by which DAT lines timeouts are detected. The host driver needs to set this bitfield based on - the maximum read access time (NAC) (Refer to the SD Specification Part1 Physical Layer) - the data read access time values (TAAC and NSAC) in the card specific data register (CSD) of the card - the timeout clock base frequency (MMCHS_CAPA[TCF]). If the card does not respond within the specified number of cycles a data timeout error occurs (MMCHS_STA[DTO]). The MMCHS_SYSCTL[DTO] register is also used to check busy duration to generate busy timeout for commands with busy response or for busy programming during a write command. Timeout on CRC status is generated if no CRC token is present after a block write. 0x0 TCF x 2^13 0x1 TCF x 2^14 0xE TCF x 2^27 0xF Reserved</description>
                                <lsb>16</lsb>
                                <msb>19</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CLKD</name>
                                <description>Clock frequency select These bits define the ratio between a reference clock frequency (system dependant) and the output clock frequency on the CLK pin of either the memory card (MMC SD or SDIO). 0x000 Clock Ref bypass 0x001 Clock Ref bypass 0x002 Clock Ref / 2 0x003 Clock Ref / 3 0x3FF Clock Ref / 1023</description>
                                <lsb>6</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>STAT</name>
                        <displayName>SYSTEM_CONTROL_STAT</displayName>
                        <description>Interrupt status register The interrupt status regroups all the status of the module internal events that can generate an interrupt. MMCHS_STAT[31:16] = Error Interrupt Status MMCHS_STAT[15:0] = Normal Interrupt Status</description>
                        <addressOffset>0x230</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IE</name>
                        <displayName>SYSTEM_CONTROL_IE</displayName>
                        <description>Interrupt SD enable register This register allows to enable/disable the module to set status bits on an event-by-event basis. MMCHS_IE[31:16] = Error Interrupt Status Enable MMCHS_IE[15:0] = Normal Interrupt Status Enable</description>
                        <addressOffset>0x234</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ISE</name>
                        <displayName>SYSTEM_CONTROL_ISE</displayName>
                        <description>Interrupt signal enable register This register allows to enable/disable the module internal sources of status on an event-by-event basis. MMCHS_ISE[31:16] = Error Interrupt Signal Enable MMCHS_ISE[15:0] = Normal Interrupt Signal Enable</description>
                        <addressOffset>0x238</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>AC12</name>
                        <displayName>SYSTEM_CONTROL_AC12</displayName>
                        <description>Auto CMD12 Error Status Register The host driver may determine which of the errors cases related to Auto CMD12 has occurred by checking this MMCHS_AC12 register when an Auto CMD12 Error interrupt occurs. This register is valid only when Auto CMD12 is enabled (MMCHS_CMD[ACEN]) and Auto CMD12Error (MMCHS_STAT[ACE]) is set to 1. Note: These bits are automatically reset when starting a new adtc command with data.</description>
                        <addressOffset>0x23C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CAPA</name>
                        <displayName>SYSTEM_CONTROL_CAPA</displayName>
                        <description>Capabilities register This register lists the capabilities of the MMC/SD/SDIO host controller.</description>
                        <addressOffset>0x240</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MBL</name>
                                <description>MBL</description>
                                <lsb>16</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>BCF</name>
                                <description>BCF</description>
                                <lsb>8</lsb>
                                <msb>13</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TCF</name>
                                <description>TCF</description>
                                <lsb>0</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CUR_CAPA</name>
                        <displayName>SYSTEM_CONTROL_CUR_CAPA</displayName>
                        <description>Maximum current capabilities Register This register indicates the maximum current capability for each voltage. The value is meaningful if the voltage support is set in the capabilities register (MMCHS_CAPA). Initialization of this register (via a write access to this register) depends on the system capabilities. The host driver shall not modify this register after the initilaization. This register is only reinitialized by a hard reset (via RESETN signal)</description>
                        <addressOffset>0x248</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CUR_1V8</name>
                                <description>CUR_1V8</description>
                                <lsb>16</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CUR_3V0</name>
                                <description>CUR_3V0</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CUR_3V3</name>
                                <description>CUR_3V3</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>FE</name>
                        <displayName>SYSTEM_CONTROL_FE</displayName>
                        <description>Force Event Register for Error Interrupt status The force Event Register is not a physically implemented register. Rather it is an address at which the Error Interrupt Status register can be written. The effect of a write to this address will be reflected in the Error Interrupt Status Register if corresponding bit of the Error Interrupt Status Enable Register is set.</description>
                        <addressOffset>0x250</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ADMAES</name>
                        <displayName>SYSTEM_CONTROL_ADMAES</displayName>
                        <description>ADMA Error Status Register When ADMA Error Interrupt is occurred the ADMA Error States field in this register holds the ADMA state and the ADMA System Address Register holds the address around the error descriptor. For recovering the error the Host Driver requires the ADMA state to identify the error descriptor address as follows: ST_STOP: Previous location set in the ADMA System Address register is the error descriptor address ST_FDS: Current location set in the ADMA System Address register is the error descriptor address ST_CADR: This sate is never set because do not generate ADMA error in this state. ST_TFR: Previous location set in the ADMA System Address register is the error descriptor address In case of write operation the Host Driver should use ACMD22 to get the number of written block rather than using this information since unwritten data may exist in the Host Controller. The Host Controller generates the ADMA Error Interrupt when it detects invalid descriptor data (Valid=0) at the ST_FDS state. In this case ADMA Error State indicates that an error occurs at ST_FDS state. The Host Driver may find that the Valid bit is not set in the error descriptor.</description>
                        <addressOffset>0x254</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>AES</name>
                                <description>ADMA Error State his field indicates the state of ADMA when error is occurred during ADMA data transfer. &amp;quot;This field never indicates &amp;quot;&amp;quot;10&amp;quot;&amp;quot; because ADMA never stops in this state.&amp;quot; 0x0 ST_STOP (Stop DMA)Contents of SYS_SDR register 0x1 ST_STOP (Stop DMA)Points the error descriptor 0x2 Never set this state(Not used) 0x3 ST_TFR (Transfer Data)Points the next of the error descriptor</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>ADMASAL</name>
                        <displayName>SYSTEM_CONTROL_ADMASAL</displayName>
                        <description>ADMA System address Low bits</description>
                        <addressOffset>0x258</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>REV</name>
                        <displayName>SYSTEM_CONTROL_REV</displayName>
                        <description>Versions Register This register contains the hard coded RTL vendor revision number the version number of SD specification compliancy and a slot status bit. MMCHS_REV[31:16] = Host controller version MMCHS_REV[15:0] = Slot Interrupt Status ****************************************************************************</description>
                        <addressOffset>0x2FC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>VREV</name>
                                <description>Vendor Version Number: IP revision [7:4] Major revision [3:0] Minor revision Examples: 0x10 for 1.0 0x21 for 2.1</description>
                                <lsb>24</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SREV</name>
                                <description>SREV</description>
                                <lsb>16</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>UDMA</name>
                <version>1.0</version>
                <description>UDMA</description>
                <baseAddress>0x400FF000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>STAT</name>
                        <displayName>UDMA_STAT</displayName>
                        <description>STAT</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DMACHANS</name>
                                <description>Available uDMA Channels Minus 1</description>
                                <lsb>16</lsb>
                                <msb>20</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>STATE</name>
                                <description>Control State Machine Status 0x00000090 : UDMA_STAT_STATE_DONE : Done 0x00000000 : UDMA_STAT_STATE_IDLE : Idle 0x00000010 : UDMA_STAT_STATE_RD_CTRL : Reading channel controller data 0x00000030 : UDMA_STAT_STATE_RD_DSTENDP : Reading destination end pointer 0x00000040 : UDMA_STAT_STATE_RD_SRCDAT : Reading source data 0x00000020 : UDMA_STAT_STATE_RD_SRCENDP : Reading source end pointer 0x00000080 : UDMA_STAT_STATE_STALL : Stalled 0x000000A0 : UDMA_STAT_STATE_UNDEF : Undefined 0x00000060 : UDMA_STAT_STATE_WAIT : Waiting for uDMA request to clear 0x00000070 : UDMA_STAT_STATE_WR_CTRL : Writing channel controller data 0x00000050 : UDMA_STAT_STATE_WR_DSTDAT : Writing destination data</description>
                                <lsb>4</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CFG</name>
                        <displayName>UDMA_CFG</displayName>
                        <description>CFG</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CTLBASE</name>
                        <displayName>UDMA_CTLBASE</displayName>
                        <description>CTLBASE</description>
                        <addressOffset>0x8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ADDR</name>
                                <description>Channel Control Base Address</description>
                                <lsb>10</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>ALTBASE</name>
                        <displayName>UDMA_ALTBASE</displayName>
                        <description>ALTBASE</description>
                        <addressOffset>0xC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>WAITSTAT</name>
                        <displayName>UDMA_WAITSTAT</displayName>
                        <description>WAITSTAT</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SWREQ</name>
                        <displayName>UDMA_SWREQ</displayName>
                        <description>SWREQ</description>
                        <addressOffset>0x14</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>USEBURSTSET</name>
                        <displayName>UDMA_USEBURSTSET</displayName>
                        <description>USEBURSTSET</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>USEBURSTCLR</name>
                        <displayName>UDMA_USEBURSTCLR</displayName>
                        <description>USEBURSTCLR</description>
                        <addressOffset>0x1C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>REQMASKSET</name>
                        <displayName>UDMA_REQMASKSET</displayName>
                        <description>REQMASKSET</description>
                        <addressOffset>0x20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>REQMASKCLR</name>
                        <displayName>UDMA_REQMASKCLR</displayName>
                        <description>REQMASKCLR</description>
                        <addressOffset>0x24</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ENASET</name>
                        <displayName>UDMA_ENASET</displayName>
                        <description>ENASET</description>
                        <addressOffset>0x28</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ENACLR</name>
                        <displayName>UDMA_ENACLR</displayName>
                        <description>ENACLR</description>
                        <addressOffset>0x2C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ALTSET</name>
                        <displayName>UDMA_ALTSET</displayName>
                        <description>ALTSET</description>
                        <addressOffset>0x30</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ALTCLR</name>
                        <displayName>UDMA_ALTCLR</displayName>
                        <description>ALTCLR</description>
                        <addressOffset>0x34</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRIOSET</name>
                        <displayName>UDMA_PRIOSET</displayName>
                        <description>PRIOSET</description>
                        <addressOffset>0x38</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRIOCLR</name>
                        <displayName>UDMA_PRIOCLR</displayName>
                        <description>PRIOCLR</description>
                        <addressOffset>0x3C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ERRCLR</name>
                        <displayName>UDMA_ERRCLR</displayName>
                        <description>ERRCLR</description>
                        <addressOffset>0x4C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CHASGN</name>
                        <displayName>UDMA_CHASGN</displayName>
                        <description>CHASGN</description>
                        <addressOffset>0x500</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CHIS</name>
                        <displayName>UDMA_CHIS</displayName>
                        <description>CHIS</description>
                        <addressOffset>0x504</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CHMAP0</name>
                        <displayName>UDMA_CHMAP0</displayName>
                        <description>CHMAP0</description>
                        <addressOffset>0x510</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CH7SEL</name>
                                <description>uDMA Channel 7 Source Select</description>
                                <lsb>28</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH6SEL</name>
                                <description>uDMA Channel 6 Source Select</description>
                                <lsb>24</lsb>
                                <msb>27</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH5SEL</name>
                                <description>uDMA Channel 5 Source Select</description>
                                <lsb>20</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH4SEL</name>
                                <description>uDMA Channel 4 Source Select</description>
                                <lsb>16</lsb>
                                <msb>19</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH3SEL</name>
                                <description>uDMA Channel 3 Source Select</description>
                                <lsb>12</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH2SEL</name>
                                <description>uDMA Channel 2 Source Select</description>
                                <lsb>8</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH1SEL</name>
                                <description>uDMA Channel 1 Source Select</description>
                                <lsb>4</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH0SEL</name>
                                <description>uDMA Channel 0 Source Select</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CHMAP1</name>
                        <displayName>UDMA_CHMAP1</displayName>
                        <description>CHMAP1</description>
                        <addressOffset>0x514</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CH15SEL</name>
                                <description>uDMA Channel 15 Source Select</description>
                                <lsb>28</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH14SEL</name>
                                <description>uDMA Channel 14 Source Select</description>
                                <lsb>24</lsb>
                                <msb>27</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH13SEL</name>
                                <description>uDMA Channel 13 Source Select</description>
                                <lsb>20</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH12SEL</name>
                                <description>uDMA Channel 12 Source Select</description>
                                <lsb>16</lsb>
                                <msb>19</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH11SEL</name>
                                <description>uDMA Channel 11 Source Select</description>
                                <lsb>12</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH10SEL</name>
                                <description>uDMA Channel 10 Source Select</description>
                                <lsb>8</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH9SEL</name>
                                <description>uDMA Channel 9 Source Select</description>
                                <lsb>4</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH8SEL</name>
                                <description>uDMA Channel 8 Source Select</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CHMAP2</name>
                        <displayName>UDMA_CHMAP2</displayName>
                        <description>CHMAP2</description>
                        <addressOffset>0x518</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CH23SEL</name>
                                <description>uDMA Channel 23 Source Select</description>
                                <lsb>28</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH22SEL</name>
                                <description>uDMA Channel 22 Source Select</description>
                                <lsb>24</lsb>
                                <msb>27</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH21SEL</name>
                                <description>uDMA Channel 21 Source Select</description>
                                <lsb>20</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH20SEL</name>
                                <description>uDMA Channel 20 Source Select</description>
                                <lsb>16</lsb>
                                <msb>19</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH19SEL</name>
                                <description>uDMA Channel 19 Source Select</description>
                                <lsb>12</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH18SEL</name>
                                <description>uDMA Channel 18 Source Select</description>
                                <lsb>8</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH17SEL</name>
                                <description>uDMA Channel 17 Source Select</description>
                                <lsb>4</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH16SEL</name>
                                <description>uDMA Channel 16 Source Select</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CHMAP3</name>
                        <displayName>UDMA_CHMAP3</displayName>
                        <description>CHMAP3</description>
                        <addressOffset>0x51C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CH31SEL</name>
                                <description>uDMA Channel 31 Source Select</description>
                                <lsb>28</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH30SEL</name>
                                <description>uDMA Channel 30 Source Select</description>
                                <lsb>24</lsb>
                                <msb>27</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH29SEL</name>
                                <description>uDMA Channel 29 Source Select</description>
                                <lsb>20</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH28SEL</name>
                                <description>uDMA Channel 28 Source Select</description>
                                <lsb>16</lsb>
                                <msb>19</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH27SEL</name>
                                <description>uDMA Channel 27 Source Select</description>
                                <lsb>12</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH26SEL</name>
                                <description>uDMA Channel 26 Source Select</description>
                                <lsb>8</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH25SEL</name>
                                <description>uDMA Channel 25 Source Select</description>
                                <lsb>4</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CH24SEL</name>
                                <description>uDMA Channel 24 Source Select</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>PV</name>
                        <displayName>UDMA_PV</displayName>
                        <description>PV</description>
                        <addressOffset>0xFB0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MAJOR</name>
                                <description>Major Revision</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MINOR</name>
                                <description>Minor Revision</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>CAMERA</name>
                <version>1.0</version>
                <description>CAMERA</description>
                <baseAddress>0x44018000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>CC_REVISION</name>
                        <displayName>CAMERA_CC_REVISION</displayName>
                        <description>This register contains the IP revision code ( Parallel Mode)</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>REV</name>
                                <description>IP revision [7:4] Major revision [3:0] Minor revision Examples: 0x10 for 1.0 0x21 for 2.1</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CC_SYSCONFIG</name>
                        <displayName>CAMERA_CC_SYSCONFIG</displayName>
                        <description>This register controls the various parameters of the OCP interface (CCP and Parallel Mode)</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>S_IDLE_MODE</name>
                                <description>Slave interface power management req/ack control &amp;quot;&amp;quot;&amp;quot;00&amp;quot;&amp;quot; Force-idle. An idle request is acknoledged unconditionally&amp;quot; &amp;quot;&amp;quot;&amp;quot;01&amp;quot;&amp;quot; No-idle. An idle request is never acknowledged&amp;quot; &amp;quot;&amp;quot;&amp;quot;10&amp;quot;&amp;quot; reserved (Smart-idle not implemented)&amp;quot;</description>
                                <lsb>3</lsb>
                                <msb>4</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CC_SYSSTATUS</name>
                        <displayName>CAMERA_CC_SYSSTATUS</displayName>
                        <description>This register provides status information about the module excluding the interrupt status information (CCP and Parallel Mode)</description>
                        <addressOffset>0x14</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CC_IRQSTATUS</name>
                        <displayName>CAMERA_CC_IRQSTATUS</displayName>
                        <description>The interrupt status regroups all the status of the module internal events that can generate an interrupt (CCP &amp; Parallel Mode)</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CC_IRQENABLE</name>
                        <displayName>CAMERA_CC_IRQENABLE</displayName>
                        <description>The interrupt enable register allows to enable/disable the module internal sources of interrupt on an event-by-event basis (CCP &amp; Parallel Mode)</description>
                        <addressOffset>0x1C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CC_CTRL</name>
                        <displayName>CAMERA_CC_CTRL</displayName>
                        <description>This register controls the various parameters of the Camera Core block (CCP &amp; Parallel Mode)</description>
                        <addressOffset>0x40</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PAR_MODE</name>
                                <description>Sets the Protocol Mode of the Camera Core module in parallel mode (when CCP_MODE = 0) &amp;quot;&amp;quot;&amp;quot;000&amp;quot;&amp;quot; Parallel NOBT 8-bit&amp;quot; &amp;quot;&amp;quot;&amp;quot;001&amp;quot;&amp;quot; Parallel NOBT 10-bit&amp;quot; &amp;quot;&amp;quot;&amp;quot;010&amp;quot;&amp;quot; Parallel NOBT 12-bit&amp;quot; &amp;quot;&amp;quot;&amp;quot;011&amp;quot;&amp;quot; reserved&amp;quot; &amp;quot;&amp;quot;&amp;quot;100&amp;quot;&amp;quot; Parallet BT 8-bit&amp;quot; &amp;quot;&amp;quot;&amp;quot;101&amp;quot;&amp;quot; Parallel BT 10-bit&amp;quot; &amp;quot;&amp;quot;&amp;quot;110&amp;quot;&amp;quot; reserved&amp;quot; &amp;quot;&amp;quot;&amp;quot;111&amp;quot;&amp;quot; FIFO test mode. Refer to Table 12 - FIFO Write and Read access&amp;quot;</description>
                                <lsb>1</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CC_CTRL_DMA</name>
                        <displayName>CAMERA_CC_CTRL_DMA</displayName>
                        <description>This register controls the DMA interface of the Camera Core block (CCP &amp; Parallel Mode)</description>
                        <addressOffset>0x44</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>FIFO_THRESHOLD</name>
                                <description>Sets the threshold of the FIFO the assertion of the dmarequest line takes place when the threshold is reached. &amp;quot;&amp;quot;&amp;quot;0000000&amp;quot;&amp;quot; threshold set to 1&amp;quot; &amp;quot;&amp;quot;&amp;quot;0000001&amp;quot;&amp;quot; threshold set to 2&amp;quot;  &amp;quot;&amp;quot;&amp;quot;1111111&amp;quot;&amp;quot; threshold set to 128&amp;quot;</description>
                                <lsb>0</lsb>
                                <msb>6</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CC_CTRL_XCLK</name>
                        <displayName>CAMERA_CC_CTRL_XCLK</displayName>
                        <description>This register control the value of the clock divisor used to generate the external clock (Parallel Mode)</description>
                        <addressOffset>0x48</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>XCLK_DIV</name>
                                <description>Sets the clock divisor value for CAM_XCLK generation. based on CAM_MCK (value of CAM_MCLK is 96MHz) &amp;quot;&amp;quot;&amp;quot;00000&amp;quot;&amp;quot; CAM_XCLK Stable Low Level&amp;quot; Divider not enabled &amp;quot;&amp;quot;&amp;quot;00001&amp;quot;&amp;quot; CAM_XCLK Stable High Level&amp;quot; Divider not enabled from 2 to 30 CAM_XCLK = CAM_MCLK / XCLK_DIV &amp;quot;&amp;quot;&amp;quot;11111&amp;quot;&amp;quot; Bypass - CAM_XCLK = CAM_MCLK&amp;quot;</description>
                                <lsb>0</lsb>
                                <msb>4</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CC_FIFO_DATA</name>
                        <displayName>CAMERA_CC_FIFO_DATA</displayName>
                        <description>This register allows to write to the FIFO and read from the FIFO (CCP &amp; Parallel Mode)</description>
                        <addressOffset>0x4C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CC_TEST</name>
                        <displayName>CAMERA_CC_TEST</displayName>
                        <description>This register shows the status of some important variables of the camera core module (CCP &amp; Parallel Mode)</description>
                        <addressOffset>0x50</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>FIFO_RD_POINTER</name>
                                <description>FIFO READ Pointer This field shows the value of the FIFO read pointer Expected value ranges from 0 to 127</description>
                                <lsb>24</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>FIFO_WR_POINTER</name>
                                <description>FIFO WRITE pointer This field shows the value of the FIFO write pointer Expected value ranges from 0 to 127</description>
                                <lsb>16</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>FIFO_LEVEL</name>
                                <description>FIFO level (how many 32-bit words the FIFO contains) This field shows the value of the FIFO level and can assume values from 0 to 128</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>FIFO_LEVEL_PEAK</name>
                                <description>FIFO level peak This field shows the max value of the FIFO level and can assume values from 0 to 128</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CC_GEN_PAR</name>
                        <displayName>CAMERA_CC_GEN_PAR</displayName>
                        <description>This register shows the values of the generic parameters of the module ****************************************************************************</description>
                        <addressOffset>0x54</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CC_FIFO_DEPTH</name>
                                <description>Camera Core FIFO DEPTH generic parameter</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>I2S</name>
                <version>1.0</version>
                <description>I2S</description>
                <baseAddress>0x4401C000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>PID</name>
                        <displayName>I2S_PID</displayName>
                        <description>PID</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SCHEME</name>
                                <description>SCHEME</description>
                                <lsb>30</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>RESV</name>
                                <description>RESV</description>
                                <lsb>28</lsb>
                                <msb>29</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>FUNCTION</name>
                                <description>McASP</description>
                                <lsb>16</lsb>
                                <msb>27</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>RTL</name>
                                <description>RTL</description>
                                <lsb>11</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>REVMAJOR</name>
                                <description>REVMAJOR</description>
                                <lsb>8</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CUSTOM</name>
                                <description>non-custom</description>
                                <lsb>6</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>REVMINOR</name>
                                <description>REVMINOR</description>
                                <lsb>0</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>ESYSCONFIG</name>
                        <displayName>I2S_ESYSCONFIG</displayName>
                        <description>Power Idle SYSCONFIG register.</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>RSV</name>
                                <description>Reserved as per PDR 3.5</description>
                                <lsb>6</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>OTHER</name>
                                <description>Reserved for future expansion</description>
                                <lsb>2</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>IDLE_MODE</name>
                                <description>Idle Mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>PFUNC</name>
                        <displayName>I2S_PFUNC</displayName>
                        <description>PFUNC</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PDIR</name>
                        <displayName>I2S_PDIR</displayName>
                        <description>PDIR</description>
                        <addressOffset>0x14</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PDOUT</name>
                        <displayName>I2S_PDOUT</displayName>
                        <description>PDOUT</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PDIN_PDSET</name>
                        <displayName>I2S_PDIN_PDSET</displayName>
                        <description>The pin data input register (PDIN) holds the I/O pin state of each of the McASP pins. PDIN allows the actual value of the pin to be read regardless of the state of PFUNC and PDIR. The pin data set register (PDSET) is an alias of the pin data output register (PDOUT) for writes only. Writing a 1 to the PDSET bit sets the corresponding bit in PDOUT and if PFUNC = 1 (GPIO function) and PDIR = 1 (output) drives a logic high on the pin.</description>
                        <addressOffset>0x1C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PDCLR</name>
                        <displayName>I2S_PDCLR</displayName>
                        <description>The pin data clear register (PDCLR) is an alias of the pin data output register (PDOUT) for writes only. Writing a 1 to the PDCLR bit clears the corresponding bit in PDOUT and if PFUNC = 1 (GPIO function) and PDIR = 1 (output) drives a logic low on the pin.</description>
                        <addressOffset>0x20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TLGC</name>
                        <displayName>I2S_TLGC</displayName>
                        <description>for IODFT</description>
                        <addressOffset>0x30</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MT</name>
                                <description>MISR on/off trigger command 0x0 0x1 0x2 0x3</description>
                                <lsb>14</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MC</name>
                                <description>States of MISR 0x0 0x1 0x2 0x3</description>
                                <lsb>4</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>PC</name>
                                <description>Pattern code 0x0 0x1 0x2 0x3 0x4 0x5 0x6 0x7</description>
                                <lsb>1</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TLMR</name>
                        <displayName>I2S_TLMR</displayName>
                        <description>for IODFT</description>
                        <addressOffset>0x34</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TLEC</name>
                        <displayName>I2S_TLEC</displayName>
                        <description>for IODFT</description>
                        <addressOffset>0x38</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>GBLCTL</name>
                        <displayName>I2S_GBLCTL</displayName>
                        <description>GBLCTL</description>
                        <addressOffset>0x44</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>AMUTE</name>
                        <displayName>I2S_AMUTE</displayName>
                        <description>AMUTE</description>
                        <addressOffset>0x48</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MUTEN</name>
                                <description>AMUTE pin enable 0x0 0x1 0x2</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>LBCTL</name>
                        <displayName>I2S_LBCTL</displayName>
                        <description>LBCTL</description>
                        <addressOffset>0x4C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MODE</name>
                                <description>Loop back clock source generator 0x0 0x1 0x2 0x3</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TXDITCTL</name>
                        <displayName>I2S_TXDITCTL</displayName>
                        <description>TXDITCTL</description>
                        <addressOffset>0x50</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>GBLCTLR</name>
                        <displayName>I2S_GBLCTLR</displayName>
                        <description>GBLCTLR</description>
                        <addressOffset>0x60</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RXMASK</name>
                        <displayName>I2S_RXMASK</displayName>
                        <description>RXMASK</description>
                        <addressOffset>0x64</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RXFMT</name>
                        <displayName>I2S_RXFMT</displayName>
                        <description>RXFMT</description>
                        <addressOffset>0x68</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>RDATDLY</name>
                                <description>RCV Frame sync delay 0x0 0 Bit delay 0x1 1 Bit delay 0x2 2 Bit delay</description>
                                <lsb>16</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>RPAD</name>
                                <description>Pad value 0x0 0x1 0x2</description>
                                <lsb>13</lsb>
                                <msb>14</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>RPBIT</name>
                                <description>Pad bit position</description>
                                <lsb>8</lsb>
                                <msb>12</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>RSSZ</name>
                                <description>RCV slot Size 0x0 0x1 0x2 0x3 0x4 0x5 0x6 0x7 0x8 0x9 0xA 0xB 0xC 0xD 0xE 0xF</description>
                                <lsb>4</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>RROT</name>
                                <description>Right Rotate Value 0x0 0x1 0x2 0x3 0x4 0x5 0x6 0x7</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>RXFMCTL</name>
                        <displayName>I2S_RXFMCTL</displayName>
                        <description>RXFMCTL</description>
                        <addressOffset>0x6C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>RMOD</name>
                                <description>RCV Frame sync mode</description>
                                <lsb>7</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>ACLKRCTL</name>
                        <displayName>I2S_ACLKRCTL</displayName>
                        <description>ACLKRCTL</description>
                        <addressOffset>0x70</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CLKRADJ</name>
                                <description>CLKRADJ</description>
                                <lsb>16</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CLKRDIV</name>
                                <description>RCV clock devide ratio</description>
                                <lsb>0</lsb>
                                <msb>4</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>AHCLKRCTL</name>
                        <displayName>I2S_AHCLKRCTL</displayName>
                        <description>AHCLKRCTL</description>
                        <addressOffset>0x74</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>HCLKRADJ</name>
                                <description>HCLKRADJ</description>
                                <lsb>16</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>HCLKRDIV</name>
                                <description>RCV clock Divide Ratio</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>RXTDM</name>
                        <displayName>I2S_RXTDM</displayName>
                        <description>RXTDM</description>
                        <addressOffset>0x78</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EVTCTLR</name>
                        <displayName>I2S_EVTCTLR</displayName>
                        <description>EVTCTLR</description>
                        <addressOffset>0x7C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RXSTAT</name>
                        <displayName>I2S_RXSTAT</displayName>
                        <description>RXSTAT</description>
                        <addressOffset>0x80</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RXTDMSLOT</name>
                        <displayName>I2S_RXTDMSLOT</displayName>
                        <description>RXTDMSLOT</description>
                        <addressOffset>0x84</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>RSLOTCNT</name>
                                <description>Current RCV time slot count</description>
                                <lsb>0</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>RXCLKCHK</name>
                        <displayName>I2S_RXCLKCHK</displayName>
                        <description>RXCLKCHK</description>
                        <addressOffset>0x88</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>RCNT</name>
                                <description>RCV clock count value</description>
                                <lsb>24</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>RMAX</name>
                                <description>RCV clock maximum boundary</description>
                                <lsb>16</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>RMIN</name>
                                <description>RCV clock minimum boundary</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>RPS</name>
                                <description>RCV clock check prescaler 0x0 0x1 0x2 0x3 0x4 0x5 0x6 0x7 0x8</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>REVTCTL</name>
                        <displayName>I2S_REVTCTL</displayName>
                        <description>REVTCTL</description>
                        <addressOffset>0x8C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>GBLCTLX</name>
                        <displayName>I2S_GBLCTLX</displayName>
                        <description>GBLCTLX</description>
                        <addressOffset>0xA0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TXMASK</name>
                        <displayName>I2S_TXMASK</displayName>
                        <description>TXMASK</description>
                        <addressOffset>0xA4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TXFMT</name>
                        <displayName>I2S_TXFMT</displayName>
                        <description>TXFMT</description>
                        <addressOffset>0xA8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>XDATDLY</name>
                                <description>XMT Frame sync delay 0x0 0 Bit delay 0x1 1 Bit delay 0x2 2 Bit delay</description>
                                <lsb>16</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>XPAD</name>
                                <description>Pad value 0x0 0x1 0x2</description>
                                <lsb>13</lsb>
                                <msb>14</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>XPBIT</name>
                                <description>Pad bit position</description>
                                <lsb>8</lsb>
                                <msb>12</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>XSSZ</name>
                                <description>XMT slot Size 0x0 0x1 0x2 0x3 0x4 0x5 0x6 0x7 0x8 0x9 0xA 0xB 0xC 0xD 0xE 0xF</description>
                                <lsb>4</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>XROT</name>
                                <description>Right Rotate Value 0x0 0x1 0x2 0x3 0x4 0x5 0x6 0x7</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TXFMCTL</name>
                        <displayName>I2S_TXFMCTL</displayName>
                        <description>TXFMCTL</description>
                        <addressOffset>0xAC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>XMOD</name>
                                <description>XMT Frame sync mode</description>
                                <lsb>7</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>ACLKXCTL</name>
                        <displayName>I2S_ACLKXCTL</displayName>
                        <description>ACLKXCTL</description>
                        <addressOffset>0xB0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CLKXADJ</name>
                                <description>CLKXADJ</description>
                                <lsb>16</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CLKXDIV</name>
                                <description>XMT clock devide ratio</description>
                                <lsb>0</lsb>
                                <msb>4</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>AHCLKXCTL</name>
                        <displayName>I2S_AHCLKXCTL</displayName>
                        <description>AHCLKXCTL</description>
                        <addressOffset>0xB4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>HCLKXADJ</name>
                                <description>HCLKXADJ</description>
                                <lsb>16</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>HCLKXDIV</name>
                                <description>XMT clock Divide Ratio</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TXTDM</name>
                        <displayName>I2S_TXTDM</displayName>
                        <description>TXTDM</description>
                        <addressOffset>0xB8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EVTCTLX</name>
                        <displayName>I2S_EVTCTLX</displayName>
                        <description>EVTCTLX</description>
                        <addressOffset>0xBC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TXSTAT</name>
                        <displayName>I2S_TXSTAT</displayName>
                        <description>TXSTAT</description>
                        <addressOffset>0xC0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TXTDMSLOT</name>
                        <displayName>I2S_TXTDMSLOT</displayName>
                        <description>TXTDMSLOT</description>
                        <addressOffset>0xC4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>XSLOTCNT</name>
                                <description>Current XMT time slot count during reset the value of this register is 0b0101111111 (0x17f) and after reset 0</description>
                                <lsb>0</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TXCLKCHK</name>
                        <displayName>I2S_TXCLKCHK</displayName>
                        <description>TXCLKCHK</description>
                        <addressOffset>0xC8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>XCNT</name>
                                <description>XMT clock count value</description>
                                <lsb>24</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>XMAX</name>
                                <description>XMT clock maximum boundary</description>
                                <lsb>16</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>XMIN</name>
                                <description>XMT clock minimum boundary</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>XPS</name>
                                <description>XMT clock check prescaler 0x0 0x1 0x2 0x3 0x4 0x5 0x6 0x7 0x8</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>XEVTCTL</name>
                        <displayName>I2S_XEVTCTL</displayName>
                        <description>XEVTCTL</description>
                        <addressOffset>0xCC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CLKADJEN</name>
                        <displayName>I2S_CLKADJEN</displayName>
                        <description>CLKADJEN</description>
                        <addressOffset>0xD0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITCSRA0</name>
                        <displayName>I2S_DITCSRA0</displayName>
                        <description>DITCSRA0</description>
                        <addressOffset>0x100</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITCSRA1</name>
                        <displayName>I2S_DITCSRA1</displayName>
                        <description>DITCSRA1</description>
                        <addressOffset>0x104</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITCSRA2</name>
                        <displayName>I2S_DITCSRA2</displayName>
                        <description>DITCSRA2</description>
                        <addressOffset>0x108</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITCSRA3</name>
                        <displayName>I2S_DITCSRA3</displayName>
                        <description>DITCSRA3</description>
                        <addressOffset>0x10C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITCSRA4</name>
                        <displayName>I2S_DITCSRA4</displayName>
                        <description>DITCSRA4</description>
                        <addressOffset>0x110</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITCSRA5</name>
                        <displayName>I2S_DITCSRA5</displayName>
                        <description>DITCSRA5</description>
                        <addressOffset>0x114</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITCSRB0</name>
                        <displayName>I2S_DITCSRB0</displayName>
                        <description>DITCSRB0</description>
                        <addressOffset>0x118</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITCSRB1</name>
                        <displayName>I2S_DITCSRB1</displayName>
                        <description>DITCSRB1</description>
                        <addressOffset>0x11C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITCSRB2</name>
                        <displayName>I2S_DITCSRB2</displayName>
                        <description>DITCSRB2</description>
                        <addressOffset>0x120</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITCSRB3</name>
                        <displayName>I2S_DITCSRB3</displayName>
                        <description>DITCSRB3</description>
                        <addressOffset>0x124</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITCSRB4</name>
                        <displayName>I2S_DITCSRB4</displayName>
                        <description>DITCSRB4</description>
                        <addressOffset>0x128</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITCSRB5</name>
                        <displayName>I2S_DITCSRB5</displayName>
                        <description>DITCSRB5</description>
                        <addressOffset>0x12C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITUDRA0</name>
                        <displayName>I2S_DITUDRA0</displayName>
                        <description>DITUDRA0</description>
                        <addressOffset>0x130</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITUDRA1</name>
                        <displayName>I2S_DITUDRA1</displayName>
                        <description>DITUDRA1</description>
                        <addressOffset>0x134</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITUDRA2</name>
                        <displayName>I2S_DITUDRA2</displayName>
                        <description>DITUDRA2</description>
                        <addressOffset>0x138</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITUDRA3</name>
                        <displayName>I2S_DITUDRA3</displayName>
                        <description>DITUDRA3</description>
                        <addressOffset>0x13C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITUDRA4</name>
                        <displayName>I2S_DITUDRA4</displayName>
                        <description>DITUDRA4</description>
                        <addressOffset>0x140</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITUDRA5</name>
                        <displayName>I2S_DITUDRA5</displayName>
                        <description>DITUDRA5</description>
                        <addressOffset>0x144</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITUDRB0</name>
                        <displayName>I2S_DITUDRB0</displayName>
                        <description>DITUDRB0</description>
                        <addressOffset>0x148</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITUDRB1</name>
                        <displayName>I2S_DITUDRB1</displayName>
                        <description>DITUDRB1</description>
                        <addressOffset>0x14C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITUDRB2</name>
                        <displayName>I2S_DITUDRB2</displayName>
                        <description>DITUDRB2</description>
                        <addressOffset>0x150</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITUDRB3</name>
                        <displayName>I2S_DITUDRB3</displayName>
                        <description>DITUDRB3</description>
                        <addressOffset>0x154</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITUDRB4</name>
                        <displayName>I2S_DITUDRB4</displayName>
                        <description>DITUDRB4</description>
                        <addressOffset>0x158</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DITUDRB5</name>
                        <displayName>I2S_DITUDRB5</displayName>
                        <description>DITUDRB5</description>
                        <addressOffset>0x15C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>XRSRCTL0</name>
                        <displayName>I2S_XRSRCTL0</displayName>
                        <description>XRSRCTL0</description>
                        <addressOffset>0x180</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DISMOD</name>
                                <description>Serializer drive state 0x0 Tri state 0x1 Reserved 0x2 Drive pin low 0x3 Drive pin high</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SRMOD</name>
                                <description>Serializer Mode 0x0 InActive mode 0x1 Transmit mode 0x2 Receive mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>XRSRCTL1</name>
                        <displayName>I2S_XRSRCTL1</displayName>
                        <description>XRSRCTL1</description>
                        <addressOffset>0x184</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DISMOD</name>
                                <description>Serializer drive state 0x0 Tri state 0x1 Reserved 0x2 Drive pin low 0x3 Drive pin high</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SRMOD</name>
                                <description>Serializer Mode 0x0 InActive mode 0x1 Transmit mode 0x2 Receive mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>XRSRCTL2</name>
                        <displayName>I2S_XRSRCTL2</displayName>
                        <description>XRSRCTL2</description>
                        <addressOffset>0x188</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DISMOD</name>
                                <description>Serializer drive state 0x0 Tri state 0x1 Reserved 0x2 Drive pin low 0x3 Drive pin high</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SRMOD</name>
                                <description>Serializer Mode 0x0 InActive mode 0x1 Transmit mode 0x2 Receive mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>XRSRCTL3</name>
                        <displayName>I2S_XRSRCTL3</displayName>
                        <description>XRSRCTL3</description>
                        <addressOffset>0x18C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DISMOD</name>
                                <description>Serializer drive state 0x0 Tri state 0x1 Reserved 0x2 Drive pin low 0x3 Drive pin high</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SRMOD</name>
                                <description>Serializer Mode 0x0 InActive mode 0x1 Transmit mode 0x2 Receive mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>XRSRCTL4</name>
                        <displayName>I2S_XRSRCTL4</displayName>
                        <description>XRSRCTL4</description>
                        <addressOffset>0x190</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DISMOD</name>
                                <description>Serializer drive state 0x0 Tri state 0x1 Reserved 0x2 Drive pin low 0x3 Drive pin high</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SRMOD</name>
                                <description>Serializer Mode 0x0 InActive mode 0x1 Transmit mode 0x2 Receive mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>XRSRCTL5</name>
                        <displayName>I2S_XRSRCTL5</displayName>
                        <description>XRSRCTL5</description>
                        <addressOffset>0x194</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DISMOD</name>
                                <description>Serializer drive state 0x0 Tri state 0x1 Reserved 0x2 Drive pin low 0x3 Drive pin high</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SRMOD</name>
                                <description>Serializer Mode 0x0 InActive mode 0x1 Transmit mode 0x2 Receive mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>XRSRCTL6</name>
                        <displayName>I2S_XRSRCTL6</displayName>
                        <description>XRSRCTL6</description>
                        <addressOffset>0x198</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DISMOD</name>
                                <description>Serializer drive state 0x0 Tri state 0x1 Reserved 0x2 Drive pin low 0x3 Drive pin high</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SRMOD</name>
                                <description>Serializer Mode 0x0 InActive mode 0x1 Transmit mode 0x2 Receive mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>XRSRCTL7</name>
                        <displayName>I2S_XRSRCTL7</displayName>
                        <description>XRSRCTL7</description>
                        <addressOffset>0x19C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DISMOD</name>
                                <description>Serializer drive state 0x0 Tri state 0x1 Reserved 0x2 Drive pin low 0x3 Drive pin high</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SRMOD</name>
                                <description>Serializer Mode 0x0 InActive mode 0x1 Transmit mode 0x2 Receive mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>XRSRCTL8</name>
                        <displayName>I2S_XRSRCTL8</displayName>
                        <description>XRSRCTL8</description>
                        <addressOffset>0x1A0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DISMOD</name>
                                <description>Serializer drive state 0x0 Tri state 0x1 Reserved 0x2 Drive pin low 0x3 Drive pin high</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SRMOD</name>
                                <description>Serializer Mode 0x0 InActive mode 0x1 Transmit mode 0x2 Receive mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>XRSRCTL9</name>
                        <displayName>I2S_XRSRCTL9</displayName>
                        <description>XRSRCTL9</description>
                        <addressOffset>0x1A4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DISMOD</name>
                                <description>Serializer drive state 0x0 Tri state 0x1 Reserved 0x2 Drive pin low 0x3 Drive pin high</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SRMOD</name>
                                <description>Serializer Mode 0x0 InActive mode 0x1 Transmit mode 0x2 Receive mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>XRSRCTL10</name>
                        <displayName>I2S_XRSRCTL10</displayName>
                        <description>XRSRCTL10</description>
                        <addressOffset>0x1A8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DISMOD</name>
                                <description>Serializer drive state 0x0 Tri state 0x1 Reserved 0x2 Drive pin low 0x3 Drive pin high</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SRMOD</name>
                                <description>Serializer Mode 0x0 InActive mode 0x1 Transmit mode 0x2 Receive mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>XRSRCTL11</name>
                        <displayName>I2S_XRSRCTL11</displayName>
                        <description>XRSRCTL11</description>
                        <addressOffset>0x1AC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DISMOD</name>
                                <description>Serializer drive state 0x0 Tri state 0x1 Reserved 0x2 Drive pin low 0x3 Drive pin high</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SRMOD</name>
                                <description>Serializer Mode 0x0 InActive mode 0x1 Transmit mode 0x2 Receive mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>XRSRCTL12</name>
                        <displayName>I2S_XRSRCTL12</displayName>
                        <description>XRSRCTL12</description>
                        <addressOffset>0x1B0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DISMOD</name>
                                <description>Serializer drive state 0x0 Tri state 0x1 Reserved 0x2 Drive pin low 0x3 Drive pin high</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SRMOD</name>
                                <description>Serializer Mode 0x0 InActive mode 0x1 Transmit mode 0x2 Receive mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>XRSRCTL13</name>
                        <displayName>I2S_XRSRCTL13</displayName>
                        <description>XRSRCTL13</description>
                        <addressOffset>0x1B4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DISMOD</name>
                                <description>Serializer drive state 0x0 Tri state 0x1 Reserved 0x2 Drive pin low 0x3 Drive pin high</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SRMOD</name>
                                <description>Serializer Mode 0x0 InActive mode 0x1 Transmit mode 0x2 Receive mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>XRSRCTL14</name>
                        <displayName>I2S_XRSRCTL14</displayName>
                        <description>XRSRCTL14</description>
                        <addressOffset>0x1B8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DISMOD</name>
                                <description>Serializer drive state 0x0 Tri state 0x1 Reserved 0x2 Drive pin low 0x3 Drive pin high</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SRMOD</name>
                                <description>Serializer Mode 0x0 InActive mode 0x1 Transmit mode 0x2 Receive mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>XRSRCTL15</name>
                        <displayName>I2S_XRSRCTL15</displayName>
                        <description>XRSRCTL15</description>
                        <addressOffset>0x1BC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DISMOD</name>
                                <description>Serializer drive state 0x0 Tri state 0x1 Reserved 0x2 Drive pin low 0x3 Drive pin high</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SRMOD</name>
                                <description>Serializer Mode 0x0 InActive mode 0x1 Transmit mode 0x2 Receive mode</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TXBUF0</name>
                        <displayName>I2S_TXBUF0</displayName>
                        <description>TXBUF0</description>
                        <addressOffset>0x200</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TXBUF1</name>
                        <displayName>I2S_TXBUF1</displayName>
                        <description>TXBUF1</description>
                        <addressOffset>0x204</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TXBUF2</name>
                        <displayName>I2S_TXBUF2</displayName>
                        <description>TXBUF2</description>
                        <addressOffset>0x208</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TXBUF3</name>
                        <displayName>I2S_TXBUF3</displayName>
                        <description>TXBUF3</description>
                        <addressOffset>0x20C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TXBUF4</name>
                        <displayName>I2S_TXBUF4</displayName>
                        <description>TXBUF4</description>
                        <addressOffset>0x210</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TXBUF5</name>
                        <displayName>I2S_TXBUF5</displayName>
                        <description>TXBUF5</description>
                        <addressOffset>0x214</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TXBUF6</name>
                        <displayName>I2S_TXBUF6</displayName>
                        <description>TXBUF6</description>
                        <addressOffset>0x218</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TXBUF7</name>
                        <displayName>I2S_TXBUF7</displayName>
                        <description>TXBUF7</description>
                        <addressOffset>0x21C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TXBUF8</name>
                        <displayName>I2S_TXBUF8</displayName>
                        <description>TXBUF8</description>
                        <addressOffset>0x220</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TXBUF9</name>
                        <displayName>I2S_TXBUF9</displayName>
                        <description>TXBUF9</description>
                        <addressOffset>0x224</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TXBUF10</name>
                        <displayName>I2S_TXBUF10</displayName>
                        <description>TXBUF10</description>
                        <addressOffset>0x228</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TXBUF11</name>
                        <displayName>I2S_TXBUF11</displayName>
                        <description>TXBUF11</description>
                        <addressOffset>0x22C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TXBUF12</name>
                        <displayName>I2S_TXBUF12</displayName>
                        <description>TXBUF12</description>
                        <addressOffset>0x230</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TXBUF13</name>
                        <displayName>I2S_TXBUF13</displayName>
                        <description>TXBUF13</description>
                        <addressOffset>0x234</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TXBUF14</name>
                        <displayName>I2S_TXBUF14</displayName>
                        <description>TXBUF14</description>
                        <addressOffset>0x238</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TXBUF15</name>
                        <displayName>I2S_TXBUF15</displayName>
                        <description>TXBUF15</description>
                        <addressOffset>0x23C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RXBUF0</name>
                        <displayName>I2S_RXBUF0</displayName>
                        <description>RXBUF0</description>
                        <addressOffset>0x280</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RXBUF1</name>
                        <displayName>I2S_RXBUF1</displayName>
                        <description>RXBUF1</description>
                        <addressOffset>0x284</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RXBUF2</name>
                        <displayName>I2S_RXBUF2</displayName>
                        <description>RXBUF2</description>
                        <addressOffset>0x288</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RXBUF3</name>
                        <displayName>I2S_RXBUF3</displayName>
                        <description>RXBUF3</description>
                        <addressOffset>0x28C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RXBUF4</name>
                        <displayName>I2S_RXBUF4</displayName>
                        <description>RXBUF4</description>
                        <addressOffset>0x290</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RXBUF5</name>
                        <displayName>I2S_RXBUF5</displayName>
                        <description>RXBUF5</description>
                        <addressOffset>0x294</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RXBUF6</name>
                        <displayName>I2S_RXBUF6</displayName>
                        <description>RXBUF6</description>
                        <addressOffset>0x298</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RXBUF7</name>
                        <displayName>I2S_RXBUF7</displayName>
                        <description>RXBUF7</description>
                        <addressOffset>0x29C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RXBUF8</name>
                        <displayName>I2S_RXBUF8</displayName>
                        <description>RXBUF8</description>
                        <addressOffset>0x2A0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RXBUF9</name>
                        <displayName>I2S_RXBUF9</displayName>
                        <description>RXBUF9</description>
                        <addressOffset>0x2A4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RXBUF10</name>
                        <displayName>I2S_RXBUF10</displayName>
                        <description>RXBUF10</description>
                        <addressOffset>0x2A8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RXBUF11</name>
                        <displayName>I2S_RXBUF11</displayName>
                        <description>RXBUF11</description>
                        <addressOffset>0x2AC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RXBUF12</name>
                        <displayName>I2S_RXBUF12</displayName>
                        <description>RXBUF12</description>
                        <addressOffset>0x2B0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RXBUF13</name>
                        <displayName>I2S_RXBUF13</displayName>
                        <description>RXBUF13</description>
                        <addressOffset>0x2B4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RXBUF14</name>
                        <displayName>I2S_RXBUF14</displayName>
                        <description>RXBUF14</description>
                        <addressOffset>0x2B8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RXBUF15</name>
                        <displayName>I2S_RXBUF15</displayName>
                        <description>RXBUF15</description>
                        <addressOffset>0x2BC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>SSPI</name>
                <version>1.0</version>
                <description>SSPI</description>
                <baseAddress>0x44020000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>HL_REV</name>
                        <displayName>SSPI_HL_REV</displayName>
                        <description>IP Revision Identifier (X.Y.R) Used by software to track features bugs and compatibility</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SCHEME</name>
                                <description>SCHEME</description>
                                <lsb>30</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>RSVD</name>
                                <description>Reserved These bits are initialized to zero and writes to them are ignored.</description>
                                <lsb>28</lsb>
                                <msb>29</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>FUNC</name>
                                <description>Function indicates a software compatible module family. If there is no level of software compatibility a new Func number (and hence REVISION) should be assigned.</description>
                                <lsb>16</lsb>
                                <msb>27</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>R_RTL</name>
                                <description>RTL Version (R) maintained by IP design owner. RTL follows a numbering such as X.Y.R.Z which are explained in this table. R changes ONLY when: (1) PDS uploads occur which may have been due to spec changes (2) Bug fixes occur (3) Resets to '0' when X or Y changes. Design team has an internal 'Z' (customer invisible) number which increments on every drop that happens due to DV and RTL updates. Z resets to 0 when R increments.</description>
                                <lsb>11</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>X_MAJOR</name>
                                <description>Major Revision (X) maintained by IP specification owner. X changes ONLY when: (1) There is a major feature addition. An example would be adding Master Mode to Utopia Level2. The Func field (or Class/Type in old PID format) will remain the same. X does NOT change due to: (1) Bug fixes (2) Change in feature parameters.</description>
                                <lsb>8</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CUSTOM</name>
                                <description>CUSTOM</description>
                                <lsb>6</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>Y_MINOR</name>
                                <description>Minor Revision (Y) maintained by IP specification owner. Y changes ONLY when: (1) Features are scaled (up or down). Flexibility exists in that this feature scalability may either be represented in the Y change or a specific register in the IP that indicates which features are exactly available. (2) When feature creeps from Is-Not list to Is list. But this may not be the case once it sees silicon; in which case X will change. Y does NOT change due to: (1) Bug fixes (2) Typos or clarifications (3) major functional/feature change/addition/deletion. Instead these changes may be reflected via R S X as applicable. Spec owner maintains a customer-invisible number 'S' which changes due to: (1) Typos/clarifications (2) Bug documentation. Note that this bug is not due to a spec change but due to implementation. Nevertheless the spec tracks the IP bugs. An RTL release (say for silicon PG1.1) that occurs due to bug fix should document the corresponding spec number (X.Y.S) in its release notes.</description>
                                <lsb>0</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>HL_HWINFO</name>
                        <displayName>SSPI_HL_HWINFO</displayName>
                        <description>Information about the IP module's hardware configuration i.e. typically the module's HDL generics (if any). Actual field format and encoding is up to the module's designer to decide.</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>FFNBYTE</name>
                                <description>FFNBYTE</description>
                                <lsb>1</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>HL_SYSCONFIG</name>
                        <displayName>SSPI_HL_SYSCONFIG</displayName>
                        <description>0x4402 1010 0x4402 2010 Clock management configuration</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>IDLEMODE</name>
                                <description>Configuration of the local target state management mode. By definition target can handle read/write transaction as long as it is out of IDLE state. 0x0 Force-idle mode: local target's idle state follows (acknowledges) the system's idle requests unconditionally i.e. regardless of the IP module's internal requirements.Backup mode for debug only. 0x1 No-idle mode: local target never enters idle state.Backup mode for debug only. 0x2 Smart-idle mode: local target's idle state eventually follows (acknowledges) the system's idle requests depending on the IP module's internal requirements.IP module shall not generate (IRQ- or DMA-request-related) wakeup events. 0x3 &amp;quot;Smart-idle wakeup-capable mode: local target's idle state eventually follows (acknowledges) the system's idle requests depending on the IP module's internal requirements.IP module may generate (IRQ- or DMA-request-related) wakeup events when in idle state.Mode is only relevant if the appropriate IP module &amp;quot;&amp;quot;swakeup&amp;quot;&amp;quot; output(s) is (are) implemented.&amp;quot;</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>REVISION</name>
                        <displayName>SSPI_REVISION</displayName>
                        <description>0x4402 1100 0x4402 2100 This register contains the hard coded RTL revision number.</description>
                        <addressOffset>0x100</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>REV</name>
                                <description>IP revision [7:4] Major revision [3:0] Minor revision Examples: 0x10 for 1.0 0x21 for 2.1</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SYSCONFIG</name>
                        <displayName>SSPI_SYSCONFIG</displayName>
                        <description>0x4402 1110 0x4402 2110 This register allows controlling various parameters of the OCP interface.</description>
                        <addressOffset>0x110</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CLOCKACTIVITY</name>
                                <description>Clocks activity during wake up mode period 0x0 OCP and Functional clocks may be switched off. 0x1 OCP clock is maintained. Functional clock may be switched-off. 0x2 Functional clock is maintained. OCP clock may be switched-off. 0x3 OCP and Functional clocks are maintained.</description>
                                <lsb>8</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SIDLEMODE</name>
                                <description>Power management 0x0 If an idle request is detected the McSPI acknowledges it unconditionally and goes in Inactive mode. Interrupt DMA requests and wake up lines are unconditionally de-asserted and the module wakeup capability is deactivated even if the bit MCSPI_SYSCONFIG[EnaWakeUp] is set. 0x1 If an idle request is detected the request is ignored and the module does not switch to wake up mode and keeps on behaving normally. 0x2 If an idle request is detected the module will switch to idle mode based on its internal activity. The wake up capability cannot be used. 0x3 If an idle request is detected the module will switch to idle mode based on its internal activity and the wake up capability can be used if the bit MCSPI_SYSCONFIG[EnaWakeUp] is set.</description>
                                <lsb>3</lsb>
                                <msb>4</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SYSSTATUS</name>
                        <displayName>SSPI_SYSSTATUS</displayName>
                        <description>0x4402 1114 0x4402 2114 This register provides status information about the module excluding the interrupt status information</description>
                        <addressOffset>0x114</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IRQSTATUS</name>
                        <displayName>SSPI_IRQSTATUS</displayName>
                        <description>0x4402 1118 0x4402 2118 The interrupt status regroups all the status of the module internal events that can generate an interrupt</description>
                        <addressOffset>0x118</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IRQENABLE</name>
                        <displayName>SSPI_IRQENABLE</displayName>
                        <description>0x4402 111C 0x4402 211C This register allows to enable/disable the module internal sources of interrupt on an event-by-event basis.</description>
                        <addressOffset>0x11C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>WAKEUPENABLE</name>
                        <displayName>SSPI_WAKEUPENABLE</displayName>
                        <description>0x4402 1120 0x4402 2120 The wakeup enable register allows to enable/disable the module internal sources of wakeup on event-by-event basis.</description>
                        <addressOffset>0x120</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SYST</name>
                        <displayName>SSPI_SYST</displayName>
                        <description>0x4402 1124 0x4402 2124 This register is used to check the correctness of the system interconnect either internally to peripheral bus or externally to device IO pads when the module is configured in system test (SYSTEST) mode.</description>
                        <addressOffset>0x124</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MODULCTRL</name>
                        <displayName>SSPI_MODULCTRL</displayName>
                        <description>0x4402 1128 0x4402 2128 This register is dedicated to the configuration of the serial port interface.</description>
                        <addressOffset>0x128</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>INITDLY</name>
                                <description>Initial spi delay for first transfer: This register is an option only available in SINGLE master mode The controller waits for a delay to transmit the first spi word after channel enabled and corresponding TX register filled. This Delay is based on SPI output frequency clock No clock output provided to the boundary and chip select is not active in 4 pin mode within this period. 0x0 No delay for first spi transfer. 0x1 The controller wait 4 spi bus clock 0x2 The controller wait 8 spi bus clock 0x3 The controller wait 16 spi bus clock 0x4 The controller wait 32 spi bus clock</description>
                                <lsb>4</lsb>
                                <msb>6</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CH0CONF</name>
                        <displayName>SSPI_CH0CONF</displayName>
                        <description>0x4402 112C 0x4402 212C This register is dedicated to the configuration of the channel 0</description>
                        <addressOffset>0x12C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TCS0</name>
                                <description>Chip Select Time Control This 2-bits field defines the number of interface clock cycles between CS toggling and first or last edge of SPI clock. 0x0 0.5 clock cycle 0x1 1.5 clock cycle 0x2 2.5 clock cycle 0x3 3.5 clock cycle</description>
                                <lsb>25</lsb>
                                <msb>26</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SPIENSLV</name>
                                <description>Channel 0 only and slave mode only: SPI slave select signal detection. Reserved bits for other cases. 0x0 Detection enabled only on SPIEN[0] 0x1 Detection enabled only on SPIEN[1] 0x2 Detection enabled only on SPIEN[2] 0x3 Detection enabled only on SPIEN[3]</description>
                                <lsb>21</lsb>
                                <msb>22</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TRM</name>
                                <description>Transmit/Receive modes 0x0 Transmit and Receive mode 0x1 Receive only mode 0x2 Transmit only mode 0x3 Reserved</description>
                                <lsb>12</lsb>
                                <msb>13</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>WL</name>
                                <description>SPI word length 0x00 Reserved 0x01 Reserved 0x02 Reserved 0x03 The SPI word is 4-bits long 0x04 The SPI word is 5-bits long 0x05 The SPI word is 6-bits long 0x06 The SPI word is 7-bits long 0x07 The SPI word is 8-bits long 0x08 The SPI word is 9-bits long 0x09 The SPI word is 10-bits long 0x0A The SPI word is 11-bits long 0x0B The SPI word is 12-bits long 0x0C The SPI word is 13-bits long 0x0D The SPI word is 14-bits long 0x0E The SPI word is 15-bits long 0x0F The SPI word is 16-bits long 0x10 The SPI word is 17-bits long 0x11 The SPI word is 18-bits long 0x12 The SPI word is 19-bits long 0x13 The SPI word is 20-bits long 0x14 The SPI word is 21-bits long 0x15 The SPI word is 22-bits long 0x16 The SPI word is 23-bits long 0x17 The SPI word is 24-bits long 0x18 The SPI word is 25-bits long 0x19 The SPI word is 26-bits long 0x1A The SPI word is 27-bits long 0x1B The SPI word is 28-bits long 0x1C The SPI word is 29-bits long 0x1D The SPI word is 30-bits long 0x1E The SPI word is 31-bits long 0x1F The SPI word is 32-bits long</description>
                                <lsb>7</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CLKD</name>
                                <description>Frequency divider for SPICLK. (only when the module is a Master SPI device). A programmable clock divider divides the SPI reference clock (CLKSPIREF) with a 4-bit value and results in a new clock SPICLK available to shift-in and shift-out data. By default the clock divider ratio has a power of two granularity when MCSPI_CHCONF[CLKG] is cleared Otherwise this register is the 4 LSB bit of a 12-bit register concatenated with clock divider extension MCSPI_CHCTRL[EXTCLK] register.The value description below defines the clock ratio when MCSPI_CHCONF[CLKG] is set to 0. 0x0 1 0x1 2 0x2 4 0x3 8 0x4 16 0x5 32 0x6 64 0x7 128 0x8 256 0x9 512 0xA 1024 0xB 2048 0xC 4096 0xD 8192 0xE 16384 0xF 32768</description>
                                <lsb>2</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CH0STAT</name>
                        <displayName>SSPI_CH0STAT</displayName>
                        <description>0x4402 1130 0x4402 2130 This register provides status information about transmitter and receiver registers of channel 0</description>
                        <addressOffset>0x130</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH0CTRL</name>
                        <displayName>SSPI_CH0CTRL</displayName>
                        <description>0x4402 1134 0x4402 2134 This register is dedicated to enable the channel 0</description>
                        <addressOffset>0x134</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>EXTCLK</name>
                                <description>Clock ratio extension: This register is used to concatenate with MCSPI_CHCONF[CLKD] register for clock ratio only when granularity is one clock cycle (MCSPI_CHCONF[CLKG] set to 1). Then the max value reached is 4096 clock divider ratio. 0x00 Clock ratio is CLKD + 1 0x01 Clock ratio is CLKD + 1 + 16 0xFF Clock ratio is CLKD + 1 + 4080</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TX0</name>
                        <displayName>SSPI_TX0</displayName>
                        <description>0x4402 1138 0x4402 2138 This register contains a single SPI word to transmit on the serial link what ever SPI word length is.</description>
                        <addressOffset>0x138</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RX0</name>
                        <displayName>SSPI_RX0</displayName>
                        <description>0x4402 113C 0x4402 213C This register contains a single SPI word received through the serial link what ever SPI word length is.</description>
                        <addressOffset>0x13C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH1CONF</name>
                        <displayName>SSPI_CH1CONF</displayName>
                        <description>0x4402 1140 0x4402 2140 This register is dedicated to the configuration of the channel.</description>
                        <addressOffset>0x140</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TCS1</name>
                                <description>Chip Select Time Control This 2-bits field defines the number of interface clock cycles between CS toggling and first or last edge of SPI clock. 0x0 0.5 clock cycle 0x1 1.5 clock cycle 0x2 2.5 clock cycle 0x3 3.5 clock cycle</description>
                                <lsb>25</lsb>
                                <msb>26</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TRM</name>
                                <description>Transmit/Receive modes 0x0 Transmit and Receive mode 0x1 Receive only mode 0x2 Transmit only mode 0x3 Reserved</description>
                                <lsb>12</lsb>
                                <msb>13</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>WL</name>
                                <description>SPI word length 0x00 Reserved 0x01 Reserved 0x02 Reserved 0x03 The SPI word is 4-bits long 0x04 The SPI word is 5-bits long 0x05 The SPI word is 6-bits long 0x06 The SPI word is 7-bits long 0x07 The SPI word is 8-bits long 0x08 The SPI word is 9-bits long 0x09 The SPI word is 10-bits long 0x0A The SPI word is 11-bits long 0x0B The SPI word is 12-bits long 0x0C The SPI word is 13-bits long 0x0D The SPI word is 14-bits long 0x0E The SPI word is 15-bits long 0x0F The SPI word is 16-bits long 0x10 The SPI word is 17-bits long 0x11 The SPI word is 18-bits long 0x12 The SPI word is 19-bits long 0x13 The SPI word is 20-bits long 0x14 The SPI word is 21-bits long 0x15 The SPI word is 22-bits long 0x16 The SPI word is 23-bits long 0x17 The SPI word is 24-bits long 0x18 The SPI word is 25-bits long 0x19 The SPI word is 26-bits long 0x1A The SPI word is 27-bits long 0x1B The SPI word is 28-bits long 0x1C The SPI word is 29-bits long 0x1D The SPI word is 30-bits long 0x1E The SPI word is 31-bits long 0x1F The SPI word is 32-bits long</description>
                                <lsb>7</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CLKD</name>
                                <description>Frequency divider for SPICLK. (only when the module is a Master SPI device). A programmable clock divider divides the SPI reference clock (CLKSPIREF) with a 4-bit value and results in a new clock SPICLK available to shift-in and shift-out data. By default the clock divider ratio has a power of two granularity when MCSPI_CHCONF[CLKG] is cleared Otherwise this register is the 4 LSB bit of a 12-bit register concatenated with clock divider extension MCSPI_CHCTRL[EXTCLK] register.The value description below defines the clock ratio when MCSPI_CHCONF[CLKG] is set to 0. 0x0 1 0x1 2 0x2 4 0x3 8 0x4 16 0x5 32 0x6 64 0x7 128 0x8 256 0x9 512 0xA 1024 0xB 2048 0xC 4096 0xD 8192 0xE 16384 0xF 32768</description>
                                <lsb>2</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CH1STAT</name>
                        <displayName>SSPI_CH1STAT</displayName>
                        <description>0x4402 1144 0x4402 2144 This register provides status information about transmitter and receiver registers of channel 1</description>
                        <addressOffset>0x144</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH1CTRL</name>
                        <displayName>SSPI_CH1CTRL</displayName>
                        <description>0x4402 1148 0x4402 2148 This register is dedicated to enable the channel 1</description>
                        <addressOffset>0x148</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>EXTCLK</name>
                                <description>Clock ratio extension: This register is used to concatenate with MCSPI_CHCONF[CLKD] register for clock ratio only when granularity is one clock cycle (MCSPI_CHCONF[CLKG] set to 1). Then the max value reached is 4096 clock divider ratio. 0x00 Clock ratio is CLKD + 1 0x01 Clock ratio is CLKD + 1 + 16 0xFF Clock ratio is CLKD + 1 + 4080</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TX1</name>
                        <displayName>SSPI_TX1</displayName>
                        <description>0x4402 114C 0x4402 214C This register contains a single SPI word to transmit on the serial link what ever SPI word length is.</description>
                        <addressOffset>0x14C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RX1</name>
                        <displayName>SSPI_RX1</displayName>
                        <description>0x4402 1150 0x4402 2150 This register contains a single SPI word received through the serial link what ever SPI word length is.</description>
                        <addressOffset>0x150</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH2CONF</name>
                        <displayName>SSPI_CH2CONF</displayName>
                        <description>0x4402 1154 0x4402 2154 This register is dedicated to the configuration of the channel 2</description>
                        <addressOffset>0x154</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TCS2</name>
                                <description>Chip Select Time Control This 2-bits field defines the number of interface clock cycles between CS toggling and first or last edge of SPI clock. 0x0 0.5 clock cycle 0x1 1.5 clock cycle 0x2 2.5 clock cycle 0x3 3.5 clock cycle</description>
                                <lsb>25</lsb>
                                <msb>26</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TRM</name>
                                <description>Transmit/Receive modes 0x0 Transmit and Receive mode 0x1 Receive only mode 0x2 Transmit only mode 0x3 Reserved</description>
                                <lsb>12</lsb>
                                <msb>13</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>WL</name>
                                <description>SPI word length 0x00 Reserved 0x01 Reserved 0x02 Reserved 0x03 The SPI word is 4-bits long 0x04 The SPI word is 5-bits long 0x05 The SPI word is 6-bits long 0x06 The SPI word is 7-bits long 0x07 The SPI word is 8-bits long 0x08 The SPI word is 9-bits long 0x09 The SPI word is 10-bits long 0x0A The SPI word is 11-bits long 0x0B The SPI word is 12-bits long 0x0C The SPI word is 13-bits long 0x0D The SPI word is 14-bits long 0x0E The SPI word is 15-bits long 0x0F The SPI word is 16-bits long 0x10 The SPI word is 17-bits long 0x11 The SPI word is 18-bits long 0x12 The SPI word is 19-bits long 0x13 The SPI word is 20-bits long 0x14 The SPI word is 21-bits long 0x15 The SPI word is 22-bits long 0x16 The SPI word is 23-bits long 0x17 The SPI word is 24-bits long 0x18 The SPI word is 25-bits long 0x19 The SPI word is 26-bits long 0x1A The SPI word is 27-bits long 0x1B The SPI word is 28-bits long 0x1C The SPI word is 29-bits long 0x1D The SPI word is 30-bits long 0x1E The SPI word is 31-bits long 0x1F The SPI word is 32-bits long</description>
                                <lsb>7</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CLKD</name>
                                <description>Frequency divider for SPICLK. (only when the module is a Master SPI device). A programmable clock divider divides the SPI reference clock (CLKSPIREF) with a 4-bit value and results in a new clock SPICLK available to shift-in and shift-out data. By default the clock divider ratio has a power of two granularity when MCSPI_CHCONF[CLKG] is cleared Otherwise this register is the 4 LSB bit of a 12-bit register concatenated with clock divider extension MCSPI_CHCTRL[EXTCLK] register.The value description below defines the clock ratio when MCSPI_CHCONF[CLKG] is set to 0. 0x0 1 0x1 2 0x2 4 0x3 8 0x4 16 0x5 32 0x6 64 0x7 128 0x8 256 0x9 512 0xA 1024 0xB 2048 0xC 4096 0xD 8192 0xE 16384 0xF 32768</description>
                                <lsb>2</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CH2STAT</name>
                        <displayName>SSPI_CH2STAT</displayName>
                        <description>0x4402 1158 0x4402 2158 This register provides status information about transmitter and receiver registers of channel 2</description>
                        <addressOffset>0x158</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH2CTRL</name>
                        <displayName>SSPI_CH2CTRL</displayName>
                        <description>0x4402 115C 0x4402 215C This register is dedicated to enable the channel 2</description>
                        <addressOffset>0x15C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>EXTCLK</name>
                                <description>Clock ratio extension: This register is used to concatenate with MCSPI_CHCONF[CLKD] register for clock ratio only when granularity is one clock cycle (MCSPI_CHCONF[CLKG] set to 1). Then the max value reached is 4096 clock divider ratio. 0x00 Clock ratio is CLKD + 1 0x01 Clock ratio is CLKD + 1 + 16 0xFF Clock ratio is CLKD + 1 + 4080</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TX2</name>
                        <displayName>SSPI_TX2</displayName>
                        <description>0x4402 1160 0x4402 2160 This register contains a single SPI word to transmit on the serial link what ever SPI word length is.</description>
                        <addressOffset>0x160</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RX2</name>
                        <displayName>SSPI_RX2</displayName>
                        <description>0x4402 1164 0x4402 2164 This register contains a single SPI word received through the serial link what ever SPI word length is.</description>
                        <addressOffset>0x164</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH3CONF</name>
                        <displayName>SSPI_CH3CONF</displayName>
                        <description>0x4402 1168 0x4402 2168 This register is dedicated to the configuration of the channel 3</description>
                        <addressOffset>0x168</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TCS3</name>
                                <description>Chip Select Time Control This 2-bits field defines the number of interface clock cycles between CS toggling and first or last edge of SPI clock. 0x0 0.5 clock cycle 0x1 1.5 clock cycle 0x2 2.5 clock cycle 0x3 3.5 clock cycle</description>
                                <lsb>25</lsb>
                                <msb>26</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TRM</name>
                                <description>Transmit/Receive modes 0x0 Transmit and Receive mode 0x1 Receive only mode 0x2 Transmit only mode 0x3 Reserved</description>
                                <lsb>12</lsb>
                                <msb>13</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>WL</name>
                                <description>SPI word length 0x00 Reserved 0x01 Reserved 0x02 Reserved 0x03 The SPI word is 4-bits long 0x04 The SPI word is 5-bits long 0x05 The SPI word is 6-bits long 0x06 The SPI word is 7-bits long 0x07 The SPI word is 8-bits long 0x08 The SPI word is 9-bits long 0x09 The SPI word is 10-bits long 0x0A The SPI word is 11-bits long 0x0B The SPI word is 12-bits long 0x0C The SPI word is 13-bits long 0x0D The SPI word is 14-bits long 0x0E The SPI word is 15-bits long 0x0F The SPI word is 16-bits long 0x10 The SPI word is 17-bits long 0x11 The SPI word is 18-bits long 0x12 The SPI word is 19-bits long 0x13 The SPI word is 20-bits long 0x14 The SPI word is 21-bits long 0x15 The SPI word is 22-bits long 0x16 The SPI word is 23-bits long 0x17 The SPI word is 24-bits long 0x18 The SPI word is 25-bits long 0x19 The SPI word is 26-bits long 0x1A The SPI word is 27-bits long 0x1B The SPI word is 28-bits long 0x1C The SPI word is 29-bits long 0x1D The SPI word is 30-bits long 0x1E The SPI word is 31-bits long 0x1F The SPI word is 32-bits long</description>
                                <lsb>7</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CLKD</name>
                                <description>Frequency divider for SPICLK. (only when the module is a Master SPI device). A programmable clock divider divides the SPI reference clock (CLKSPIREF) with a 4-bit value and results in a new clock SPICLK available to shift-in and shift-out data. By default the clock divider ratio has a power of two granularity when MCSPI_CHCONF[CLKG] is cleared Otherwise this register is the 4 LSB bit of a 12-bit register concatenated with clock divider extension MCSPI_CHCTRL[EXTCLK] register.The value description below defines the clock ratio when MCSPI_CHCONF[CLKG] is set to 0. 0x0 1 0x1 2 0x2 4 0x3 8 0x4 16 0x5 32 0x6 64 0x7 128 0x8 256 0x9 512 0xA 1024 0xB 2048 0xC 4096 0xD 8192 0xE 16384 0xF 32768</description>
                                <lsb>2</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CH3STAT</name>
                        <displayName>SSPI_CH3STAT</displayName>
                        <description>0x4402 116C 0x4402 216C This register provides status information about transmitter and receiver registers of channel 3</description>
                        <addressOffset>0x16C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH3CTRL</name>
                        <displayName>SSPI_CH3CTRL</displayName>
                        <description>0x4402 1170 0x4402 2170 This register is dedicated to enable the channel 3</description>
                        <addressOffset>0x170</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>EXTCLK</name>
                                <description>Clock ratio extension: This register is used to concatenate with MCSPI_CHCONF[CLKD] register for clock ratio only when granularity is one clock cycle (MCSPI_CHCONF[CLKG] set to 1). Then the max value reached is 4096 clock divider ratio. 0x00 Clock ratio is CLKD + 1 0x01 Clock ratio is CLKD + 1 + 16 0xFF Clock ratio is CLKD + 1 + 4080</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TX3</name>
                        <displayName>SSPI_TX3</displayName>
                        <description>0x4402 1174 0x4402 2174 This register contains a single SPI word to transmit on the serial link what ever SPI word length is.</description>
                        <addressOffset>0x174</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RX3</name>
                        <displayName>SSPI_RX3</displayName>
                        <description>0x4402 1178 0x4402 2178 This register contains a single SPI word received through the serial link what ever SPI word length is.</description>
                        <addressOffset>0x178</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>XFERLEVEL</name>
                        <displayName>SSPI_XFERLEVEL</displayName>
                        <description>0x4402 117C 0x4402 217C This register provides transfer levels needed while using FIFO buffer during transfer.</description>
                        <addressOffset>0x17C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>WCNT</name>
                                <description>Spi word counterThis register holds the programmable value of number of SPI word to be transferred on channel which is using the FIFO buffer.When transfer had started a read back in this register returns the current SPI word transfer index. 0x0000 Counter not used 0x0001 one word 0xFFFE 65534 spi word 0xFFFF 65535 spi word</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>AFL</name>
                                <description>Buffer Almost Full This register holds the programmable almost full level value used to determine almost full buffer condition. If the user wants an interrupt or a DMA read request to be issued during a receive operation when the data buffer holds at least n bytes then the buffer MCSPI_MODULCTRL[AFL] must be set with n-1.The size of this register is defined by the generic parameter FFNBYTE. 0x00 one byte 0x01 2 bytes 0xFE 255bytes 0xFF 256bytes</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>AEL</name>
                                <description>Buffer Almost EmptyThis register holds the programmable almost empty level value used to determine almost empty buffer condition. If the user wants an interrupt or a DMA write request to be issued during a transmit operation when the data buffer is able to receive n bytes then the buffer MCSPI_MODULCTRL[AEL] must be set with n-1. 0x00 one byte 0x01 2 bytes 0xFE 255 bytes 0xFF 256bytes</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DAFTX</name>
                        <displayName>SSPI_DAFTX</displayName>
                        <description>0x4402 1180 0x4402 2180 This register contains the SPI words to transmit on the serial link when FIFO used and DMA address is aligned on 256 bit.This register is an image of one of MCSPI_TX(i) register corresponding to the channel which have its FIFO enabled.</description>
                        <addressOffset>0x180</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DAFRX</name>
                        <displayName>SSPI_DAFRX</displayName>
                        <description>0x4402 11A0 0x4402 21A0 This register contains the SPI words to received on the serial link when FIFO used and DMA address is aligned on 256 bit.This register is an image of one of MCSPI_RX(i) register corresponding to the channel which have its FIFO enabled. ****************************************************************************</description>
                        <addressOffset>0x1A0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>GSPI</name>
                <version>1.0</version>
                <description>GSPI</description>
                <baseAddress>0x44021000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>HL_REV</name>
                        <displayName>GSPI_HL_REV</displayName>
                        <description>IP Revision Identifier (X.Y.R) Used by software to track features bugs and compatibility</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SCHEME</name>
                                <description>SCHEME</description>
                                <lsb>30</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>RSVD</name>
                                <description>Reserved These bits are initialized to zero and writes to them are ignored.</description>
                                <lsb>28</lsb>
                                <msb>29</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>FUNC</name>
                                <description>Function indicates a software compatible module family. If there is no level of software compatibility a new Func number (and hence REVISION) should be assigned.</description>
                                <lsb>16</lsb>
                                <msb>27</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>R_RTL</name>
                                <description>RTL Version (R) maintained by IP design owner. RTL follows a numbering such as X.Y.R.Z which are explained in this table. R changes ONLY when: (1) PDS uploads occur which may have been due to spec changes (2) Bug fixes occur (3) Resets to '0' when X or Y changes. Design team has an internal 'Z' (customer invisible) number which increments on every drop that happens due to DV and RTL updates. Z resets to 0 when R increments.</description>
                                <lsb>11</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>X_MAJOR</name>
                                <description>Major Revision (X) maintained by IP specification owner. X changes ONLY when: (1) There is a major feature addition. An example would be adding Master Mode to Utopia Level2. The Func field (or Class/Type in old PID format) will remain the same. X does NOT change due to: (1) Bug fixes (2) Change in feature parameters.</description>
                                <lsb>8</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CUSTOM</name>
                                <description>CUSTOM</description>
                                <lsb>6</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>Y_MINOR</name>
                                <description>Minor Revision (Y) maintained by IP specification owner. Y changes ONLY when: (1) Features are scaled (up or down). Flexibility exists in that this feature scalability may either be represented in the Y change or a specific register in the IP that indicates which features are exactly available. (2) When feature creeps from Is-Not list to Is list. But this may not be the case once it sees silicon; in which case X will change. Y does NOT change due to: (1) Bug fixes (2) Typos or clarifications (3) major functional/feature change/addition/deletion. Instead these changes may be reflected via R S X as applicable. Spec owner maintains a customer-invisible number 'S' which changes due to: (1) Typos/clarifications (2) Bug documentation. Note that this bug is not due to a spec change but due to implementation. Nevertheless the spec tracks the IP bugs. An RTL release (say for silicon PG1.1) that occurs due to bug fix should document the corresponding spec number (X.Y.S) in its release notes.</description>
                                <lsb>0</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>HL_HWINFO</name>
                        <displayName>GSPI_HL_HWINFO</displayName>
                        <description>Information about the IP module's hardware configuration i.e. typically the module's HDL generics (if any). Actual field format and encoding is up to the module's designer to decide.</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>FFNBYTE</name>
                                <description>FFNBYTE</description>
                                <lsb>1</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>HL_SYSCONFIG</name>
                        <displayName>GSPI_HL_SYSCONFIG</displayName>
                        <description>0x4402 1010 0x4402 2010 Clock management configuration</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>IDLEMODE</name>
                                <description>Configuration of the local target state management mode. By definition target can handle read/write transaction as long as it is out of IDLE state. 0x0 Force-idle mode: local target's idle state follows (acknowledges) the system's idle requests unconditionally i.e. regardless of the IP module's internal requirements.Backup mode for debug only. 0x1 No-idle mode: local target never enters idle state.Backup mode for debug only. 0x2 Smart-idle mode: local target's idle state eventually follows (acknowledges) the system's idle requests depending on the IP module's internal requirements.IP module shall not generate (IRQ- or DMA-request-related) wakeup events. 0x3 &amp;quot;Smart-idle wakeup-capable mode: local target's idle state eventually follows (acknowledges) the system's idle requests depending on the IP module's internal requirements.IP module may generate (IRQ- or DMA-request-related) wakeup events when in idle state.Mode is only relevant if the appropriate IP module &amp;quot;&amp;quot;swakeup&amp;quot;&amp;quot; output(s) is (are) implemented.&amp;quot;</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>REVISION</name>
                        <displayName>GSPI_REVISION</displayName>
                        <description>0x4402 1100 0x4402 2100 This register contains the hard coded RTL revision number.</description>
                        <addressOffset>0x100</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>REV</name>
                                <description>IP revision [7:4] Major revision [3:0] Minor revision Examples: 0x10 for 1.0 0x21 for 2.1</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SYSCONFIG</name>
                        <displayName>GSPI_SYSCONFIG</displayName>
                        <description>0x4402 1110 0x4402 2110 This register allows controlling various parameters of the OCP interface.</description>
                        <addressOffset>0x110</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CLOCKACTIVITY</name>
                                <description>Clocks activity during wake up mode period 0x0 OCP and Functional clocks may be switched off. 0x1 OCP clock is maintained. Functional clock may be switched-off. 0x2 Functional clock is maintained. OCP clock may be switched-off. 0x3 OCP and Functional clocks are maintained.</description>
                                <lsb>8</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SIDLEMODE</name>
                                <description>Power management 0x0 If an idle request is detected the McSPI acknowledges it unconditionally and goes in Inactive mode. Interrupt DMA requests and wake up lines are unconditionally de-asserted and the module wakeup capability is deactivated even if the bit MCSPI_SYSCONFIG[EnaWakeUp] is set. 0x1 If an idle request is detected the request is ignored and the module does not switch to wake up mode and keeps on behaving normally. 0x2 If an idle request is detected the module will switch to idle mode based on its internal activity. The wake up capability cannot be used. 0x3 If an idle request is detected the module will switch to idle mode based on its internal activity and the wake up capability can be used if the bit MCSPI_SYSCONFIG[EnaWakeUp] is set.</description>
                                <lsb>3</lsb>
                                <msb>4</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SYSSTATUS</name>
                        <displayName>GSPI_SYSSTATUS</displayName>
                        <description>0x4402 1114 0x4402 2114 This register provides status information about the module excluding the interrupt status information</description>
                        <addressOffset>0x114</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IRQSTATUS</name>
                        <displayName>GSPI_IRQSTATUS</displayName>
                        <description>0x4402 1118 0x4402 2118 The interrupt status regroups all the status of the module internal events that can generate an interrupt</description>
                        <addressOffset>0x118</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IRQENABLE</name>
                        <displayName>GSPI_IRQENABLE</displayName>
                        <description>0x4402 111C 0x4402 211C This register allows to enable/disable the module internal sources of interrupt on an event-by-event basis.</description>
                        <addressOffset>0x11C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>WAKEUPENABLE</name>
                        <displayName>GSPI_WAKEUPENABLE</displayName>
                        <description>0x4402 1120 0x4402 2120 The wakeup enable register allows to enable/disable the module internal sources of wakeup on event-by-event basis.</description>
                        <addressOffset>0x120</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SYST</name>
                        <displayName>GSPI_SYST</displayName>
                        <description>0x4402 1124 0x4402 2124 This register is used to check the correctness of the system interconnect either internally to peripheral bus or externally to device IO pads when the module is configured in system test (SYSTEST) mode.</description>
                        <addressOffset>0x124</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MODULCTRL</name>
                        <displayName>GSPI_MODULCTRL</displayName>
                        <description>0x4402 1128 0x4402 2128 This register is dedicated to the configuration of the serial port interface.</description>
                        <addressOffset>0x128</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>INITDLY</name>
                                <description>Initial spi delay for first transfer: This register is an option only available in SINGLE master mode The controller waits for a delay to transmit the first spi word after channel enabled and corresponding TX register filled. This Delay is based on SPI output frequency clock No clock output provided to the boundary and chip select is not active in 4 pin mode within this period. 0x0 No delay for first spi transfer. 0x1 The controller wait 4 spi bus clock 0x2 The controller wait 8 spi bus clock 0x3 The controller wait 16 spi bus clock 0x4 The controller wait 32 spi bus clock</description>
                                <lsb>4</lsb>
                                <msb>6</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CH0CONF</name>
                        <displayName>GSPI_CH0CONF</displayName>
                        <description>0x4402 112C 0x4402 212C This register is dedicated to the configuration of the channel 0</description>
                        <addressOffset>0x12C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TCS0</name>
                                <description>Chip Select Time Control This 2-bits field defines the number of interface clock cycles between CS toggling and first or last edge of SPI clock. 0x0 0.5 clock cycle 0x1 1.5 clock cycle 0x2 2.5 clock cycle 0x3 3.5 clock cycle</description>
                                <lsb>25</lsb>
                                <msb>26</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SPIENSLV</name>
                                <description>Channel 0 only and slave mode only: SPI slave select signal detection. Reserved bits for other cases. 0x0 Detection enabled only on SPIEN[0] 0x1 Detection enabled only on SPIEN[1] 0x2 Detection enabled only on SPIEN[2] 0x3 Detection enabled only on SPIEN[3]</description>
                                <lsb>21</lsb>
                                <msb>22</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TRM</name>
                                <description>Transmit/Receive modes 0x0 Transmit and Receive mode 0x1 Receive only mode 0x2 Transmit only mode 0x3 Reserved</description>
                                <lsb>12</lsb>
                                <msb>13</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>WL</name>
                                <description>SPI word length 0x00 Reserved 0x01 Reserved 0x02 Reserved 0x03 The SPI word is 4-bits long 0x04 The SPI word is 5-bits long 0x05 The SPI word is 6-bits long 0x06 The SPI word is 7-bits long 0x07 The SPI word is 8-bits long 0x08 The SPI word is 9-bits long 0x09 The SPI word is 10-bits long 0x0A The SPI word is 11-bits long 0x0B The SPI word is 12-bits long 0x0C The SPI word is 13-bits long 0x0D The SPI word is 14-bits long 0x0E The SPI word is 15-bits long 0x0F The SPI word is 16-bits long 0x10 The SPI word is 17-bits long 0x11 The SPI word is 18-bits long 0x12 The SPI word is 19-bits long 0x13 The SPI word is 20-bits long 0x14 The SPI word is 21-bits long 0x15 The SPI word is 22-bits long 0x16 The SPI word is 23-bits long 0x17 The SPI word is 24-bits long 0x18 The SPI word is 25-bits long 0x19 The SPI word is 26-bits long 0x1A The SPI word is 27-bits long 0x1B The SPI word is 28-bits long 0x1C The SPI word is 29-bits long 0x1D The SPI word is 30-bits long 0x1E The SPI word is 31-bits long 0x1F The SPI word is 32-bits long</description>
                                <lsb>7</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CLKD</name>
                                <description>Frequency divider for SPICLK. (only when the module is a Master SPI device). A programmable clock divider divides the SPI reference clock (CLKSPIREF) with a 4-bit value and results in a new clock SPICLK available to shift-in and shift-out data. By default the clock divider ratio has a power of two granularity when MCSPI_CHCONF[CLKG] is cleared Otherwise this register is the 4 LSB bit of a 12-bit register concatenated with clock divider extension MCSPI_CHCTRL[EXTCLK] register.The value description below defines the clock ratio when MCSPI_CHCONF[CLKG] is set to 0. 0x0 1 0x1 2 0x2 4 0x3 8 0x4 16 0x5 32 0x6 64 0x7 128 0x8 256 0x9 512 0xA 1024 0xB 2048 0xC 4096 0xD 8192 0xE 16384 0xF 32768</description>
                                <lsb>2</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CH0STAT</name>
                        <displayName>GSPI_CH0STAT</displayName>
                        <description>0x4402 1130 0x4402 2130 This register provides status information about transmitter and receiver registers of channel 0</description>
                        <addressOffset>0x130</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH0CTRL</name>
                        <displayName>GSPI_CH0CTRL</displayName>
                        <description>0x4402 1134 0x4402 2134 This register is dedicated to enable the channel 0</description>
                        <addressOffset>0x134</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>EXTCLK</name>
                                <description>Clock ratio extension: This register is used to concatenate with MCSPI_CHCONF[CLKD] register for clock ratio only when granularity is one clock cycle (MCSPI_CHCONF[CLKG] set to 1). Then the max value reached is 4096 clock divider ratio. 0x00 Clock ratio is CLKD + 1 0x01 Clock ratio is CLKD + 1 + 16 0xFF Clock ratio is CLKD + 1 + 4080</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TX0</name>
                        <displayName>GSPI_TX0</displayName>
                        <description>0x4402 1138 0x4402 2138 This register contains a single SPI word to transmit on the serial link what ever SPI word length is.</description>
                        <addressOffset>0x138</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RX0</name>
                        <displayName>GSPI_RX0</displayName>
                        <description>0x4402 113C 0x4402 213C This register contains a single SPI word received through the serial link what ever SPI word length is.</description>
                        <addressOffset>0x13C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH1CONF</name>
                        <displayName>GSPI_CH1CONF</displayName>
                        <description>0x4402 1140 0x4402 2140 This register is dedicated to the configuration of the channel.</description>
                        <addressOffset>0x140</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TCS1</name>
                                <description>Chip Select Time Control This 2-bits field defines the number of interface clock cycles between CS toggling and first or last edge of SPI clock. 0x0 0.5 clock cycle 0x1 1.5 clock cycle 0x2 2.5 clock cycle 0x3 3.5 clock cycle</description>
                                <lsb>25</lsb>
                                <msb>26</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TRM</name>
                                <description>Transmit/Receive modes 0x0 Transmit and Receive mode 0x1 Receive only mode 0x2 Transmit only mode 0x3 Reserved</description>
                                <lsb>12</lsb>
                                <msb>13</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>WL</name>
                                <description>SPI word length 0x00 Reserved 0x01 Reserved 0x02 Reserved 0x03 The SPI word is 4-bits long 0x04 The SPI word is 5-bits long 0x05 The SPI word is 6-bits long 0x06 The SPI word is 7-bits long 0x07 The SPI word is 8-bits long 0x08 The SPI word is 9-bits long 0x09 The SPI word is 10-bits long 0x0A The SPI word is 11-bits long 0x0B The SPI word is 12-bits long 0x0C The SPI word is 13-bits long 0x0D The SPI word is 14-bits long 0x0E The SPI word is 15-bits long 0x0F The SPI word is 16-bits long 0x10 The SPI word is 17-bits long 0x11 The SPI word is 18-bits long 0x12 The SPI word is 19-bits long 0x13 The SPI word is 20-bits long 0x14 The SPI word is 21-bits long 0x15 The SPI word is 22-bits long 0x16 The SPI word is 23-bits long 0x17 The SPI word is 24-bits long 0x18 The SPI word is 25-bits long 0x19 The SPI word is 26-bits long 0x1A The SPI word is 27-bits long 0x1B The SPI word is 28-bits long 0x1C The SPI word is 29-bits long 0x1D The SPI word is 30-bits long 0x1E The SPI word is 31-bits long 0x1F The SPI word is 32-bits long</description>
                                <lsb>7</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CLKD</name>
                                <description>Frequency divider for SPICLK. (only when the module is a Master SPI device). A programmable clock divider divides the SPI reference clock (CLKSPIREF) with a 4-bit value and results in a new clock SPICLK available to shift-in and shift-out data. By default the clock divider ratio has a power of two granularity when MCSPI_CHCONF[CLKG] is cleared Otherwise this register is the 4 LSB bit of a 12-bit register concatenated with clock divider extension MCSPI_CHCTRL[EXTCLK] register.The value description below defines the clock ratio when MCSPI_CHCONF[CLKG] is set to 0. 0x0 1 0x1 2 0x2 4 0x3 8 0x4 16 0x5 32 0x6 64 0x7 128 0x8 256 0x9 512 0xA 1024 0xB 2048 0xC 4096 0xD 8192 0xE 16384 0xF 32768</description>
                                <lsb>2</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CH1STAT</name>
                        <displayName>GSPI_CH1STAT</displayName>
                        <description>0x4402 1144 0x4402 2144 This register provides status information about transmitter and receiver registers of channel 1</description>
                        <addressOffset>0x144</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH1CTRL</name>
                        <displayName>GSPI_CH1CTRL</displayName>
                        <description>0x4402 1148 0x4402 2148 This register is dedicated to enable the channel 1</description>
                        <addressOffset>0x148</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>EXTCLK</name>
                                <description>Clock ratio extension: This register is used to concatenate with MCSPI_CHCONF[CLKD] register for clock ratio only when granularity is one clock cycle (MCSPI_CHCONF[CLKG] set to 1). Then the max value reached is 4096 clock divider ratio. 0x00 Clock ratio is CLKD + 1 0x01 Clock ratio is CLKD + 1 + 16 0xFF Clock ratio is CLKD + 1 + 4080</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TX1</name>
                        <displayName>GSPI_TX1</displayName>
                        <description>0x4402 114C 0x4402 214C This register contains a single SPI word to transmit on the serial link what ever SPI word length is.</description>
                        <addressOffset>0x14C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RX1</name>
                        <displayName>GSPI_RX1</displayName>
                        <description>0x4402 1150 0x4402 2150 This register contains a single SPI word received through the serial link what ever SPI word length is.</description>
                        <addressOffset>0x150</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH2CONF</name>
                        <displayName>GSPI_CH2CONF</displayName>
                        <description>0x4402 1154 0x4402 2154 This register is dedicated to the configuration of the channel 2</description>
                        <addressOffset>0x154</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TCS2</name>
                                <description>Chip Select Time Control This 2-bits field defines the number of interface clock cycles between CS toggling and first or last edge of SPI clock. 0x0 0.5 clock cycle 0x1 1.5 clock cycle 0x2 2.5 clock cycle 0x3 3.5 clock cycle</description>
                                <lsb>25</lsb>
                                <msb>26</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TRM</name>
                                <description>Transmit/Receive modes 0x0 Transmit and Receive mode 0x1 Receive only mode 0x2 Transmit only mode 0x3 Reserved</description>
                                <lsb>12</lsb>
                                <msb>13</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>WL</name>
                                <description>SPI word length 0x00 Reserved 0x01 Reserved 0x02 Reserved 0x03 The SPI word is 4-bits long 0x04 The SPI word is 5-bits long 0x05 The SPI word is 6-bits long 0x06 The SPI word is 7-bits long 0x07 The SPI word is 8-bits long 0x08 The SPI word is 9-bits long 0x09 The SPI word is 10-bits long 0x0A The SPI word is 11-bits long 0x0B The SPI word is 12-bits long 0x0C The SPI word is 13-bits long 0x0D The SPI word is 14-bits long 0x0E The SPI word is 15-bits long 0x0F The SPI word is 16-bits long 0x10 The SPI word is 17-bits long 0x11 The SPI word is 18-bits long 0x12 The SPI word is 19-bits long 0x13 The SPI word is 20-bits long 0x14 The SPI word is 21-bits long 0x15 The SPI word is 22-bits long 0x16 The SPI word is 23-bits long 0x17 The SPI word is 24-bits long 0x18 The SPI word is 25-bits long 0x19 The SPI word is 26-bits long 0x1A The SPI word is 27-bits long 0x1B The SPI word is 28-bits long 0x1C The SPI word is 29-bits long 0x1D The SPI word is 30-bits long 0x1E The SPI word is 31-bits long 0x1F The SPI word is 32-bits long</description>
                                <lsb>7</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CLKD</name>
                                <description>Frequency divider for SPICLK. (only when the module is a Master SPI device). A programmable clock divider divides the SPI reference clock (CLKSPIREF) with a 4-bit value and results in a new clock SPICLK available to shift-in and shift-out data. By default the clock divider ratio has a power of two granularity when MCSPI_CHCONF[CLKG] is cleared Otherwise this register is the 4 LSB bit of a 12-bit register concatenated with clock divider extension MCSPI_CHCTRL[EXTCLK] register.The value description below defines the clock ratio when MCSPI_CHCONF[CLKG] is set to 0. 0x0 1 0x1 2 0x2 4 0x3 8 0x4 16 0x5 32 0x6 64 0x7 128 0x8 256 0x9 512 0xA 1024 0xB 2048 0xC 4096 0xD 8192 0xE 16384 0xF 32768</description>
                                <lsb>2</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CH2STAT</name>
                        <displayName>GSPI_CH2STAT</displayName>
                        <description>0x4402 1158 0x4402 2158 This register provides status information about transmitter and receiver registers of channel 2</description>
                        <addressOffset>0x158</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH2CTRL</name>
                        <displayName>GSPI_CH2CTRL</displayName>
                        <description>0x4402 115C 0x4402 215C This register is dedicated to enable the channel 2</description>
                        <addressOffset>0x15C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>EXTCLK</name>
                                <description>Clock ratio extension: This register is used to concatenate with MCSPI_CHCONF[CLKD] register for clock ratio only when granularity is one clock cycle (MCSPI_CHCONF[CLKG] set to 1). Then the max value reached is 4096 clock divider ratio. 0x00 Clock ratio is CLKD + 1 0x01 Clock ratio is CLKD + 1 + 16 0xFF Clock ratio is CLKD + 1 + 4080</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TX2</name>
                        <displayName>GSPI_TX2</displayName>
                        <description>0x4402 1160 0x4402 2160 This register contains a single SPI word to transmit on the serial link what ever SPI word length is.</description>
                        <addressOffset>0x160</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RX2</name>
                        <displayName>GSPI_RX2</displayName>
                        <description>0x4402 1164 0x4402 2164 This register contains a single SPI word received through the serial link what ever SPI word length is.</description>
                        <addressOffset>0x164</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH3CONF</name>
                        <displayName>GSPI_CH3CONF</displayName>
                        <description>0x4402 1168 0x4402 2168 This register is dedicated to the configuration of the channel 3</description>
                        <addressOffset>0x168</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TCS3</name>
                                <description>Chip Select Time Control This 2-bits field defines the number of interface clock cycles between CS toggling and first or last edge of SPI clock. 0x0 0.5 clock cycle 0x1 1.5 clock cycle 0x2 2.5 clock cycle 0x3 3.5 clock cycle</description>
                                <lsb>25</lsb>
                                <msb>26</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TRM</name>
                                <description>Transmit/Receive modes 0x0 Transmit and Receive mode 0x1 Receive only mode 0x2 Transmit only mode 0x3 Reserved</description>
                                <lsb>12</lsb>
                                <msb>13</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>WL</name>
                                <description>SPI word length 0x00 Reserved 0x01 Reserved 0x02 Reserved 0x03 The SPI word is 4-bits long 0x04 The SPI word is 5-bits long 0x05 The SPI word is 6-bits long 0x06 The SPI word is 7-bits long 0x07 The SPI word is 8-bits long 0x08 The SPI word is 9-bits long 0x09 The SPI word is 10-bits long 0x0A The SPI word is 11-bits long 0x0B The SPI word is 12-bits long 0x0C The SPI word is 13-bits long 0x0D The SPI word is 14-bits long 0x0E The SPI word is 15-bits long 0x0F The SPI word is 16-bits long 0x10 The SPI word is 17-bits long 0x11 The SPI word is 18-bits long 0x12 The SPI word is 19-bits long 0x13 The SPI word is 20-bits long 0x14 The SPI word is 21-bits long 0x15 The SPI word is 22-bits long 0x16 The SPI word is 23-bits long 0x17 The SPI word is 24-bits long 0x18 The SPI word is 25-bits long 0x19 The SPI word is 26-bits long 0x1A The SPI word is 27-bits long 0x1B The SPI word is 28-bits long 0x1C The SPI word is 29-bits long 0x1D The SPI word is 30-bits long 0x1E The SPI word is 31-bits long 0x1F The SPI word is 32-bits long</description>
                                <lsb>7</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CLKD</name>
                                <description>Frequency divider for SPICLK. (only when the module is a Master SPI device). A programmable clock divider divides the SPI reference clock (CLKSPIREF) with a 4-bit value and results in a new clock SPICLK available to shift-in and shift-out data. By default the clock divider ratio has a power of two granularity when MCSPI_CHCONF[CLKG] is cleared Otherwise this register is the 4 LSB bit of a 12-bit register concatenated with clock divider extension MCSPI_CHCTRL[EXTCLK] register.The value description below defines the clock ratio when MCSPI_CHCONF[CLKG] is set to 0. 0x0 1 0x1 2 0x2 4 0x3 8 0x4 16 0x5 32 0x6 64 0x7 128 0x8 256 0x9 512 0xA 1024 0xB 2048 0xC 4096 0xD 8192 0xE 16384 0xF 32768</description>
                                <lsb>2</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CH3STAT</name>
                        <displayName>GSPI_CH3STAT</displayName>
                        <description>0x4402 116C 0x4402 216C This register provides status information about transmitter and receiver registers of channel 3</description>
                        <addressOffset>0x16C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH3CTRL</name>
                        <displayName>GSPI_CH3CTRL</displayName>
                        <description>0x4402 1170 0x4402 2170 This register is dedicated to enable the channel 3</description>
                        <addressOffset>0x170</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>EXTCLK</name>
                                <description>Clock ratio extension: This register is used to concatenate with MCSPI_CHCONF[CLKD] register for clock ratio only when granularity is one clock cycle (MCSPI_CHCONF[CLKG] set to 1). Then the max value reached is 4096 clock divider ratio. 0x00 Clock ratio is CLKD + 1 0x01 Clock ratio is CLKD + 1 + 16 0xFF Clock ratio is CLKD + 1 + 4080</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TX3</name>
                        <displayName>GSPI_TX3</displayName>
                        <description>0x4402 1174 0x4402 2174 This register contains a single SPI word to transmit on the serial link what ever SPI word length is.</description>
                        <addressOffset>0x174</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RX3</name>
                        <displayName>GSPI_RX3</displayName>
                        <description>0x4402 1178 0x4402 2178 This register contains a single SPI word received through the serial link what ever SPI word length is.</description>
                        <addressOffset>0x178</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>XFERLEVEL</name>
                        <displayName>GSPI_XFERLEVEL</displayName>
                        <description>0x4402 117C 0x4402 217C This register provides transfer levels needed while using FIFO buffer during transfer.</description>
                        <addressOffset>0x17C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>WCNT</name>
                                <description>Spi word counterThis register holds the programmable value of number of SPI word to be transferred on channel which is using the FIFO buffer.When transfer had started a read back in this register returns the current SPI word transfer index. 0x0000 Counter not used 0x0001 one word 0xFFFE 65534 spi word 0xFFFF 65535 spi word</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>AFL</name>
                                <description>Buffer Almost Full This register holds the programmable almost full level value used to determine almost full buffer condition. If the user wants an interrupt or a DMA read request to be issued during a receive operation when the data buffer holds at least n bytes then the buffer MCSPI_MODULCTRL[AFL] must be set with n-1.The size of this register is defined by the generic parameter FFNBYTE. 0x00 one byte 0x01 2 bytes 0xFE 255bytes 0xFF 256bytes</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>AEL</name>
                                <description>Buffer Almost EmptyThis register holds the programmable almost empty level value used to determine almost empty buffer condition. If the user wants an interrupt or a DMA write request to be issued during a transmit operation when the data buffer is able to receive n bytes then the buffer MCSPI_MODULCTRL[AEL] must be set with n-1. 0x00 one byte 0x01 2 bytes 0xFE 255 bytes 0xFF 256bytes</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DAFTX</name>
                        <displayName>GSPI_DAFTX</displayName>
                        <description>0x4402 1180 0x4402 2180 This register contains the SPI words to transmit on the serial link when FIFO used and DMA address is aligned on 256 bit.This register is an image of one of MCSPI_TX(i) register corresponding to the channel which have its FIFO enabled.</description>
                        <addressOffset>0x180</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DAFRX</name>
                        <displayName>GSPI_DAFRX</displayName>
                        <description>0x4402 11A0 0x4402 21A0 This register contains the SPI words to received on the serial link when FIFO used and DMA address is aligned on 256 bit.This register is an image of one of MCSPI_RX(i) register corresponding to the channel which have its FIFO enabled. ****************************************************************************</description>
                        <addressOffset>0x1A0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>ARCM</name>
                <version>1.0</version>
                <description>ARCM</description>
                <baseAddress>0x44025000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>CAMCLKCFG</name>
                        <displayName>ARCM_CAMCLKCFG</displayName>
                        <description>CAMCLKCFG</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DIVOFFTIM</name>
                                <description>Configuration of OFF-TIME for dividing PLL clk (240 MHz) in generation of Camera func-clk : &amp;quot;000&amp;quot; - 1 &amp;quot;001&amp;quot; - 2 &amp;quot;010&amp;quot; - 3 &amp;quot;011&amp;quot; - 4 &amp;quot;100&amp;quot; - 5 &amp;quot;101&amp;quot; - 6 &amp;quot;110&amp;quot; - 7 &amp;quot;111&amp;quot; - 8</description>
                                <lsb>8</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>3</lsb>
                                <msb>7</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>DIVONTIM</name>
                                <description>Configuration of ON-TIME for dividing PLL clk (240 MHz) in generation of Camera func-clk : &amp;quot;000&amp;quot; - 1 &amp;quot;001&amp;quot; - 2 &amp;quot;010&amp;quot; - 3 &amp;quot;011&amp;quot; - 4 &amp;quot;100&amp;quot; - 5 &amp;quot;101&amp;quot; - 6 &amp;quot;110&amp;quot; - 7 &amp;quot;111&amp;quot; - 8</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CAMCLKEN</name>
                        <displayName>ARCM_CAMCLKEN</displayName>
                        <description>CAMCLKEN</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>17</lsb>
                                <msb>23</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>DSLPCLKEN</name>
                                <description>CAMERA_DSLP_CLK_ENABLE</description>
                                <lsb>16</lsb>
                                <msb>16</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>NU2</name>
                                <description>NU2</description>
                                <lsb>9</lsb>
                                <msb>15</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SLPCLKEN</name>
                                <description>CAMERA_SLP_CLK_ENABLE</description>
                                <lsb>8</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU3</name>
                                <description>NU3</description>
                                <lsb>1</lsb>
                                <msb>7</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>RUNCLKEN</name>
                                <description>CAMERA_RUN_CLK_ENABLE</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CAMSWRST</name>
                        <displayName>ARCM_CAMSWRST</displayName>
                        <description>CAMSWRST</description>
                        <addressOffset>0x8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ENSTS</name>
                                <description>CAMERA_ENABLED_STATUS</description>
                                <lsb>1</lsb>
                                <msb>1</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SWRST</name>
                                <description>CAMERA_SOFT_RESET</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MCASPCLKEN</name>
                        <displayName>ARCM_MCASPCLKEN</displayName>
                        <description>MCASPCLKEN</description>
                        <addressOffset>0x14</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>17</lsb>
                                <msb>23</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>DSLPCLKEN</name>
                                <description>MCASP_DSLP_CLK_ENABLE</description>
                                <lsb>16</lsb>
                                <msb>16</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>NU2</name>
                                <description>NU2</description>
                                <lsb>9</lsb>
                                <msb>15</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SLPCLKEN</name>
                                <description>MCASP_SLP_CLK_ENABLE</description>
                                <lsb>8</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU3</name>
                                <description>NU3</description>
                                <lsb>1</lsb>
                                <msb>7</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>RUNCLKEN</name>
                                <description>MCASP_RUN_CLK_ENABLE</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MCASPSWRST</name>
                        <displayName>ARCM_MCASPSWRST</displayName>
                        <description>MCASPSWRST</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ENSTS</name>
                                <description>MCASP_ENABLED_STATUS</description>
                                <lsb>1</lsb>
                                <msb>1</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SWRST</name>
                                <description>MCASP_SOFT_RESET</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SDIOMCLKCFG</name>
                        <displayName>ARCM_SDIOMCLKCFG</displayName>
                        <description>SDIOMCLKCFG</description>
                        <addressOffset>0x20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DIVOFFTIM</name>
                                <description>Configuration of OFF-TIME for dividing PLL clk (240 MHz) in generation of MMCHS func-clk : &amp;quot;000&amp;quot; - 1 &amp;quot;001&amp;quot; - 2 &amp;quot;010&amp;quot; - 3 &amp;quot;011&amp;quot; - 4 &amp;quot;100&amp;quot; - 5 &amp;quot;101&amp;quot; - 6 &amp;quot;110&amp;quot; - 7 &amp;quot;111&amp;quot; - 8</description>
                                <lsb>8</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>3</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>DIVONTIM</name>
                                <description>Configuration of ON-TIME for dividing PLL clk (240 MHz) in generation of MMCHS func-clk : &amp;quot;000&amp;quot; - 1 &amp;quot;001&amp;quot; - 2 &amp;quot;010&amp;quot; - 3 &amp;quot;011&amp;quot; - 4 &amp;quot;100&amp;quot; - 5 &amp;quot;101&amp;quot; - 6 &amp;quot;110&amp;quot; - 7 &amp;quot;111&amp;quot; - 8</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SDIOMCLKEN</name>
                        <displayName>ARCM_SDIOMCLKEN</displayName>
                        <description>SDIOMCLKEN</description>
                        <addressOffset>0x24</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>17</lsb>
                                <msb>23</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>DSLPCLKEN</name>
                                <description>MMCHS_DSLP_CLK_ENABLE</description>
                                <lsb>16</lsb>
                                <msb>16</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>NU2</name>
                                <description>NU2</description>
                                <lsb>9</lsb>
                                <msb>15</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SLPCLKEN</name>
                                <description>MMCHS_SLP_CLK_ENABLE</description>
                                <lsb>8</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU3</name>
                                <description>NU3</description>
                                <lsb>1</lsb>
                                <msb>7</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>RUNCLKEN</name>
                                <description>MMCHS_RUN_CLK_ENABLE</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SDIOMSWRST</name>
                        <displayName>ARCM_SDIOMSWRST</displayName>
                        <description>SDIOMSWRST</description>
                        <addressOffset>0x28</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ENSTS</name>
                                <description>MMCHS_ENABLED_STATUS</description>
                                <lsb>1</lsb>
                                <msb>1</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SWRST</name>
                                <description>MMCHS_SOFT_RESET</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APSPICLKCFG</name>
                        <displayName>ARCM_APSPICLKCFG</displayName>
                        <description>APSPICLKCFG</description>
                        <addressOffset>0x2C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>BAUDSEL</name>
                                <description>MCSPI_A1_BAUD_CLK_SEL</description>
                                <lsb>16</lsb>
                                <msb>16</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>11</lsb>
                                <msb>15</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>DIVOFFTIM</name>
                                <description>Configuration of OFF-TIME for dividing PLL clk (240 MHz) in generation of MCSPI_A1 func-clk : &amp;quot;000&amp;quot; - 1 &amp;quot;001&amp;quot; - 2 &amp;quot;010&amp;quot; - 3 &amp;quot;011&amp;quot; - 4 &amp;quot;100&amp;quot; - 5 &amp;quot;101&amp;quot; - 6 &amp;quot;110&amp;quot; - 7 &amp;quot;111&amp;quot; - 8</description>
                                <lsb>8</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU2</name>
                                <description>NU2</description>
                                <lsb>3</lsb>
                                <msb>7</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>DIVONTIM</name>
                                <description>Configuration of ON-TIME for dividing PLL clk (240 MHz) in generation of MCSPI_A1 func-clk : &amp;quot;000&amp;quot; - 1 &amp;quot;001&amp;quot; - 2 &amp;quot;010&amp;quot; - 3 &amp;quot;011&amp;quot; - 4 &amp;quot;100&amp;quot; - 5 &amp;quot;101&amp;quot; - 6 &amp;quot;110&amp;quot; - 7 &amp;quot;111&amp;quot; - 8</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APSPICLKEN</name>
                        <displayName>ARCM_APSPICLKEN</displayName>
                        <description>APSPICLKEN</description>
                        <addressOffset>0x30</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>NU1</name>
                                <description>Not used</description>
                                <lsb>17</lsb>
                                <msb>23</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>DSLPCLKEN</name>
                                <description>MCSPI_A1_DSLP_CLK_ENABLE</description>
                                <lsb>16</lsb>
                                <msb>16</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>NU2</name>
                                <description>Not used</description>
                                <lsb>9</lsb>
                                <msb>15</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SLPCLKEN</name>
                                <description>MCSPI_A1_SLP_CLK_ENABLE</description>
                                <lsb>8</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU3</name>
                                <description>Not used</description>
                                <lsb>1</lsb>
                                <msb>7</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>RUNCLKEN</name>
                                <description>MCSPI_A1_RUN_CLK_ENABLE</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APSPISWRST</name>
                        <displayName>ARCM_APSPISWRST</displayName>
                        <description>APSPISWRST</description>
                        <addressOffset>0x34</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ENSTS</name>
                                <description>MCSPI_A1_ENABLED_STATUS</description>
                                <lsb>1</lsb>
                                <msb>1</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SWRST</name>
                                <description>MCSPI_A1_SOFT_RESET</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DMACLKEN</name>
                        <displayName>ARCM_DMACLKEN</displayName>
                        <description>DMACLKEN</description>
                        <addressOffset>0x48</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DSLPCLKEN</name>
                                <description>UDMA_A_DSLP_CLK_ENABLE</description>
                                <lsb>16</lsb>
                                <msb>16</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU1</name>
                                <description>Not used</description>
                                <lsb>9</lsb>
                                <msb>15</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SLPCLKEN</name>
                                <description>UDMA_A_SLP_CLK_ENABLE</description>
                                <lsb>8</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU2</name>
                                <description>Not used</description>
                                <lsb>1</lsb>
                                <msb>7</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>RUNCLKEN</name>
                                <description>UDMA_A_RUN_CLK_ENABLE</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DMASWRST</name>
                        <displayName>ARCM_DMASWRST</displayName>
                        <description>DMASWRST</description>
                        <addressOffset>0x4C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ENSTS</name>
                                <description>UDMA_A_ENABLED_STATUS</description>
                                <lsb>1</lsb>
                                <msb>1</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SWRST</name>
                                <description>UDMA_A_SOFT_RESET</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO0CLKEN</name>
                        <displayName>ARCM_GPIO0CLKEN</displayName>
                        <description>GPIO0CLKEN</description>
                        <addressOffset>0x50</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DSLPCLKEN</name>
                                <description>GPIO_A_DSLP_CLK_ENABLE</description>
                                <lsb>16</lsb>
                                <msb>16</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>9</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SLPCLKEN</name>
                                <description>GPIO_A_SLP_CLK_ENABLE</description>
                                <lsb>8</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU2</name>
                                <description>NU2</description>
                                <lsb>1</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>RUNCLKEN</name>
                                <description>GPIO_A_RUN_CLK_ENABLE</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO0SWRST</name>
                        <displayName>ARCM_GPIO0SWRST</displayName>
                        <description>GPIO0SWRST</description>
                        <addressOffset>0x54</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ENSTS</name>
                                <description>GPIO_A_ENABLED_STATUS</description>
                                <lsb>1</lsb>
                                <msb>1</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SWRST</name>
                                <description>GPIO_A_SOFT_RESET</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO1CLKEN</name>
                        <displayName>ARCM_GPIO1CLKEN</displayName>
                        <description>GPIO1CLKEN</description>
                        <addressOffset>0x58</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DSLPCLKEN</name>
                                <description>GPIO_B_DSLP_CLK_ENABLE</description>
                                <lsb>16</lsb>
                                <msb>16</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>9</lsb>
                                <msb>15</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SLPCLKEN</name>
                                <description>GPIO_B_SLP_CLK_ENABLE</description>
                                <lsb>8</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU2</name>
                                <description>NU2</description>
                                <lsb>1</lsb>
                                <msb>7</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>RUNCLKEN</name>
                                <description>GPIO_B_RUN_CLK_ENABLE</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO1SWRST</name>
                        <displayName>ARCM_GPIO1SWRST</displayName>
                        <description>GPIO1SWRST</description>
                        <addressOffset>0x5C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ENSTS</name>
                                <description>GPIO_B_ENABLED_STATUS</description>
                                <lsb>1</lsb>
                                <msb>1</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SWRST</name>
                                <description>GPIO_B_SOFT_RESET</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO2CLKEN</name>
                        <displayName>ARCM_GPIO2CLKEN</displayName>
                        <description>GPIO2CLKEN</description>
                        <addressOffset>0x60</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DSLPCLKEN</name>
                                <description>GPIO_C_DSLP_CLK_ENABLE</description>
                                <lsb>16</lsb>
                                <msb>16</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>9</lsb>
                                <msb>15</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SLPCLKEN</name>
                                <description>GPIO_C_SLP_CLK_ENABLE</description>
                                <lsb>8</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU2</name>
                                <description>NU2</description>
                                <lsb>1</lsb>
                                <msb>7</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>RUNCLKEN</name>
                                <description>GPIO_C_RUN_CLK_ENABLE</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO2SWRST</name>
                        <displayName>ARCM_GPIO2SWRST</displayName>
                        <description>GPIO2SWRST</description>
                        <addressOffset>0x64</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ENSTS</name>
                                <description>GPIO_C_ENABLED_STATUS</description>
                                <lsb>1</lsb>
                                <msb>1</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SWRST</name>
                                <description>GPIO_C_SOFT_RESET</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO3CLKEN</name>
                        <displayName>ARCM_GPIO3CLKEN</displayName>
                        <description>GPIO3CLKEN</description>
                        <addressOffset>0x68</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DSLPCLKEN</name>
                                <description>GPIO_D_DSLP_CLK_ENABLE</description>
                                <lsb>16</lsb>
                                <msb>16</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>9</lsb>
                                <msb>15</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SLPCLKEN</name>
                                <description>GPIO_D_SLP_CLK_ENABLE</description>
                                <lsb>8</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU2</name>
                                <description>NU2</description>
                                <lsb>1</lsb>
                                <msb>7</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>RUNCLKEN</name>
                                <description>GPIO_D_RUN_CLK_ENABLE</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO3SWRST</name>
                        <displayName>ARCM_GPIO3SWRST</displayName>
                        <description>GPIO3SWRST</description>
                        <addressOffset>0x6C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ENSTS</name>
                                <description>GPIO_D_ENABLED_STATUS</description>
                                <lsb>1</lsb>
                                <msb>1</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SWRST</name>
                                <description>GPIO_D_SOFT_RESET</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO4CLKEN</name>
                        <displayName>ARCM_GPIO4CLKEN</displayName>
                        <description>GPIO4CLKEN</description>
                        <addressOffset>0x70</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DSLPCLKEN</name>
                                <description>GPIO_E_DSLP_CLK_ENABLE</description>
                                <lsb>16</lsb>
                                <msb>16</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>9</lsb>
                                <msb>15</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SLPCLKEN</name>
                                <description>GPIO_E_SLP_CLK_ENABLE</description>
                                <lsb>8</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU2</name>
                                <description>NU2</description>
                                <lsb>1</lsb>
                                <msb>7</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>RUNCLKEN</name>
                                <description>GPIO_E_RUN_CLK_ENABLE</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO4SWRST</name>
                        <displayName>ARCM_GPIO4SWRST</displayName>
                        <description>GPIO4SWRST</description>
                        <addressOffset>0x74</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ENSTS</name>
                                <description>GPIO_E_ENABLED_STATUS</description>
                                <lsb>1</lsb>
                                <msb>1</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SWRST</name>
                                <description>GPIO_E_SOFT_RESET</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>WDTCLKEN</name>
                        <displayName>ARCM_WDTCLKEN</displayName>
                        <description>WDTCLKEN</description>
                        <addressOffset>0x78</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>BAUDCLKSEL</name>
                                <description>&amp;quot;00&amp;quot; - Sysclk ; &amp;quot;01&amp;quot; - REF_CLK (38.4 MHz) ; &amp;quot;10/11&amp;quot; - Slow_clk</description>
                                <lsb>24</lsb>
                                <msb>25</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>DSLPCLKEN</name>
                                <description>WDOG_A_DSLP_CLK_ENABLE</description>
                                <lsb>16</lsb>
                                <msb>16</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>9</lsb>
                                <msb>15</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SLPCLKEN</name>
                                <description>WDOG_A_SLP_CLK_ENABLE</description>
                                <lsb>8</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU2</name>
                                <description>NU2</description>
                                <lsb>1</lsb>
                                <msb>7</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>RUNCLKEN</name>
                                <description>WDOG_A_RUN_CLK_ENABLE</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>WDTSWRST</name>
                        <displayName>ARCM_WDTSWRST</displayName>
                        <description>WDTSWRST</description>
                        <addressOffset>0x7C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ENSTS</name>
                                <description>WDOG_A_ENABLED_STATUS</description>
                                <lsb>1</lsb>
                                <msb>1</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SWRST</name>
                                <description>WDOG_A_SOFT_RESET</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>UART0CLKEN</name>
                        <displayName>ARCM_UART0CLKEN</displayName>
                        <description>UART0CLKEN</description>
                        <addressOffset>0x80</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>UART0DSLPCLKEN</name>
                                <description>UART_A0_DSLP_CLK_ENABLE</description>
                                <lsb>16</lsb>
                                <msb>16</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>9</lsb>
                                <msb>15</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>UART0SLPCLKEN</name>
                                <description>UART_A0_SLP_CLK_ENABLE</description>
                                <lsb>8</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU2</name>
                                <description>NU2</description>
                                <lsb>1</lsb>
                                <msb>7</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>UART0RCLKEN</name>
                                <description>UART_A0_RUN_CLK_ENABLE</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>UART0SWRST</name>
                        <displayName>ARCM_UART0SWRST</displayName>
                        <description>UART0SWRST</description>
                        <addressOffset>0x84</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ENSTS</name>
                                <description>UART_A0_ENABLED_STATUS</description>
                                <lsb>1</lsb>
                                <msb>1</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SWRST</name>
                                <description>UART_A0_SOFT_RESET</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>UART1CLKEN</name>
                        <displayName>ARCM_UART1CLKEN</displayName>
                        <description>UART1CLKEN</description>
                        <addressOffset>0x88</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DSLPCLKEN</name>
                                <description>UART_A1_DSLP_CLK_ENABLE</description>
                                <lsb>16</lsb>
                                <msb>16</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>9</lsb>
                                <msb>15</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SLPCLKEN</name>
                                <description>UART_A1_SLP_CLK_ENABLE</description>
                                <lsb>8</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU2</name>
                                <description>NU2</description>
                                <lsb>1</lsb>
                                <msb>7</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>RUNCLKEN</name>
                                <description>UART_A1_RUN_CLK_ENABLE</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>UART1SWRST</name>
                        <displayName>ARCM_UART1SWRST</displayName>
                        <description>UART1SWRST</description>
                        <addressOffset>0x8C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ENSTS</name>
                                <description>UART_A1_ENABLED_STATUS</description>
                                <lsb>1</lsb>
                                <msb>1</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SWRST</name>
                                <description>UART_A1_SOFT_RESET</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPT0CLKEN</name>
                        <displayName>ARCM_GPT0CLKEN</displayName>
                        <description>GPT0CLKEN</description>
                        <addressOffset>0x90</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DSLPCLKEN</name>
                                <description>GPT_A0_DSLP_CLK_ENABLE</description>
                                <lsb>16</lsb>
                                <msb>16</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>9</lsb>
                                <msb>15</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SLPCLKEN</name>
                                <description>GPT_A0_SLP_CLK_ENABLE</description>
                                <lsb>8</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU2</name>
                                <description>NU2</description>
                                <lsb>1</lsb>
                                <msb>7</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>RUNCLKEN</name>
                                <description>GPT_A0_RUN_CLK_ENABLE</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPT0SWRST</name>
                        <displayName>ARCM_GPT0SWRST</displayName>
                        <description>GPT0SWRST</description>
                        <addressOffset>0x94</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ENSTS</name>
                                <description>GPT_A0_ENABLED_STATUS</description>
                                <lsb>1</lsb>
                                <msb>1</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SWRST</name>
                                <description>GPT_A0_SOFT_RESET</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPT1CLKEN</name>
                        <displayName>ARCM_GPT1CLKEN</displayName>
                        <description>GPT1CLKEN</description>
                        <addressOffset>0x98</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DSLPCLKEN</name>
                                <description>GPT_A1_DSLP_CLK_ENABLE</description>
                                <lsb>16</lsb>
                                <msb>16</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>9</lsb>
                                <msb>15</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SLPCLKEN</name>
                                <description>GPT_A1_SLP_CLK_ENABLE</description>
                                <lsb>8</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU2</name>
                                <description>NU2</description>
                                <lsb>1</lsb>
                                <msb>7</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>RUNCLKEN</name>
                                <description>GPT_A1_RUN_CLK_ENABLE</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPT1SWRST</name>
                        <displayName>ARCM_GPT1SWRST</displayName>
                        <description>GPT1SWRST</description>
                        <addressOffset>0x9C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ENSTS</name>
                                <description>GPT_A1_ENABLED_STATUS</description>
                                <lsb>1</lsb>
                                <msb>1</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SWRST</name>
                                <description>GPT_A1_SOFT_RESET</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPT2CLKEN</name>
                        <displayName>ARCM_GPT2CLKEN</displayName>
                        <description>GPT2CLKEN</description>
                        <addressOffset>0xA0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DSLPCLKEN</name>
                                <description>GPT_A2_DSLP_CLK_ENABLE</description>
                                <lsb>16</lsb>
                                <msb>16</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>9</lsb>
                                <msb>15</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SLPCLKEN</name>
                                <description>GPT_A2_SLP_CLK_ENABLE</description>
                                <lsb>8</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU2</name>
                                <description>NU2</description>
                                <lsb>1</lsb>
                                <msb>7</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>RUNCLKEN</name>
                                <description>GPT_A2_RUN_CLK_ENABLE</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPT2SWRST</name>
                        <displayName>ARCM_GPT2SWRST</displayName>
                        <description>GPT2SWRST</description>
                        <addressOffset>0xA4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ENSTS</name>
                                <description>GPT_A2_ENABLED_STATUS</description>
                                <lsb>1</lsb>
                                <msb>1</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SWRST</name>
                                <description>GPT_A2_SOFT_RESET</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPT3CLKEN</name>
                        <displayName>ARCM_GPT3CLKEN</displayName>
                        <description>GPT3CLKEN</description>
                        <addressOffset>0xA8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DSLPCLKEN</name>
                                <description>GPT_A3_DSLP_CLK_ENABLE</description>
                                <lsb>16</lsb>
                                <msb>16</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>9</lsb>
                                <msb>15</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SLPCLKEN</name>
                                <description>GPT_A3_SLP_CLK_ENABLE</description>
                                <lsb>8</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU2</name>
                                <description>NU2</description>
                                <lsb>1</lsb>
                                <msb>7</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>RUNCLKEN</name>
                                <description>GPT_A3_RUN_CLK_ENABLE</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPT3SWRST</name>
                        <displayName>ARCM_GPT3SWRST</displayName>
                        <description>GPT3SWRST</description>
                        <addressOffset>0xAC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ENSTS</name>
                                <description>GPT_A3_ENABLED_STATUS</description>
                                <lsb>1</lsb>
                                <msb>1</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SWRST</name>
                                <description>GPT_A3_SOFT_RESET</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MCASPCLKCFG0</name>
                        <displayName>ARCM_MCASPCLKCFG0</displayName>
                        <description>MCASPCLKCFG0</description>
                        <addressOffset>0xB0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DIVISR</name>
                                <description>MCASP_FRAC_DIV_DIVISOR</description>
                                <lsb>16</lsb>
                                <msb>25</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>FRACTN</name>
                                <description>MCASP_FRAC_DIV_FRACTION</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MCASPCLKCFG1</name>
                        <displayName>ARCM_MCASPCLKCFG1</displayName>
                        <description>MCASPCLKCFG1</description>
                        <addressOffset>0xB4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DIVIDRSWRST</name>
                                <description>MCASP_FRAC_DIV_SOFT_RESET</description>
                                <lsb>16</lsb>
                                <msb>16</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SPARE</name>
                                <description>MCASP_FRAC_DIV_PERIOD</description>
                                <lsb>0</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>I2CCLKEN</name>
                        <displayName>ARCM_I2CCLKEN</displayName>
                        <description>I2CCLKEN</description>
                        <addressOffset>0xD8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DSLPCLKEN</name>
                                <description>I2C_DSLP_CLK_ENABLE</description>
                                <lsb>16</lsb>
                                <msb>16</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>9</lsb>
                                <msb>15</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SLPCLKEN</name>
                                <description>I2C_SLP_CLK_ENABLE</description>
                                <lsb>8</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU2</name>
                                <description>NU2</description>
                                <lsb>1</lsb>
                                <msb>7</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>RUNCLKEN</name>
                                <description>I2C_RUN_CLK_ENABLE</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>I2CSWRST</name>
                        <displayName>ARCM_I2CSWRST</displayName>
                        <description>I2CSWRST</description>
                        <addressOffset>0xDC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ENSTS</name>
                                <description>I2C_ENABLED_STATUS</description>
                                <lsb>1</lsb>
                                <msb>1</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>SWRST</name>
                                <description>I2C_SOFT_RESET</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>LPDSREQ</name>
                        <displayName>ARCM_LPDSREQ</displayName>
                        <description>LPDSREQ</description>
                        <addressOffset>0xE4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>LPDSREQ</name>
                                <description>APPS_LPDS_REQ</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TURBOREQ</name>
                        <displayName>ARCM_TURBOREQ</displayName>
                        <description>TURBOREQ</description>
                        <addressOffset>0xEC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TURBOREQ</name>
                                <description>APPS_TURBO_REQ</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DSLPWAKECFG</name>
                        <displayName>ARCM_DSLPWAKECFG</displayName>
                        <description>DSLPWAKECFG</description>
                        <addressOffset>0x108</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>EXITDSLPBYNWPEN</name>
                                <description>DSLP_WAKE_FROM_NWP_ENABLE</description>
                                <lsb>1</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>EXITDSLPBYTMREN</name>
                                <description>DLSP_WAKE_FROM_TIMER_ENABLE</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DSLPTIMRCFG</name>
                        <displayName>ARCM_DSLPTIMRCFG</displayName>
                        <description>DSLPTIMRCFG</description>
                        <addressOffset>0x10C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DSLP_WAKE_TIMER_OPP_CFG</name>
                                <description>Configuration (in slow_clks) which says when to request for OPP during deep-sleep exit</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>DSLP_WAKE_TIMER_WAKE_CFG</name>
                                <description>Configuration (in slow_clks) which says when to request for WAKE during deep-sleep exit</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SLPWAKEEN</name>
                        <displayName>ARCM_SLPWAKEEN</displayName>
                        <description>SLPWAKEEN</description>
                        <addressOffset>0x110</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>EITBYNWP</name>
                                <description>SLP_WAKE_FROM_NWP_ENABLE</description>
                                <lsb>1</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>EXITBYTIMR</name>
                                <description>SLP_WAKE_TIMER_ENABLE</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SLPTMRCFG</name>
                        <displayName>ARCM_SLPTMRCFG</displayName>
                        <description>SLPTMRCFG</description>
                        <addressOffset>0x114</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TMRCFG</name>
                                <description>SLP_WAKE_TIMER_CFG</description>
                                <lsb>0</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>WAKENWP</name>
                        <displayName>ARCM_WAKENWP</displayName>
                        <description>WAKENWP</description>
                        <addressOffset>0x118</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>WAKENWP</name>
                                <description>APPS_TO_NWP_WAKEUP_REQUEST</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>RCM_IS</name>
                        <displayName>ARCM_RCM_IS</displayName>
                        <description>RCM_IS</description>
                        <addressOffset>0x120</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>WAKETIMRIRQ</name>
                                <description>WAKETIMRIRQ</description>
                                <lsb>14</lsb>
                                <msb>14</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>PLLLOCK</name>
                                <description>PLLLOCK</description>
                                <lsb>12</lsb>
                                <msb>12</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>EXITDSLPBYTMR</name>
                                <description>EXITDSLPBYTMR</description>
                                <lsb>3</lsb>
                                <msb>3</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>EXITSLPBYTMR</name>
                                <description>EXITSLPBYTMR</description>
                                <lsb>2</lsb>
                                <msb>2</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>EXITDSLPBYNWP</name>
                                <description>EXITDSLPBYNWP</description>
                                <lsb>1</lsb>
                                <msb>1</msb>
                                <access>read-only</access>
                            </field>
                            <field>
                                <name>EXITSLPBYNWP</name>
                                <description>EXITSLPBYNWP</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-only</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>RCM_IEN</name>
                        <displayName>ARCM_RCM_IEN</displayName>
                        <description>RCM_IEN</description>
                        <addressOffset>0x124</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>WAKETIMERIRQ</name>
                                <description>WAKETIMERIRQ</description>
                                <lsb>2</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>PLLLOCKIRQ</name>
                                <description>PLLLOCKIRQ</description>
                                <lsb>0</lsb>
                                <msb>0</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>APPS_CONFIG</name>
                <version>1.0</version>
                <description>APPS_CONFIG</description>
                <baseAddress>0x44026000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>PATCH_TRAP_ADDR_REG</name>
                        <displayName>APPS_CONFIG_PATCH_TRAP_ADDR_REG</displayName>
                        <description>Patch trap address Register array</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PATCH_TRAP_EN_REG</name>
                        <displayName>APPS_CONFIG_PATCH_TRAP_EN_REG</displayName>
                        <description>PATCH_TRAP_EN_REG</description>
                        <addressOffset>0x78</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PATCH_TRAP_EN</name>
                                <description>When PATCH_TRAP_EN[n] is set bus fault is generated for the address PATCH_TRAP_ADD[n][31:0] from Idcode bus. The exception routine should take care to jump to the location where the patch correspond to this address is kept.</description>
                                <lsb>0</lsb>
                                <msb>29</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>FAULT_STATUS_REG</name>
                        <displayName>APPS_CONFIG_FAULT_STATUS_REG</displayName>
                        <description>FAULT_STATUS_REG</description>
                        <addressOffset>0x7C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PATCH_ERR_INDEX</name>
                                <description>This field shows because of which patch trap address the bus_fault is generated. If the PATCH_ERR bit is set, then it means the bus fault is generated because of PATCH_TRAP_ADDR_REG[2^PATCH_ERR_INDEX]</description>
                                <lsb>1</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEMSS_WR_ERR_CLR_REG</name>
                        <displayName>APPS_CONFIG_MEMSS_WR_ERR_CLR_REG</displayName>
                        <description>MEMSS_WR_ERR_CLR_REG</description>
                        <addressOffset>0x80</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEMSS_WR_ERR_ADDR_REG</name>
                        <displayName>APPS_CONFIG_MEMSS_WR_ERR_ADDR_REG</displayName>
                        <description>MEMSS_WR_ERR_ADDR_REG</description>
                        <addressOffset>0x84</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DMA_DONE_INT_MASK</name>
                        <displayName>APPS_CONFIG_DMA_DONE_INT_MASK</displayName>
                        <description>DMA_DONE_INT_MASK</description>
                        <addressOffset>0x8C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ADC_WR_DMA_DONE_INT_MASK</name>
                                <description>1= disable corresponding interrupt;0 = interrupt enabled bit 14: ADC channel 7 interrupt enable/disable bit 13: ADC channel 5 interrupt enable/disable bit 12: ADC channel 3 interrupt enable/disable bit 11: ADC channel 1 interrupt enable/disable</description>
                                <lsb>12</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DMA_DONE_INT_MASK_SET</name>
                        <displayName>APPS_CONFIG_DMA_DONE_INT_MASK_SET</displayName>
                        <description>DMA_DONE_INT_MASK_SET</description>
                        <addressOffset>0x90</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ADC_WR_DMA_DONE_INT_MASK_SET</name>
                                <description>write 1 to set mask of the corresponding DMA DONE IRQ;0 = no effect bit 14: ADC channel 7 DMA Done IRQ bit 13: ADC channel 5 DMA Done IRQ bit 12: ADC channel 3 DMA Done IRQ bit 11: ADC channel 1 DMA Done IRQ</description>
                                <lsb>12</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DMA_DONE_INT_MASK_CLR</name>
                        <displayName>APPS_CONFIG_DMA_DONE_INT_MASK_CLR</displayName>
                        <description>DMA_DONE_INT_MASK_CLR</description>
                        <addressOffset>0x94</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ADC_WR_DMA_DONE_INT_MASK_CLR</name>
                                <description>write 1 to clear mask of the corresponding DMA DONE IRQ;0 = no effect bit 14: ADC channel 7 DMA Done IRQ mask bit 13: ADC channel 5 DMA Done IRQ mask bit 12: ADC channel 3 DMA Done IRQ mask bit 11: ADC channel 1 DMA Done IRQ mask</description>
                                <lsb>12</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DMA_DONE_INT_STS_CLR</name>
                        <displayName>APPS_CONFIG_DMA_DONE_INT_STS_CLR</displayName>
                        <description>DMA_DONE_INT_STS_CLR</description>
                        <addressOffset>0x98</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DMA_DONE_INT_ACK</name>
                        <displayName>APPS_CONFIG_DMA_DONE_INT_ACK</displayName>
                        <description>DMA_DONE_INT_ACK</description>
                        <addressOffset>0x9C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ADC_WR_DMA_DONE_INT_ACK</name>
                                <description>write 1 to clear corresponding interrupt; 0 = no effect; bit 14: ADC channel 7 DMA Done IRQ bit 13: ADC channel 5 DMA Done IRQ bit 12: ADC channel 3 DMA Done IRQ bit 11: ADC channel 1 DMA Done IRQ</description>
                                <lsb>12</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DMA_DONE_INT_STS_MASKED</name>
                        <displayName>APPS_CONFIG_DMA_DONE_INT_STS_MASKED</displayName>
                        <description>DMA_DONE_INT_STS_MASKED</description>
                        <addressOffset>0xA0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ADC_WR_DMA_DONE_INT_STS_MASKED</name>
                                <description>1= corresponding interrupt is active and not masked. read is non-destructive;0 = corresponding interrupt is inactive or masked by DMA_DONE_INT mask bit 14: ADC channel 7 DMA Done IRQ bit 13: ADC channel 5 DMA Done IRQ bit 12: ADC channel 3 DMA Done IRQ bit 11: ADC channel 1 DMA Done IRQ</description>
                                <lsb>12</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DMA_DONE_INT_STS_RAW</name>
                        <displayName>APPS_CONFIG_DMA_DONE_INT_STS_RAW</displayName>
                        <description>DMA_DONE_INT_STS_RAW</description>
                        <addressOffset>0xA4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ADC_WR_DMA_DONE_INT_STS_RAW</name>
                                <description>1= corresponding interrupt is active. read is non-destructive;0 = corresponding interrupt is inactive bit 14: ADC channel 7 DMA Done IRQ bit 13: ADC channel 5 DMA Done IRQ bit 12: ADC channel 3 DMA Done IRQ bit 11: ADC channel 1 DMA Done IRQ</description>
                                <lsb>12</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>FAULT_STATUS_CLR_REG</name>
                        <displayName>APPS_CONFIG_FAULT_STATUS_CLR_REG</displayName>
                        <description>FAULT_STATUS_CLR_REG</description>
                        <addressOffset>0xA8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RESERVD_REG_0</name>
                        <displayName>APPS_CONFIG_RESERVD_REG_0</displayName>
                        <description>RESERVD_REG_0</description>
                        <addressOffset>0xAC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>GPT_TRIG_SEL</name>
                        <displayName>APPS_CONFIG_GPT_TRIG_SEL</displayName>
                        <description>GPT_TRIG_SEL</description>
                        <addressOffset>0xB0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>GPT_TRIG_SEL</name>
                                <description>This bit is implemented for GPT trigger mode select. GPT IP support 2 modes: RTC mode and external trigger. When this bit is set to logic '1': enable external trigger mode for APPS GPT CP0 and CP1 pin. bit 0: when set '1' enable external GPT trigger 0 on GPIO0 CP0 pin else RTC mode is selected. bit 1: when set '1' enable external GPT trigger 1 on GPIO0 CP1 pin else RTC mode is selected. bit 2: when set '1' enable external GPT trigger 2 on GPIO1 CP0 pin else RTC mode is selected. bit 3: when set '1' enable external GPT trigger 3 on GPIO1 CP1 pin else RTC mode is selected. bit 4: when set '1' enable external GPT trigger 4 on GPIO2 CP0 pin else RTC mode is selected. bit 5: when set '1' enable external GPT trigger 5 on GPIO2 CP1 pin else RTC mode is selected. bit 6: when set '1' enable external GPT trigger 6 on GPIO3 CP0 pin else RTC mode is selected. bit 7: when set '1' enable external GPT trigger 7 on GPIO3 CP1 pin else RTC mode is selected.</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TOP_DIE_SPARE_DIN_REG</name>
                        <displayName>APPS_CONFIG_TOP_DIE_SPARE_DIN_REG</displayName>
                        <description>TOP_DIE_SPARE_DIN_REG</description>
                        <addressOffset>0xB4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>D2D_SPARE_DIN</name>
                                <description>Capture data from d2d_spare pads</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TOP_DIE_SPARE_DOUT_REG</name>
                        <displayName>APPS_CONFIG_TOP_DIE_SPARE_DOUT_REG</displayName>
                        <description>TOP_DIE_SPARE_DOUT_REG</description>
                        <addressOffset>0xB8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>D2D_SPARE_DOUT</name>
                                <description>Send data to d2d_spare pads - eventually this will get registered in top die</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>GPRCM</name>
                <version>1.0</version>
                <description>GPRCM</description>
                <baseAddress>0x4402D000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>APPS_SOFT_RESET</name>
                        <displayName>GPRCM_APPS_SOFT_RESET</displayName>
                        <description>APPS_SOFT_RESET</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_LPDS_WAKEUP_CFG</name>
                        <displayName>GPRCM_APPS_LPDS_WAKEUP_CFG</displayName>
                        <description>APPS_LPDS_WAKEUP_CFG</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>APPS_LPDS_WAKEUP_CFG</name>
                                <description>Mask for LPDS Wakeup interrupt : [7] - Host IRQ from NWP [6] - NWP_LPDS_Wake_irq (TRUE_LPDS) [5] - NWP Wake-request to APPS [4] - GPIO [3:1] - Reserved [0] - LPDS Wakeup-timer</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APPS_LPDS_WAKEUP_SRC</name>
                        <displayName>GPRCM_APPS_LPDS_WAKEUP_SRC</displayName>
                        <description>APPS_LPDS_WAKEUP_SRC</description>
                        <addressOffset>0x8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>APPS_LPDS_WAKEUP_SRC</name>
                                <description>Indicates the cause for wakeup from LPDS : [7] - Host IRQ from NWP [6] - NWP_LPDS_Wake_irq (TRUE_LPDS) [5] - NWP Wake-request to APPS [4] - GPIO [3:1] - Reserved [0] - LPDS Wakeup-timer</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APPS_RESET_CAUSE</name>
                        <displayName>GPRCM_APPS_RESET_CAUSE</displayName>
                        <description>APPS_RESET_CAUSE</description>
                        <addressOffset>0xC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>APPS_RESET_CAUSE</name>
                                <description>Indicates the reset cause for APPS : &amp;quot;0000&amp;quot; - Wake from HIB/OFF mode; &amp;quot;0001&amp;quot; - Wake from LPDS ; &amp;quot;0010&amp;quot; - Reserved ; &amp;quot;0011&amp;quot; - Soft-reset0 (Only APPS Cortex-sysrstn is asserted); &amp;quot;0100&amp;quot; - Soft-reset1 (APPS Cortex-sysrstn and APPS peripherals are reset); &amp;quot;0101&amp;quot; - WDOG0 (APPS Cortex-sysrstn and APPS peripherals are reset); &amp;quot;0110&amp;quot; - MCU Soft-reset (APPS + NWP Cortex-sysrstn + Peripherals are reset); &amp;quot;0111&amp;quot; - Secure Init done (Indication that reset has happened after DevInit); &amp;quot;1000&amp;quot; - Dev Mode Patch Init done (During development mode, patch downloading and Cortex re-vectoring is completed)</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APPS_LPDS_WAKETIME_OPP_CFG</name>
                        <displayName>GPRCM_APPS_LPDS_WAKETIME_OPP_CFG</displayName>
                        <description>APPS_LPDS_WAKETIME_OPP_CFG</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_SRAM_DSLP_CFG</name>
                        <displayName>GPRCM_APPS_SRAM_DSLP_CFG</displayName>
                        <description>APPS_SRAM_DSLP_CFG</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>APPS_SRAM_DSLP_CFG</name>
                                <description>Configuration of APPS Memories during Deep-sleep : 0 - SRAMs are OFF ; 1 - SRAMs are Retained. APPS SRAM Cluster information : [0] - 1st column in MEMSS (Applicable only when owned by APPS); [1] - 2nd column in MEMSS (Applicable only when owned by APPS); [2] - 3rd column in MEMSS (Applicable only when owned by APPS) ; [3] - 4th column in MEMSS (Applicable only when owned by APPS) ; [16] - MCU-PD - Apps cluster 0 (TBD); [19:18] - Reserved.</description>
                                <lsb>0</lsb>
                                <msb>19</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APPS_SRAM_LPDS_CFG</name>
                        <displayName>GPRCM_APPS_SRAM_LPDS_CFG</displayName>
                        <description>APPS_SRAM_LPDS_CFG</description>
                        <addressOffset>0x1C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>APPS_SRAM_LPDS_CFG</name>
                                <description>Configuration of APPS Memories during LPDS : 0 - SRAMs are OFF ; 1 - SRAMs are Retained. APPS SRAM Cluster information : [0] - 1st column in MEMSS (Applicable only when owned by APPS); [1] - 2nd column in MEMSS (Applicable only when owned by APPS); [2] - 3rd column in MEMSS (Applicable only when owned by APPS) ; [3] - 4th column in MEMSS (Applicable only when owned by APPS) ; [16] - MCU-PD - Apps cluster 0 (TBD); [19:18] - Reserved.</description>
                                <lsb>0</lsb>
                                <msb>19</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APPS_LPDS_WAKETIME_WAKE_CFG</name>
                        <displayName>GPRCM_APPS_LPDS_WAKETIME_WAKE_CFG</displayName>
                        <description>APPS_LPDS_WAKETIME_WAKE_CFG</description>
                        <addressOffset>0x20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TOP_DIE_ENABLE</name>
                        <displayName>GPRCM_TOP_DIE_ENABLE</displayName>
                        <description>TOP_DIE_ENABLE</description>
                        <addressOffset>0x100</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TOP_DIE_PWR_PS</name>
                                <description>TOP_DIE_PWR_PS</description>
                                <lsb>8</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TOP_DIE_ENABLE_PARAMETERS</name>
                        <displayName>GPRCM_TOP_DIE_ENABLE_PARAMETERS</displayName>
                        <description>TOP_DIE_ENABLE_PARAMETERS</description>
                        <addressOffset>0x104</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>FLASH_3P3_RSTN2D2D_POR_RSTN</name>
                                <description>Configuration (in slow_clks) for number of clks between Flash-3p3-rstn to D2D POR Resetn.</description>
                                <lsb>28</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TOP_DIE_SW_EN2TOP_DIE_FLASH_3P3_RSTN</name>
                                <description>Configuration (in slow_clks) for number of clks between Top-die Switch-Enable and Top-die Flash 3p3 Reset removal</description>
                                <lsb>16</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TOP_DIE_POR_RSTN2BOTT_DIE_FMC_RSTN</name>
                                <description>Configuration (in slow_clks) for number of clks between D2D POR Reset removal and bottom die FMC reset removal</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MCU_GLOBAL_SOFT_RESET</name>
                        <displayName>GPRCM_MCU_GLOBAL_SOFT_RESET</displayName>
                        <description>MCU_GLOBAL_SOFT_RESET</description>
                        <addressOffset>0x108</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ADC_CLK_CONFIG</name>
                        <displayName>GPRCM_ADC_CLK_CONFIG</displayName>
                        <description>ADC_CLK_CONFIG</description>
                        <addressOffset>0x10C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ADC_CLKGEN_OFF_TIME</name>
                                <description>Configuration (in number of 38.4 MHz clks) for the OFF-Time in generation of ADC_CLK</description>
                                <lsb>6</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>ADC_CLKGEN_ON_TIME</name>
                                <description>Configuration (in number of 38.4 MHz clks) for the ON-Time in generation of ADC_CLK</description>
                                <lsb>1</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APPS_GPIO_WAKE_CONF</name>
                        <displayName>GPRCM_APPS_GPIO_WAKE_CONF</displayName>
                        <description>APPS_GPIO_WAKE_CONF</description>
                        <addressOffset>0x110</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>APPS_GPIO_WAKE_CONF</name>
                                <description>&amp;quot;00&amp;quot; - Wake on Level0 on selected GPIO pin (GPIO is selected inside the HIB3p3 module); &amp;quot;01&amp;quot; - Wakeup on fall-edge of GPIO pin.</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>EN_NWP_BOOT_WO_DEVINIT</name>
                        <displayName>GPRCM_EN_NWP_BOOT_WO_DEVINIT</displayName>
                        <description>EN_NWP_BOOT_WO_DEVINIT</description>
                        <addressOffset>0x114</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_HCLK_DIV_CFG</name>
                        <displayName>GPRCM_MEM_HCLK_DIV_CFG</displayName>
                        <description>MEM_HCLK_DIV_CFG</description>
                        <addressOffset>0x118</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_HCLK_DIV_CFG</name>
                                <description>Division configuration for HCLKDIVOUT : &amp;quot;000&amp;quot; - Divide by 1 ; &amp;quot;001&amp;quot; - Divide by 2 ; &amp;quot;010&amp;quot; - Divide by 3 ; &amp;quot;011&amp;quot; - Divide by 4 ; &amp;quot;100&amp;quot; - Divide by 5 ; &amp;quot;101&amp;quot; - Divide by 6 ; &amp;quot;110&amp;quot; - Divide by 7 ; &amp;quot;111&amp;quot; - Divide by 8</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_SYSCLK_DIV_CFG</name>
                        <displayName>GPRCM_MEM_SYSCLK_DIV_CFG</displayName>
                        <description>MEM_SYSCLK_DIV_CFG</description>
                        <addressOffset>0x11C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SYSCLK_DIV_OFF_TIME</name>
                                <description>MEM_SYSCLK_DIV_OFF_TIME</description>
                                <lsb>3</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_SYSCLK_DIV_ON_TIME</name>
                                <description>MEM_SYSCLK_DIV_ON_TIME</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APLLMCS_LOCK_TIME_CONF</name>
                        <displayName>GPRCM_APLLMCS_LOCK_TIME_CONF</displayName>
                        <description>APLLMCS_LOCK_TIME_CONF</description>
                        <addressOffset>0x120</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_APLLMCS_WLAN_LOCK_TIME</name>
                                <description>MEM_APLLMCS_WLAN_LOCK_TIME</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_APLLMCS_MCU_LOCK_TIME</name>
                                <description>MEM_APLLMCS_MCU_LOCK_TIME</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>NWP_SOFT_RESET</name>
                        <displayName>GPRCM_NWP_SOFT_RESET</displayName>
                        <description>NWP_SOFT_RESET</description>
                        <addressOffset>0x400</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>NWP_LPDS_WAKEUP_CFG</name>
                        <displayName>GPRCM_NWP_LPDS_WAKEUP_CFG</displayName>
                        <description>NWP_LPDS_WAKEUP_CFG</description>
                        <addressOffset>0x404</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>NWP_LPDS_WAKEUP_CFG</name>
                                <description>Mask for LPDS Wakeup interrupt : 7 - WLAN Host Interrupt ; 6 - WLAN to NWP Wake request ; 5 - APPS to NWP Wake request; 4 - GPIO Wakeup ; 3 - Autonomous UART Wakeup ; 2 - SSDIO Wakeup ; 1 - Autonomous SPI Wakeup ; 0 - LPDS Wakeup-timer</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>NWP_LPDS_WAKEUP_SRC</name>
                        <displayName>GPRCM_NWP_LPDS_WAKEUP_SRC</displayName>
                        <description>NWP_LPDS_WAKEUP_SRC</description>
                        <addressOffset>0x408</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>NWP_LPDS_WAKEUP_SRC</name>
                                <description>Indicates the cause for NWP LPDS-Wakeup : 7 - WLAN Host Interrupt ; 6 - WLAN to NWP Wake request ; 5 - APPS to NWP Wake request; 4 - GPIO Wakeup ; 3 - Autonomous UART Wakeup ; 2 - SSDIO Wakeup ; 1 - Autonomous SPI Wakeup ; 0 - LPDS Wakeup-timer</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>NWP_RESET_CAUSE</name>
                        <displayName>GPRCM_NWP_RESET_CAUSE</displayName>
                        <description>NWP_RESET_CAUSE</description>
                        <addressOffset>0x40C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>NWP_RESET_CAUSE</name>
                                <description>Indicates the reset cause for NWP : &amp;quot;0000&amp;quot; - Wake from HIB/OFF mode; &amp;quot;0001&amp;quot; - Wake from LPDS ; &amp;quot;0010&amp;quot; - Reserved ; &amp;quot;0011&amp;quot; - Soft-reset0 (Only NWP Cortex-sysrstn is asserted); &amp;quot;0100&amp;quot; - Soft-reset1 (NWP Cortex-sysrstn and NWP peripherals are reset); &amp;quot;0101&amp;quot; - WDOG0 (NWP Cortex-sysrstn and NWP peripherals are reset); &amp;quot;0110&amp;quot; - MCU Soft-reset (APPS + NWP Cortex-sysrstn + Peripherals are reset); &amp;quot;0111&amp;quot; - SSDIO Function2 reset (Only Cortex-sysrstn is asserted) ; &amp;quot;1000&amp;quot; - Reset due to WDOG of APPS (NWP Cortex-sysrstn and NWP peripherals are reset);</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>NWP_LPDS_WAKETIME_OPP_CFG</name>
                        <displayName>GPRCM_NWP_LPDS_WAKETIME_OPP_CFG</displayName>
                        <description>NWP_LPDS_WAKETIME_OPP_CFG</description>
                        <addressOffset>0x410</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>NWP_SRAM_DSLP_CFG</name>
                        <displayName>GPRCM_NWP_SRAM_DSLP_CFG</displayName>
                        <description>NWP_SRAM_DSLP_CFG</description>
                        <addressOffset>0x418</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>NWP_SRAM_DSLP_CFG</name>
                                <description>Configuration of NWP Memories during DSLP : 0 - SRAMs are OFF ; 1 - SRAMs are Retained. NWP SRAM Cluster information : [2] - 3rd column in MEMSS (Applicable only when owned by NWP) ; [3] - 4th column in MEMSS (Applicable only when owned by NWP) ; [4] - 5th column in MEMSS (Applicable only when owned by NWP) ; [5] - 6th column in MEMSS (Applicable only when owned by NWP) ; [6] - 7th column in MEMSS (Applicable only when owned by NWP) ; [7] - 8th column in MEMSS (Applicable only when owned by NWP) ; [8] - 9th column in MEMSS (Applicable only when owned by NWP) ; [9] - 10th column in MEMSS (Applicable only when owned by NWP) ; [10] - 11th column in MEMSS (Applicable only when owned by NWP) ; [11] - 12th column in MEMSS (Applicable only when owned by NWP) ; [12] - 13th column in MEMSS (Applicable only when owned by NWP) ; [13] - 14th column in MEMSS (Applicable only when owned by NWP) ; [14] - 15th column in MEMSS (Applicable only when owned by NWP) ; [19:18] - Reserved.</description>
                                <lsb>0</lsb>
                                <msb>19</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>NWP_SRAM_LPDS_CFG</name>
                        <displayName>GPRCM_NWP_SRAM_LPDS_CFG</displayName>
                        <description>NWP_SRAM_LPDS_CFG</description>
                        <addressOffset>0x41C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>NWP_SRAM_LPDS_CFG</name>
                                <description>Configuration of NWP Memories during LPDS : 0 - SRAMs are OFF ; 1 - SRAMs are Retained. NWP SRAM Cluster information : [2] - 3rd column in MEMSS (Applicable only when owned by NWP) ; [3] - 4th column in MEMSS (Applicable only when owned by NWP) ; [4] - 5th column in MEMSS (Applicable only when owned by NWP) ; [5] - 6th column in MEMSS (Applicable only when owned by NWP) ; [6] - 7th column in MEMSS (Applicable only when owned by NWP) ; [7] - 8th column in MEMSS (Applicable only when owned by NWP) ; [8] - 9th column in MEMSS (Applicable only when owned by NWP) ; [9] - 10th column in MEMSS (Applicable only when owned by NWP) ; [10] - 11th column in MEMSS (Applicable only when owned by NWP) ; [11] - 12th column in MEMSS (Applicable only when owned by NWP) ; [12] - 13th column in MEMSS (Applicable only when owned by NWP) ; [13] - 14th column in MEMSS (Applicable only when owned by NWP) ; [14] - 15th column in MEMSS (Applicable only when owned by NWP) ; [19:18] - Reserved.</description>
                                <lsb>0</lsb>
                                <msb>19</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>NWP_LPDS_WAKETIME_WAKE_CFG</name>
                        <displayName>GPRCM_NWP_LPDS_WAKETIME_WAKE_CFG</displayName>
                        <description>NWP_LPDS_WAKETIME_WAKE_CFG</description>
                        <addressOffset>0x420</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>NWP_AUTONMS_SPI_MASTER_SEL</name>
                        <displayName>GPRCM_NWP_AUTONMS_SPI_MASTER_SEL</displayName>
                        <description>NWP_AUTONMS_SPI_MASTER_SEL</description>
                        <addressOffset>0x424</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>F</name>
                                <description>F</description>
                                <lsb>17</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>NWP_AUTONMS_SPI_IDLE_REQ</name>
                        <displayName>GPRCM_NWP_AUTONMS_SPI_IDLE_REQ</displayName>
                        <description>NWP_AUTONMS_SPI_IDLE_REQ</description>
                        <addressOffset>0x428</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>WLAN_TO_NWP_WAKE_REQUEST</name>
                        <displayName>GPRCM_WLAN_TO_NWP_WAKE_REQUEST</displayName>
                        <description>WLAN_TO_NWP_WAKE_REQUEST</description>
                        <addressOffset>0x42C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>NWP_TO_WLAN_WAKE_REQUEST</name>
                        <displayName>GPRCM_NWP_TO_WLAN_WAKE_REQUEST</displayName>
                        <description>NWP_TO_WLAN_WAKE_REQUEST</description>
                        <addressOffset>0x430</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>NWP_GPIO_WAKE_CONF</name>
                        <displayName>GPRCM_NWP_GPIO_WAKE_CONF</displayName>
                        <description>NWP_GPIO_WAKE_CONF</description>
                        <addressOffset>0x434</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>NWP_GPIO_WAKE_CONF</name>
                                <description>&amp;quot;00&amp;quot; - Wakeup on level0 of the selected GPIO (GPIO gets selected inside HIB3P3-module); &amp;quot;01&amp;quot; - Wakeup on fall-edge of selected GPIO.</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>EFUSE_READ_REG12</name>
                        <displayName>GPRCM_EFUSE_READ_REG12</displayName>
                        <description>EFUSE_READ_REG12</description>
                        <addressOffset>0x438</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DIEID_READ_REG5</name>
                        <displayName>GPRCM_DIEID_READ_REG5</displayName>
                        <description>DIEID_READ_REG5</description>
                        <addressOffset>0x448</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DIEID_READ_REG6</name>
                        <displayName>GPRCM_DIEID_READ_REG6</displayName>
                        <description>DIEID_READ_REG6</description>
                        <addressOffset>0x44C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>REF_FSM_CFG0</name>
                        <displayName>GPRCM_REF_FSM_CFG0</displayName>
                        <description>REF_FSM_CFG0</description>
                        <addressOffset>0x800</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>BGAP_SETTLING_TIME</name>
                                <description>ANA-BGAP Settling time (In number of slow_clks)</description>
                                <lsb>16</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>FREF_LDO_SETTLING_TIME</name>
                                <description>Slicer LDO settling time (In number of slow clks)</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>DIG_BUF_SETTLING_TIME</name>
                                <description>Dig-buffer settling time (In number of slow clks)</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>REF_FSM_CFG1</name>
                        <displayName>GPRCM_REF_FSM_CFG1</displayName>
                        <description>REF_FSM_CFG1</description>
                        <addressOffset>0x804</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>XTAL_SETTLING_TIME</name>
                                <description>XTAL settling time (In number of slow clks)</description>
                                <lsb>24</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SLICER_LV_SETTLING_TIME</name>
                                <description>LV Slicer settling time</description>
                                <lsb>16</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SLICER_HV_PD_SETTLING_TIME</name>
                                <description>HV Slicer Pull-down settling time</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SLICER_HV_SETTLING_TIME</name>
                                <description>HV Slicer settling time</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APLLMCS_WLAN_CONFIG0_40</name>
                        <displayName>GPRCM_APLLMCS_WLAN_CONFIG0_40</displayName>
                        <description>APLLMCS_WLAN_CONFIG0_40</description>
                        <addressOffset>0x808</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>APLLMCS_WLAN_N_40</name>
                                <description>Configuration for WLAN APLLMCS - N[6:0], if the XTAL frequency is 40 MHz (Selected by efuse)</description>
                                <lsb>8</lsb>
                                <msb>14</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>APLLMCS_WLAN_M_40</name>
                                <description>Configuration for WLAN APLLMCS - M[7:0], if the XTAL frequency is 40 MHz (Selected by efuse)</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APLLMCS_WLAN_CONFIG1_40</name>
                        <displayName>GPRCM_APLLMCS_WLAN_CONFIG1_40</displayName>
                        <description>APLLMCS_WLAN_CONFIG1_40</description>
                        <addressOffset>0x80C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>APLLMCS_SELINPFREQ_40</name>
                                <description>Configuration for WLAN APLLMCS - Selinpfreq, if the XTAL frequency is 40 MHz (Selected by Efuse)</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APLLMCS_WLAN_CONFIG0_26</name>
                        <displayName>GPRCM_APLLMCS_WLAN_CONFIG0_26</displayName>
                        <description>APLLMCS_WLAN_CONFIG0_26</description>
                        <addressOffset>0x810</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>APLLMCS_WLAN_N_26</name>
                                <description>Configuration for WLAN APLLMCS - N[6:0], if the XTAL frequency is 26 MHz (Selected by efuse)</description>
                                <lsb>8</lsb>
                                <msb>14</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>APLLMCS_WLAN_M_26</name>
                                <description>Configuration for WLAN APLLMCS - M[7:0], if the XTAL frequency is 26 MHz (Selected by efuse)</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APLLMCS_WLAN_CONFIG1_26</name>
                        <displayName>GPRCM_APLLMCS_WLAN_CONFIG1_26</displayName>
                        <description>APLLMCS_WLAN_CONFIG1_26</description>
                        <addressOffset>0x814</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>APLLMCS_SELINPFREQ_26</name>
                                <description>Configuration for WLAN APLLMCS - Selinpfreq, if the XTAL frequency is 26 MHz (Selected by Efuse)</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APLLMCS_WLAN_OVERRIDES</name>
                        <displayName>GPRCM_APLLMCS_WLAN_OVERRIDES</displayName>
                        <description>APLLMCS_WLAN_OVERRIDES</description>
                        <addressOffset>0x818</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>APLLMCS_WLAN_POSTDIV_OVERRIDE</name>
                                <description>APLLMCS_WLAN_POSTDIV_OVERRIDE</description>
                                <lsb>16</lsb>
                                <msb>18</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>APLLMCS_WLAN_SPARE</name>
                                <description>APLLMCS_WLAN_SPARE</description>
                                <lsb>8</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>APLLMCS_WLAN_N_7_8_OVERRIDE</name>
                                <description>Override value for WLAN_APLLMCS_N[8:7] bits. Applicable only when bit [1] is set to 1. (Else controlled from WTOP)</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APLLMCS_MCU_RUN_CONFIG0_38P4</name>
                        <displayName>GPRCM_APLLMCS_MCU_RUN_CONFIG0_38P4</displayName>
                        <description>APLLMCS_MCU_RUN_CONFIG0_38P4</description>
                        <addressOffset>0x81C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>APLLMCS_MCU_POSTDIV</name>
                                <description>APLLMCS_MCU_POSTDIV</description>
                                <lsb>27</lsb>
                                <msb>29</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>APLLMCS_MCU_SPARE</name>
                                <description>APLLMCS_MCU_SPARE</description>
                                <lsb>24</lsb>
                                <msb>26</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>APLLMCS_MCU_RUN_N_38P4</name>
                                <description>Configuration for MCU-APLLMCS : N during RUN mode. Selected if the XTAL frequency is 38.4 MHz (from Efuse)</description>
                                <lsb>16</lsb>
                                <msb>22</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>APLLMCS_MCU_RUN_M_38P4</name>
                                <description>Configuration for MCU-APLLMCS : M during RUN mode. Selected if the XTAL frequency is 38.4 MHz (from Efuse)</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>APLLMCS_MCU_RUN_N_7_8_38P4</name>
                                <description>Configuration for MCU-APLLMCS : N[8:7] during RUN mode. Selected if the XTAL frequency is 38.4 MHz (From Efuse)</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APLLMCS_MCU_RUN_CONFIG1_38P4</name>
                        <displayName>GPRCM_APLLMCS_MCU_RUN_CONFIG1_38P4</displayName>
                        <description>APLLMCS_MCU_RUN_CONFIG1_38P4</description>
                        <addressOffset>0x820</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>APLLMCS_MCU_RUN_SELINPFREQ_38P4</name>
                                <description>Configuration for MCU-APLLMCS : SELINPFREQ during RUN mode. Selected if the XTAL frequency is 38.4 MHz (from Efuse)</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APLLMCS_MCU_RUN_CONFIG0_26</name>
                        <displayName>GPRCM_APLLMCS_MCU_RUN_CONFIG0_26</displayName>
                        <description>APLLMCS_MCU_RUN_CONFIG0_26</description>
                        <addressOffset>0x824</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>APLLMCS_MCU_RUN_N_26</name>
                                <description>Configuration for MCU-APLLMCS : N during RUN mode. Selected if the XTAL frequency is 26 MHz (from Efuse)</description>
                                <lsb>16</lsb>
                                <msb>22</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>APLLMCS_MCU_RUN_M_26</name>
                                <description>Configuration for MCU-APLLMCS : M during RUN mode. Selected if the XTAL frequency is 26 MHz (from Efuse)</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>APLLMCS_MCU_RUN_N_7_8_26</name>
                                <description>Configuration for MCU-APLLMCS : N[8:7] during RUN mode. Selected if the XTAL frequency is 26 MHz (From Efuse)</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APLLMCS_MCU_RUN_CONFIG1_26</name>
                        <displayName>GPRCM_APLLMCS_MCU_RUN_CONFIG1_26</displayName>
                        <description>APLLMCS_MCU_RUN_CONFIG1_26</description>
                        <addressOffset>0x828</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>APLLMCS_MCU_RUN_SELINPFREQ_26</name>
                                <description>Configuration for MCU-APLLMCS : SELINPFREQ during RUN mode. Selected if the XTAL frequency is 26 MHz (from Efuse)</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SPARE_RW0</name>
                        <displayName>GPRCM_SPARE_RW0</displayName>
                        <description>SPARE_RW0</description>
                        <addressOffset>0x82C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SPARE_RW1</name>
                        <displayName>GPRCM_SPARE_RW1</displayName>
                        <description>SPARE_RW1</description>
                        <addressOffset>0x830</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APLLMCS_MCU_OVERRIDES</name>
                        <displayName>GPRCM_APLLMCS_MCU_OVERRIDES</displayName>
                        <description>APLLMCS_MCU_OVERRIDES</description>
                        <addressOffset>0x834</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SYSCLK_SRC_OVERRIDE</name>
                                <description>Override for sysclk src (applicable only if bit [0] is set to 1. &amp;quot;00&amp;quot;- SLOW_CLK &amp;quot;01&amp;quot;- XTAL_CLK &amp;quot;10&amp;quot;- PLL_CLK</description>
                                <lsb>1</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SYSCLK_SWITCH_STATUS</name>
                        <displayName>GPRCM_SYSCLK_SWITCH_STATUS</displayName>
                        <description>SYSCLK_SWITCH_STATUS</description>
                        <addressOffset>0x838</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>REF_LDO_CONTROLS</name>
                        <displayName>GPRCM_REF_LDO_CONTROLS</displayName>
                        <description>REF_LDO_CONTROLS</description>
                        <addressOffset>0x83C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>REF_SPARE_CONTROL</name>
                                <description>Spare bits for REF_CTRL_FSM. Reaches directly on port TOP_PM_REG2[15:14] of gprcm.</description>
                                <lsb>14</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>REF_TLOAD_ENABLE</name>
                                <description>REF TLOAD Enable. Reaches directly on port TOP_PM_REG2[13:11] of gprcm.</description>
                                <lsb>11</lsb>
                                <msb>13</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>REF_LDO_TMUX_CONTROL</name>
                                <description>REF_LDO Test-mux control. Reaches directly on port TOP_PM_REG2[10:8] of gprcm.</description>
                                <lsb>8</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>REF_BW_CONTROL</name>
                                <description>REF BW Control. Reaches directly on port TOP_PM_REG2[7:6] of gprcm.</description>
                                <lsb>6</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>REF_VTRIM_CONTROL</name>
                                <description>REF VTRIM Control. Reaches directly on port TOP_PM_REG2[5:2] of gprcm.</description>
                                <lsb>2</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>REF_RTRIM_CONTROL</name>
                        <displayName>GPRCM_REF_RTRIM_CONTROL</displayName>
                        <description>REF_RTRIM_CONTROL</description>
                        <addressOffset>0x840</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TOP_PM_REG0_5_4</name>
                                <description>This is [5:4] bits of TOP_PM_REG0</description>
                                <lsb>27</lsb>
                                <msb>28</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TOP_CLKM_REG0_15_5</name>
                                <description>This is [15:5] bits of TOP_CLKM_REG0</description>
                                <lsb>16</lsb>
                                <msb>26</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>REF_CLKM_RTRIM</name>
                                <description>CLKM_TRIM Override. Applicable when efuse_done = 0 or bit[8] is set to 1.</description>
                                <lsb>0</lsb>
                                <msb>4</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>REF_SLICER_CONTROLS0</name>
                        <displayName>GPRCM_REF_SLICER_CONTROLS0</displayName>
                        <description>REF_SLICER_CONTROLS0</description>
                        <addressOffset>0x844</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CM_TMUX_SEL_LOWV</name>
                                <description>CM Test-mux select. Reaches on TOP_CLMM_REG1_IN[9:6] port of gprcm</description>
                                <lsb>6</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SLICER_SPARE0</name>
                                <description>Slicer spare0 control. Reaches on TOP_CLKM_REG1_IN[5:4] port of gprcm</description>
                                <lsb>4</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>REF_SLICER_CONTROLS1</name>
                        <displayName>GPRCM_REF_SLICER_CONTROLS1</displayName>
                        <description>REF_SLICER_CONTROLS1</description>
                        <addressOffset>0x848</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SLICER_SPARE1</name>
                                <description>Slicer spare1. Reaches on port TOP_CLKM_REG2_IN[15:10] of gprcm.</description>
                                <lsb>10</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>XOSC_TRIM</name>
                                <description>XOSC Trim. Reaches on port TOP_CLKM_REG2_IN[9:4] of gprcm</description>
                                <lsb>4</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SLICER_LV_TRIM</name>
                                <description>LV Slicer trim. Reaches on port TOP_CLKM_REG2_IN[2:0] of gprcm.</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>REF_ANA_BGAP_CONTROLS0</name>
                        <displayName>GPRCM_REF_ANA_BGAP_CONTROLS0</displayName>
                        <description>REF_ANA_BGAP_CONTROLS0</description>
                        <addressOffset>0x84C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_REF_TEMP_TRIM</name>
                                <description>REF_TEMP_TRIM override. Applicable when bit [20] of this register set to 1. (or efc_done = 0) Note : Final REF_TEMP_TRIM reaches on port TOP_PM_REG0[15:10] of gprcm.</description>
                                <lsb>10</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_REF_V2I_TRIM</name>
                                <description>REF_V2I_TRIM Override. Applicable when bit [21] of this register set to 1 . (of efc_done = 0) Note : Final REF_V2I_TRIM reaches on port TOP_PM_REG0[9:6] of gprcm.</description>
                                <lsb>6</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>4</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>REF_ANA_BGAP_CONTROLS1</name>
                        <displayName>GPRCM_REF_ANA_BGAP_CONTROLS1</displayName>
                        <description>REF_ANA_BGAP_CONTROLS1</description>
                        <addressOffset>0x850</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_REF_BG_SPARE</name>
                                <description>REF_BGAP_SPARE. Reaches on port TOP_PM_REG1[15:14] of gprcm.</description>
                                <lsb>14</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_REF_BGAP_TMUX_CTRL</name>
                                <description>REF_BGAP_TMUX_CTRL. Reaches on port TOP_PM_REG1[13:9] of gprcm.</description>
                                <lsb>9</lsb>
                                <msb>13</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_REF_FILT_TRIM</name>
                                <description>REF_FILT_TRIM. Reaches on port TOP_PM_REG1[8:5] of gprcm.</description>
                                <lsb>5</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_REF_MAG_TRIM</name>
                                <description>REF_MAG_TRIM Override. Applicable when bit[22] of REF_ANA_BGAP_CONTROLS0 [0x084C] set to 1 (of efc_done = 0). Note : Final REF_MAG_TRIM reaches on port TOP_PM_REG1[4:0] of gprcm</description>
                                <lsb>0</lsb>
                                <msb>4</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>REF_ANA_SPARE_CONTROLS0</name>
                        <displayName>GPRCM_REF_ANA_SPARE_CONTROLS0</displayName>
                        <description>REF_ANA_SPARE_CONTROLS0</description>
                        <addressOffset>0x854</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_TOP_PM_REG3</name>
                                <description>Spare control. Reaches on TOP_PM_REG3 [15:0] of gprcm.</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>REF_ANA_SPARE_CONTROLS1</name>
                        <displayName>GPRCM_REF_ANA_SPARE_CONTROLS1</displayName>
                        <description>REF_ANA_SPARE_CONTROLS1</description>
                        <addressOffset>0x858</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_TOP_CLKM_REG3</name>
                                <description>Spare control. Reaches on TOP_CLKM_REG3 [15:0] of gprcm.</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_TOP_CLKM_REG4</name>
                                <description>Spare control. Reaches on TOP_CLKM_REG4 [15:0] of gprcm.</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEMSS_PSCON_OVERRIDES0</name>
                        <displayName>GPRCM_MEMSS_PSCON_OVERRIDES0</displayName>
                        <description>MEMSS_PSCON_OVERRIDES0</description>
                        <addressOffset>0x85C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_MEMSS_PSCON_MEM_OFF_OVERRIDE</name>
                                <description>MEM_MEMSS_PSCON_MEM_OFF_OVERRIDE</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_MEMSS_PSCON_MEM_RETAIN_OVERRIDE</name>
                                <description>MEM_MEMSS_PSCON_MEM_RETAIN_OVERRIDE</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEMSS_PSCON_OVERRIDES1</name>
                        <displayName>GPRCM_MEMSS_PSCON_OVERRIDES1</displayName>
                        <description>MEMSS_PSCON_OVERRIDES1</description>
                        <addressOffset>0x860</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PLL_REF_LOCK_OVERRIDES</name>
                        <displayName>GPRCM_PLL_REF_LOCK_OVERRIDES</displayName>
                        <description>PLL_REF_LOCK_OVERRIDES</description>
                        <addressOffset>0x864</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MCU_PSCON_DEBUG</name>
                        <displayName>GPRCM_MCU_PSCON_DEBUG</displayName>
                        <description>MCU_PSCON_DEBUG</description>
                        <addressOffset>0x868</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MCU_PSCON_RTC_PS</name>
                                <description>MCU_PSCON_RTC_ON = &amp;quot;0000&amp;quot;; MCU_PSCON_RTC_OFF = &amp;quot;0001&amp;quot;; MCU_PSCON_RTC_RET = &amp;quot;0010&amp;quot;; MCU_PSCON_RTC_OFF_TO_ON = &amp;quot;0011&amp;quot;; MCU_PSCON_RTC_RET_TO_ON = &amp;quot;0100&amp;quot;; MCU_PSCON_RTC_ON_TO_RET = &amp;quot;0101&amp;quot;; MCU_PSCON_RTC_ON_TO_OFF = &amp;quot;0110&amp;quot;; MCU_PSCON_RTC_RET_TO_ON_WAIT_OPP = &amp;quot;0111&amp;quot;; MCU_PSCON_RTC_OFF_TO_ON_WAIT_OPP = &amp;quot;1000&amp;quot;;</description>
                                <lsb>3</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MCU_PSCON_SYS_PS</name>
                                <description>MCU_PSCON_SYS_PS</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEMSS_PWR_PS</name>
                        <displayName>GPRCM_MEMSS_PWR_PS</displayName>
                        <description>MEMSS_PWR_PS</description>
                        <addressOffset>0x86C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PWR_PS_MEMSS</name>
                                <description>MEMSS_PM_SLEEP = &amp;quot;000&amp;quot;; MEMSS_PM_WAIT_OPP = &amp;quot;010&amp;quot;; MEMSS_PM_ACTIVE = &amp;quot;011&amp;quot;; MEMSS_PM_SLEEP_TO_ACTIVE = &amp;quot;100&amp;quot;; MEMSS_PM_ACTIVE_TO_SLEEP = &amp;quot;101&amp;quot;;</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>REF_FSM_DEBUG</name>
                        <displayName>GPRCM_REF_FSM_DEBUG</displayName>
                        <description>REF_FSM_DEBUG</description>
                        <addressOffset>0x870</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>FREF_MODE</name>
                                <description>01 - HV Mode ; 10 - LV Mode ; 11 - XTAL Mode</description>
                                <lsb>4</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>REF_FSM_PS</name>
                                <description>constant FREF_CLK_OFF = &amp;quot;00000&amp;quot;; constant FREF_EN_BGAP = &amp;quot;00001&amp;quot;; constant FREF_EN_LDO = &amp;quot;00010&amp;quot;; constant FREF_EN_SLI_HV = &amp;quot;00011&amp;quot;; constant FREF_EN_SLI_HV_PD = &amp;quot;00100&amp;quot;; constant FREF_EN_DIG_BUF = &amp;quot;00101&amp;quot;; constant FREF_EN_OSC = &amp;quot;00110&amp;quot;; constant FREF_EN_SLI_LV = &amp;quot;00111&amp;quot;; constant FREF_EN_CLK_REQ = &amp;quot;01000&amp;quot;; constant FREF_CLK_VALID = &amp;quot;01001&amp;quot;; constant FREF_MODE_DET0 = &amp;quot;01010&amp;quot;; constant FREF_MODE_DET1 = &amp;quot;01011&amp;quot;; constant FREF_MODE_DET2 = &amp;quot;10010&amp;quot;; constant FREF_MODE_DET3 = &amp;quot;10011&amp;quot;; constant FREF_VALID = &amp;quot;01100&amp;quot;; constant FREF_VALID0 = &amp;quot;01101&amp;quot;; constant FREF_VALID1 = &amp;quot;01110&amp;quot;; constant FREF_VALID2 = &amp;quot;01111&amp;quot;; constant FREF_WAIT_EXT_TCXO0 = &amp;quot;10000&amp;quot;; constant FREF_WAIT_EXT_TCXO1 = &amp;quot;10001&amp;quot;;</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_SYS_OPP_REQ_OVERRIDE</name>
                        <displayName>GPRCM_MEM_SYS_OPP_REQ_OVERRIDE</displayName>
                        <description>MEM_SYS_OPP_REQ_OVERRIDE</description>
                        <addressOffset>0x874</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SYS_OPP_REQ_OVERRIDE</name>
                                <description>&amp;quot;0001&amp;quot; - RUN ; &amp;quot;0010&amp;quot; - DSLP ; &amp;quot;0100&amp;quot; - LPDS ; Others - NA</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_TESTCTRL_PD_OPP_CONFIG</name>
                        <displayName>GPRCM_MEM_TESTCTRL_PD_OPP_CONFIG</displayName>
                        <description>MEM_TESTCTRL_PD_OPP_CONFIG</description>
                        <addressOffset>0x878</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_WL_FAST_CLK_REQ_OVERRIDES</name>
                        <displayName>GPRCM_MEM_WL_FAST_CLK_REQ_OVERRIDES</displayName>
                        <description>MEM_WL_FAST_CLK_REQ_OVERRIDES</description>
                        <addressOffset>0x87C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_MCU_PD_MODE_REQ_OVERRIDES</name>
                        <displayName>GPRCM_MEM_MCU_PD_MODE_REQ_OVERRIDES</displayName>
                        <description>MEM_MCU_PD_MODE_REQ_OVERRIDES</description>
                        <addressOffset>0x880</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_MCSPI_SRAM_OFF_REQ_OVERRIDES</name>
                        <displayName>GPRCM_MEM_MCSPI_SRAM_OFF_REQ_OVERRIDES</displayName>
                        <description>MEM_MCSPI_SRAM_OFF_REQ_OVERRIDES</description>
                        <addressOffset>0x884</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_WLAN_APLLMCS_OVERRIDES</name>
                        <displayName>GPRCM_MEM_WLAN_APLLMCS_OVERRIDES</displayName>
                        <description>MEM_WLAN_APLLMCS_OVERRIDES</description>
                        <addressOffset>0x888</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_REF_FSM_CFG2</name>
                        <displayName>GPRCM_MEM_REF_FSM_CFG2</displayName>
                        <description>MEM_REF_FSM_CFG2</description>
                        <addressOffset>0x88C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_FC_DEASSERT_DELAY</name>
                                <description>Number of RTC clocks for keeping the FC_EN asserted high</description>
                                <lsb>19</lsb>
                                <msb>21</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_STARTUP_DEASSERT_DELAY</name>
                                <description>Number of RTC clocks for keeping the STARTUP_EN asserted high</description>
                                <lsb>16</lsb>
                                <msb>18</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_EXT_TCXO_SETTLING_TIME</name>
                                <description>Number of RTC clocks for waiting for clock to settle.</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>TESTCTRL_POWER_CTRL</name>
                        <displayName>GPRCM_TESTCTRL_POWER_CTRL</displayName>
                        <description>TESTCTRL_POWER_CTRL</description>
                        <addressOffset>0xC10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TESTCTRL_PD_STATUS</name>
                                <description>TESTCTRL_PD_STATUS</description>
                                <lsb>1</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SSDIO_POWER_CTRL</name>
                        <displayName>GPRCM_SSDIO_POWER_CTRL</displayName>
                        <description>SSDIO_POWER_CTRL</description>
                        <addressOffset>0xC14</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SSDIO_PD_STATUS</name>
                                <description>1 - SSDIO-PD is ON ; 0 - SSDIO-PD is OFF</description>
                                <lsb>1</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MCSPI_N1_POWER_CTRL</name>
                        <displayName>GPRCM_MCSPI_N1_POWER_CTRL</displayName>
                        <description>MCSPI_N1_POWER_CTRL</description>
                        <addressOffset>0xC18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MCSPI_N1_PD_STATUS</name>
                                <description>1 - MCSPI_N1-PD is ON ; 0 - MCSPI_N1-PD if OFF</description>
                                <lsb>1</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>WELP_POWER_CTRL</name>
                        <displayName>GPRCM_WELP_POWER_CTRL</displayName>
                        <description>WELP_POWER_CTRL</description>
                        <addressOffset>0xC1C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>WTOP_PD_STATUS</name>
                                <description>WTOP_PD_STATUS</description>
                                <lsb>10</lsb>
                                <msb>12</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>WELP_PD_STATUS</name>
                                <description>WELP_PD_STATUS</description>
                                <lsb>1</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>WL_SDIO_POWER_CTRL</name>
                        <displayName>GPRCM_WL_SDIO_POWER_CTRL</displayName>
                        <description>WL_SDIO_POWER_CTRL</description>
                        <addressOffset>0xC20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>WL_SDIO_PD_STATUS</name>
                                <description>WL_SDIO_PD_STATUS</description>
                                <lsb>1</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>WLAN_SRAM_ACTIVE_PWR_CFG</name>
                        <displayName>GPRCM_WLAN_SRAM_ACTIVE_PWR_CFG</displayName>
                        <description>WLAN_SRAM_ACTIVE_PWR_CFG</description>
                        <addressOffset>0xC24</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>WLAN_SRAM_ACTIVE_PWR_CFG</name>
                                <description>SRAM (WTOP+DRP) state during Active-mode : 1 - SRAMs are ON ; 0 - SRAMs are OFF. Cluster information : [0] - 1st column of MEMSS (Applicable only when owned by WTOP/PHY) [1] - 2nd column of MEMSS (Applicable only when owned by WTOP/PHY) ; [2] - 3rd column of MEMSS (Applicable only when owned by WTOP/PHY) ; [3] - 4th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [4] - 5th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [5] - 6th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [6] - 7th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [7] - 8th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [8] - 9th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [9] - 10th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [10] - 11th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [11] - 12th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [12] - 13th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [13] - 14th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [14] - 15th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [15] - 16th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [23:16] - Internal to WTOP Cluster</description>
                                <lsb>0</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>WLAN_SRAM_SLEEP_PWR_CFG</name>
                        <displayName>GPRCM_WLAN_SRAM_SLEEP_PWR_CFG</displayName>
                        <description>WLAN_SRAM_SLEEP_PWR_CFG</description>
                        <addressOffset>0xC28</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>WLAN_SRAM_SLEEP_PWR_CFG</name>
                                <description>SRAM (WTOP+DRP) state during Sleep-mode : 1 - SRAMs are RET ; 0 - SRAMs are OFF. Cluster information : [0] - 1st column of MEMSS (Applicable only when owned by WTOP/PHY) [1] - 2nd column of MEMSS (Applicable only when owned by WTOP/PHY) ; [2] - 3rd column of MEMSS (Applicable only when owned by WTOP/PHY) ; [3] - 4th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [4] - 5th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [5] - 6th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [6] - 7th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [7] - 8th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [8] - 9th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [9] - 10th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [10] - 11th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [11] - 12th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [12] - 13th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [13] - 14th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [14] - 15th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [15] - 16th column of MEMSS (Applicable only when owned by WTOP/PHY) ; [23:16] - Internal to WTOP Cluster</description>
                                <lsb>0</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APPS_SECURE_INIT_DONE</name>
                        <displayName>GPRCM_APPS_SECURE_INIT_DONE</displayName>
                        <description>APPS_SECURE_INIT_DONE</description>
                        <addressOffset>0xC30</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_DEV_MODE_INIT_DONE</name>
                        <displayName>GPRCM_APPS_DEV_MODE_INIT_DONE</displayName>
                        <description>APPS_DEV_MODE_INIT_DONE</description>
                        <addressOffset>0xC34</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EN_APPS_REBOOT</name>
                        <displayName>GPRCM_EN_APPS_REBOOT</displayName>
                        <description>EN_APPS_REBOOT</description>
                        <addressOffset>0xC38</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_APPS_PERIPH_PRESENT</name>
                        <displayName>GPRCM_MEM_APPS_PERIPH_PRESENT</displayName>
                        <description>MEM_APPS_PERIPH_PRESENT</description>
                        <addressOffset>0xC3C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_NWP_PERIPH_PRESENT</name>
                        <displayName>GPRCM_MEM_NWP_PERIPH_PRESENT</displayName>
                        <description>MEM_NWP_PERIPH_PRESENT</description>
                        <addressOffset>0xC40</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_SHARED_PERIPH_PRESENT</name>
                        <displayName>GPRCM_MEM_SHARED_PERIPH_PRESENT</displayName>
                        <description>MEM_SHARED_PERIPH_PRESENT</description>
                        <addressOffset>0xC44</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>NWP_PWR_STATE</name>
                        <displayName>GPRCM_NWP_PWR_STATE</displayName>
                        <description>NWP_PWR_STATE</description>
                        <addressOffset>0xC48</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>NWP_PWR_STATE_PS</name>
                                <description>&amp;quot;0000&amp;quot;- PORZ :- NWP is yet to be enabled by APPS during powerup (from HIB/OFF) ; &amp;quot;0011&amp;quot;- ACTIVE :- NWP is enabled, clocks and resets to NWP-SubSystem are enabled ; &amp;quot;0010&amp;quot;- LPDS :- NWP is in LPDS-mode ; Clocks and reset to NWP-SubSystem are gated ; &amp;quot;0101&amp;quot;- WAIT_FOR_OPP :- NWP is in transition from LPDS to ACTIVE, where it is waiting for OPP to be stable ; &amp;quot;1000&amp;quot;- WAKE_TIMER_OPP_REQ :- NWP is in transition from LPDS, where the wakeup cause is LPDS_Wake timer OTHERS : NA</description>
                                <lsb>8</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NWP_RCM_PS</name>
                                <description>&amp;quot;000&amp;quot; - NWP_RUN : NWP is in RUN state (default) - Applicable only when NWP_PWR_STATE_PS = ACTIVE ; &amp;quot;001&amp;quot; - NWP_SLP : NWP is in SLEEP state (default) - Applicable only when NWP_PWR_STATE_PS = ACTIVE ; &amp;quot;010&amp;quot; - NWP_DSLP : NWP is in Deep-Sleep state (default) - Applicable only when NWP_PWR_STATE_PS = ACTIVE ; &amp;quot;011&amp;quot; - WAIT_FOR_ACTIVE : NWP is in transition from Deep-sleep to Run, where it is waiting for OPP to be stable ; &amp;quot;100&amp;quot; - WAIT_FOR_DSLP_TIMER_WAKE_REQ : NWP is in transition from Deep-sleep to Run, where the wakeup cause is deep-sleep wake-timer</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APPS_PWR_STATE</name>
                        <displayName>GPRCM_APPS_PWR_STATE</displayName>
                        <description>APPS_PWR_STATE</description>
                        <addressOffset>0xC4C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>APPS_PWR_STATE_PS</name>
                                <description>&amp;quot;0000&amp;quot;- PORZ :- APPS is waiting for PLL_clock during powerup (from HIB/OFF) ; &amp;quot;0011&amp;quot;- ACTIVE :- APPS is enabled, clocks and resets to APPS-SubSystem are enabled ; APPS might be either in Secure or Un-secure mode during this state. &amp;quot;1001&amp;quot; - SECURE_MODE_LPDS :- While in ACTIVE (Secure-mode), APPS had to program the DevInit_done bit at the end, after which it enters into this state, where the reset to APPS will be asserted. From this state APPS might either re-boot itself or enter into LPDS depending upon whether the device is 3200 or 3100. &amp;quot;0010&amp;quot;- LPDS :- APPS is in LPDS-mode ; Clocks and reset to APPS-SubSystem are gated ; &amp;quot;0101&amp;quot;- WAIT_FOR_OPP :- APPS is in transition from LPDS to ACTIVE, where it is waiting for OPP to be stable ; &amp;quot;1000&amp;quot; - WAKE_TIMER_OPP_REQ : APPS is in transition from LPDS, where the wakeup cause is LPDS_Wake timer ; &amp;quot;1010&amp;quot; - WAIT_FOR_PATCH_INIT : APPS enters into this state during development-mode #3 (SOP = 3), where it is waiting for patch download to complete and 0x4 hack is programmed. OTHERS : NA</description>
                                <lsb>8</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>APPS_RCM_PS</name>
                                <description>&amp;quot;000&amp;quot; - APPS_RUN : APPS is in RUN state (default) - Applicable only when APPS_PWR_STATE_PS = ACTIVE ; &amp;quot;001&amp;quot; - APPS_SLP : APPS is in SLEEP state (default) - Applicable only when APPS_PWR_STATE_PS = ACTIVE ; &amp;quot;010&amp;quot; - APPS_DSLP : APPS is in Deep-Sleep state (default) - Applicable only when APPS_PWR_STATE_PS = ACTIVE ; &amp;quot;011&amp;quot; - WAIT_FOR_ACTIVE : APPS is in transition from Deep-sleep to Run, where it is waiting for OPP to be stable ; &amp;quot;100&amp;quot; - WAIT_FOR_DSLP_TIMER_WAKE_REQ : APPS is in transition from Deep-sleep to Run, where the wakeup cause is deep-sleep wake-timer</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MCU_PWR_STATE</name>
                        <displayName>GPRCM_MCU_PWR_STATE</displayName>
                        <description>MCU_PWR_STATE</description>
                        <addressOffset>0xC50</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MCU_OPP_PS</name>
                                <description>TBD</description>
                                <lsb>0</lsb>
                                <msb>4</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>WTOP_PM_PS</name>
                        <displayName>GPRCM_WTOP_PM_PS</displayName>
                        <description>WTOP_PM_PS</description>
                        <addressOffset>0xC54</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>WTOP_PM_PS</name>
                                <description>&amp;quot;011&amp;quot; - WTOP_PM_ACTIVE (Default) :- WTOP_Pd is in ACTIVE mode; &amp;quot;100&amp;quot; - WTOP_PM_ACTIVE_TO_SLEEP :- WTOP_Pd is in transition from ACTIVE to SLEEP ; &amp;quot;000&amp;quot; - WTOP_PM_SLEEP : WTOP-Pd is in Sleep-state ; &amp;quot;100&amp;quot; - WTOP_PM_SLEEP_TO_ACTIVE : WTOP_Pd is in transition from SLEEP to ACTIVE ; &amp;quot;000&amp;quot; - WTOP_PM_WAIT_FOR_OPP : Wait for OPP to be stable ;</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>WTOP_PD_RESETZ_OVERRIDE_REG</name>
                        <displayName>GPRCM_WTOP_PD_RESETZ_OVERRIDE_REG</displayName>
                        <description>WTOP_PD_RESETZ_OVERRIDE_REG</description>
                        <addressOffset>0xC58</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>WELP_PD_RESETZ_OVERRIDE_REG</name>
                        <displayName>GPRCM_WELP_PD_RESETZ_OVERRIDE_REG</displayName>
                        <description>WELP_PD_RESETZ_OVERRIDE_REG</description>
                        <addressOffset>0xC5C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>WL_SDIO_PD_RESETZ_OVERRIDE_REG</name>
                        <displayName>GPRCM_WL_SDIO_PD_RESETZ_OVERRIDE_REG</displayName>
                        <description>WL_SDIO_PD_RESETZ_OVERRIDE_REG</description>
                        <addressOffset>0xC60</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SSDIO_PD_RESETZ_OVERRIDE_REG</name>
                        <displayName>GPRCM_SSDIO_PD_RESETZ_OVERRIDE_REG</displayName>
                        <description>SSDIO_PD_RESETZ_OVERRIDE_REG</description>
                        <addressOffset>0xC64</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MCSPI_N1_PD_RESETZ_OVERRIDE_REG</name>
                        <displayName>GPRCM_MCSPI_N1_PD_RESETZ_OVERRIDE_REG</displayName>
                        <description>MCSPI_N1_PD_RESETZ_OVERRIDE_REG</description>
                        <addressOffset>0xC68</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TESTCTRL_PD_RESETZ_OVERRIDE_REG</name>
                        <displayName>GPRCM_TESTCTRL_PD_RESETZ_OVERRIDE_REG</displayName>
                        <description>TESTCTRL_PD_RESETZ_OVERRIDE_REG</description>
                        <addressOffset>0xC6C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MCU_PD_RESETZ_OVERRIDE_REG</name>
                        <displayName>GPRCM_MCU_PD_RESETZ_OVERRIDE_REG</displayName>
                        <description>MCU_PD_RESETZ_OVERRIDE_REG</description>
                        <addressOffset>0xC70</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EFUSE_READ_REG0</name>
                        <displayName>GPRCM_EFUSE_READ_REG0</displayName>
                        <description>EFUSE_READ_REG0</description>
                        <addressOffset>0xC78</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EFUSE_READ_REG1</name>
                        <displayName>GPRCM_EFUSE_READ_REG1</displayName>
                        <description>EFUSE_READ_REG1</description>
                        <addressOffset>0xC7C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EFUSE_READ_REG2</name>
                        <displayName>GPRCM_EFUSE_READ_REG2</displayName>
                        <description>EFUSE_READ_REG2</description>
                        <addressOffset>0xC80</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EFUSE_READ_REG3</name>
                        <displayName>GPRCM_EFUSE_READ_REG3</displayName>
                        <description>EFUSE_READ_REG3</description>
                        <addressOffset>0xC84</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>WTOP_MEM_RET_CFG</name>
                        <displayName>GPRCM_WTOP_MEM_RET_CFG</displayName>
                        <description>WTOP_MEM_RET_CFG</description>
                        <addressOffset>0xC88</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>COEX_CLK_SWALLOW_CFG0</name>
                        <displayName>GPRCM_COEX_CLK_SWALLOW_CFG0</displayName>
                        <description>COEX_CLK_SWALLOW_CFG0</description>
                        <addressOffset>0xC8C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>Q_FACTOR</name>
                                <description>TBD</description>
                                <lsb>0</lsb>
                                <msb>22</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>COEX_CLK_SWALLOW_CFG1</name>
                        <displayName>GPRCM_COEX_CLK_SWALLOW_CFG1</displayName>
                        <description>COEX_CLK_SWALLOW_CFG1</description>
                        <addressOffset>0xC90</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>P_FACTOR</name>
                                <description>TBD</description>
                                <lsb>0</lsb>
                                <msb>19</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>COEX_CLK_SWALLOW_CFG2</name>
                        <displayName>GPRCM_COEX_CLK_SWALLOW_CFG2</displayName>
                        <description>COEX_CLK_SWALLOW_CFG2</description>
                        <addressOffset>0xC94</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CONSECUTIVE_SWALLOW</name>
                                <description>CONSECUTIVE_SWALLOW</description>
                                <lsb>3</lsb>
                                <msb>4</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>COEX_CLK_SWALLOW_ENABLE</name>
                        <displayName>GPRCM_COEX_CLK_SWALLOW_ENABLE</displayName>
                        <description>COEX_CLK_SWALLOW_ENABLE</description>
                        <addressOffset>0xC98</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DCDC_CLK_GEN_CONFIG</name>
                        <displayName>GPRCM_DCDC_CLK_GEN_CONFIG</displayName>
                        <description>DCDC_CLK_GEN_CONFIG</description>
                        <addressOffset>0xC9C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EFUSE_READ_REG4</name>
                        <displayName>GPRCM_EFUSE_READ_REG4</displayName>
                        <description>EFUSE_READ_REG4</description>
                        <addressOffset>0xCA0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EFUSE_READ_REG5</name>
                        <displayName>GPRCM_EFUSE_READ_REG5</displayName>
                        <description>EFUSE_READ_REG5</description>
                        <addressOffset>0xCA4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EFUSE_READ_REG6</name>
                        <displayName>GPRCM_EFUSE_READ_REG6</displayName>
                        <description>EFUSE_READ_REG6</description>
                        <addressOffset>0xCA8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EFUSE_READ_REG7</name>
                        <displayName>GPRCM_EFUSE_READ_REG7</displayName>
                        <description>EFUSE_READ_REG7</description>
                        <addressOffset>0xCAC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EFUSE_READ_REG8</name>
                        <displayName>GPRCM_EFUSE_READ_REG8</displayName>
                        <description>EFUSE_READ_REG8</description>
                        <addressOffset>0xCB0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EFUSE_READ_REG9</name>
                        <displayName>GPRCM_EFUSE_READ_REG9</displayName>
                        <description>EFUSE_READ_REG9</description>
                        <addressOffset>0xCB4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EFUSE_READ_REG10</name>
                        <displayName>GPRCM_EFUSE_READ_REG10</displayName>
                        <description>EFUSE_READ_REG10</description>
                        <addressOffset>0xCB8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EFUSE_READ_REG11</name>
                        <displayName>GPRCM_EFUSE_READ_REG11</displayName>
                        <description>EFUSE_READ_REG11</description>
                        <addressOffset>0xCBC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DIEID_READ_REG0</name>
                        <displayName>GPRCM_DIEID_READ_REG0</displayName>
                        <description>DIEID_READ_REG0</description>
                        <addressOffset>0xCC0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DIEID_READ_REG1</name>
                        <displayName>GPRCM_DIEID_READ_REG1</displayName>
                        <description>DIEID_READ_REG1</description>
                        <addressOffset>0xCC4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DIEID_READ_REG2</name>
                        <displayName>GPRCM_DIEID_READ_REG2</displayName>
                        <description>DIEID_READ_REG2</description>
                        <addressOffset>0xCC8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DIEID_READ_REG3</name>
                        <displayName>GPRCM_DIEID_READ_REG3</displayName>
                        <description>DIEID_READ_REG3</description>
                        <addressOffset>0xCCC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DIEID_READ_REG4</name>
                        <displayName>GPRCM_DIEID_READ_REG4</displayName>
                        <description>DIEID_READ_REG4</description>
                        <addressOffset>0xCD0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_SS_OVERRIDES</name>
                        <displayName>GPRCM_APPS_SS_OVERRIDES</displayName>
                        <description>APPS_SS_OVERRIDES</description>
                        <addressOffset>0xCD4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>NWP_SS_OVERRIDES</name>
                        <displayName>GPRCM_NWP_SS_OVERRIDES</displayName>
                        <description>NWP_SS_OVERRIDES</description>
                        <addressOffset>0xCD8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SHARED_SS_OVERRIDES</name>
                        <displayName>GPRCM_SHARED_SS_OVERRIDES</displayName>
                        <description>SHARED_SS_OVERRIDES</description>
                        <addressOffset>0xCDC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IDMEM_CORE_RST_OVERRIDES</name>
                        <displayName>GPRCM_IDMEM_CORE_RST_OVERRIDES</displayName>
                        <description>IDMEM_CORE_RST_OVERRIDES</description>
                        <addressOffset>0xCE0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TOP_DIE_FSM_OVERRIDES</name>
                        <displayName>GPRCM_TOP_DIE_FSM_OVERRIDES</displayName>
                        <description>TOP_DIE_FSM_OVERRIDES</description>
                        <addressOffset>0xCE4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MCU_PSCON_OVERRIDES</name>
                        <displayName>GPRCM_MCU_PSCON_OVERRIDES</displayName>
                        <description>MCU_PSCON_OVERRIDES</description>
                        <addressOffset>0xCE8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>10</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_MCU_PSCON_MEM_OFF_OVERRIDE</name>
                                <description>MEM_MCU_PSCON_MEM_OFF_OVERRIDE</description>
                                <lsb>4</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_MCU_PSCON_MEM_RETAIN_OVERRIDE</name>
                                <description>MEM_MCU_PSCON_MEM_RETAIN_OVERRIDE</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>WTOP_PSCON_OVERRIDES</name>
                        <displayName>GPRCM_WTOP_PSCON_OVERRIDES</displayName>
                        <description>WTOP_PSCON_OVERRIDES</description>
                        <addressOffset>0xCEC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_WTOP_PSCON_MEM_OFF_OVERRIDE</name>
                                <description>MEM_WTOP_PSCON_MEM_OFF_OVERRIDE</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_WTOP_PSCON_MEM_RETAIN_OVERRIDE</name>
                                <description>MEM_WTOP_PSCON_MEM_RETAIN_OVERRIDE</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>WELP_PSCON_OVERRIDES</name>
                        <displayName>GPRCM_WELP_PSCON_OVERRIDES</displayName>
                        <description>WELP_PSCON_OVERRIDES</description>
                        <addressOffset>0xCF0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>WL_SDIO_PSCON_OVERRIDES</name>
                        <displayName>GPRCM_WL_SDIO_PSCON_OVERRIDES</displayName>
                        <description>WL_SDIO_PSCON_OVERRIDES</description>
                        <addressOffset>0xCF4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MCSPI_PSCON_OVERRIDES</name>
                        <displayName>GPRCM_MCSPI_PSCON_OVERRIDES</displayName>
                        <description>MCSPI_PSCON_OVERRIDES</description>
                        <addressOffset>0xCF8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SSDIO_PSCON_OVERRIDES</name>
                        <displayName>GPRCM_SSDIO_PSCON_OVERRIDES</displayName>
                        <description>SSDIO_PSCON_OVERRIDES</description>
                        <addressOffset>0xCFC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>OCP_SHARED</name>
                <version>1.0</version>
                <description>OCP_SHARED</description>
                <baseAddress>0x4402E000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>SEMAPHORE1</name>
                        <displayName>OCP_SHARED_SEMAPHORE1</displayName>
                        <description>SEMAPHORE1</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SEMAPHORE1</name>
                                <description>General Purpose Semaphore for SW Usage. If any of the 2 bits of a given register is set to 1, it means that the semaphore is locked by one of the masters. Each bit represents a master IP as follows: {WLAN,NWP}. The JTAG cannot capture the semaphore but it can release it. As a master IP reads the semaphore, it will be caputed and the masters correlating bit will be set to 1 (set upon read). As any IP writes to this address (independent of the written data) the semaphore will be set to 2'b00.</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SEMAPHORE2</name>
                        <displayName>OCP_SHARED_SEMAPHORE2</displayName>
                        <description>SEMAPHORE2</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SEMAPHORE2</name>
                                <description>General Purpose Semaphore for SW Usage. If any of the 2 bits of a given register is set to 1, it means that the semaphore is locked by one of the masters. Each bit represents a master IP as follows: {WLAN,NWP}. The JTAG cannot capture the semaphore but it can release it. As a master IP reads the semaphore, it will be caputed and the masters correlating bit will be set to 1 (set upon read). As any IP writes to this address (independent of the written data) the semaphore will be set to 2'b00.</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SEMAPHORE3</name>
                        <displayName>OCP_SHARED_SEMAPHORE3</displayName>
                        <description>SEMAPHORE3</description>
                        <addressOffset>0x8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SEMAPHORE3</name>
                                <description>General Purpose Semaphore for SW Usage. If any of the 2 bits of a given register is set to 1, it means that the semaphore is locked by one of the masters. Each bit represents a master IP as follows: {WLAN,NWP}. The JTAG cannot capture the semaphore but it can release it. As a master IP reads the semaphore, it will be caputed and the masters correlating bit will be set to 1 (set upon read). As any IP writes to this address (independent of the written data) the semaphore will be set to 2'b00.</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SEMAPHORE4</name>
                        <displayName>OCP_SHARED_SEMAPHORE4</displayName>
                        <description>SEMAPHORE4</description>
                        <addressOffset>0xC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SEMAPHORE4</name>
                                <description>General Purpose Semaphore for SW Usage. If any of the 2 bits of a given register is set to 1, it means that the semaphore is locked by one of the masters. Each bit represents a master IP as follows: {WLAN,NWP}. The JTAG cannot capture the semaphore but it can release it. As a master IP reads the semaphore, it will be caputed and the masters correlating bit will be set to 1 (set upon read). As any IP writes to this address (independent of the written data) the semaphore will be set to 2'b00.</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SEMAPHORE5</name>
                        <displayName>OCP_SHARED_SEMAPHORE5</displayName>
                        <description>SEMAPHORE5</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SEMAPHORE5</name>
                                <description>General Purpose Semaphore for SW Usage. If any of the 2 bits of a given register is set to 1, it means that the semaphore is locked by one of the masters. Each bit represents a master IP as follows: {WLAN,NWP}. The JTAG cannot capture the semaphore but it can release it. As a master IP reads the semaphore, it will be caputed and the masters correlating bit will be set to 1 (set upon read). As any IP writes to this address (independent of the written data) the semaphore will be set to 2'b00.</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SEMAPHORE6</name>
                        <displayName>OCP_SHARED_SEMAPHORE6</displayName>
                        <description>SEMAPHORE6</description>
                        <addressOffset>0x14</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SEMAPHORE6</name>
                                <description>General Purpose Semaphore for SW Usage. If any of the 2 bits of a given register is set to 1, it means that the semaphore is locked by one of the masters. Each bit represents a master IP as follows: {WLAN,NWP}. The JTAG cannot capture the semaphore but it can release it. As a master IP reads the semaphore, it will be caputed and the masters correlating bit will be set to 1 (set upon read). As any IP writes to this address (independent of the written data) the semaphore will be set to 2'b00.</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SEMAPHORE7</name>
                        <displayName>OCP_SHARED_SEMAPHORE7</displayName>
                        <description>SEMAPHORE7</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SEMAPHORE7</name>
                                <description>General Purpose Semaphore for SW Usage. If any of the 2 bits of a given register is set to 1, it means that the semaphore is locked by one of the masters. Each bit represents a master IP as follows: {WLAN,NWP}. The JTAG cannot capture the semaphore but it can release it. As a master IP reads the semaphore, it will be caputed and the masters correlating bit will be set to 1 (set upon read). As any IP writes to this address (independent of the written data) the semaphore will be set to 2'b00.</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SEMAPHORE8</name>
                        <displayName>OCP_SHARED_SEMAPHORE8</displayName>
                        <description>SEMAPHORE8</description>
                        <addressOffset>0x1C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SEMAPHORE8</name>
                                <description>General Purpose Semaphore for SW Usage. If any of the 2 bits of a given register is set to 1, it means that the semaphore is locked by one of the masters. Each bit represents a master IP as follows: {WLAN,NWP}. The JTAG cannot capture the semaphore but it can release it. As a master IP reads the semaphore, it will be caputed and the masters correlating bit will be set to 1 (set upon read). As any IP writes to this address (independent of the written data) the semaphore will be set to 2'b00.</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SEMAPHORE9</name>
                        <displayName>OCP_SHARED_SEMAPHORE9</displayName>
                        <description>SEMAPHORE9</description>
                        <addressOffset>0x20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SEMAPHORE9</name>
                                <description>General Purpose Semaphore for SW Usage. If any of the 2 bits of a given register is set to 1, it means that the semaphore is locked by one of the masters. Each bit represents a master IP as follows: {WLAN,NWP}. The JTAG cannot capture the semaphore but it can release it. As a master IP reads the semaphore, it will be caputed and the masters correlating bit will be set to 1 (set upon read). As any IP writes to this address (independent of the written data) the semaphore will be set to 2'b00.</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SEMAPHORE10</name>
                        <displayName>OCP_SHARED_SEMAPHORE10</displayName>
                        <description>SEMAPHORE10</description>
                        <addressOffset>0x24</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SEMAPHORE10</name>
                                <description>General Purpose Semaphore for SW Usage. If any of the 2 bits of a given register is set to 1, it means that the semaphore is locked by one of the masters. Each bit represents a master IP as follows: {WLAN,NWP}. The JTAG cannot capture the semaphore but it can release it. As a master IP reads the semaphore, it will be caputed and the masters correlating bit will be set to 1 (set upon read). As any IP writes to this address (independent of the written data) the semaphore will be set to 2'b00.</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SEMAPHORE11</name>
                        <displayName>OCP_SHARED_SEMAPHORE11</displayName>
                        <description>SEMAPHORE11</description>
                        <addressOffset>0x28</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SEMAPHORE11</name>
                                <description>General Purpose Semaphore for SW Usage. If any of the 2 bits of a given register is set to 1, it means that the semaphore is locked by one of the masters. Each bit represents a master IP as follows: {WLAN,NWP}. The JTAG cannot capture the semaphore but it can release it. As a master IP reads the semaphore, it will be caputed and the masters correlating bit will be set to 1 (set upon read). As any IP writes to this address (independent of the written data) the semaphore will be set to 2'b00.</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SEMAPHORE12</name>
                        <displayName>OCP_SHARED_SEMAPHORE12</displayName>
                        <description>SEMAPHORE12</description>
                        <addressOffset>0x2C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SEMAPHORE12</name>
                                <description>General Purpose Semaphore for SW Usage. If any of the 2 bits of a given register is set to 1, it means that the semaphore is locked by one of the masters. Each bit represents a master IP as follows: {WLAN,NWP}. The JTAG cannot capture the semaphore but it can release it. As a master IP reads the semaphore, it will be caputed and the masters correlating bit will be set to 1 (set upon read). As any IP writes to this address (independent of the written data) the semaphore will be set to 2'b00.</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>IC_LOCKER_ID</name>
                        <displayName>OCP_SHARED_IC_LOCKER_ID</displayName>
                        <description>IC_LOCKER_ID</description>
                        <addressOffset>0x30</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_IC_LOCKER_ID</name>
                                <description>This register is used for allowing only one master OCP to perform write transactions to the OCP slaves. Each bit represents an IP in the following format: { JTAG,WLAN, NWP mcu}. As any of the bits is set to one, the correlating IP is preventing the other IP's from performing write transactions to the slaves. As the Inter Connect is locked, the only the locking IP can write to the register and by that releasing the lock. 3'b000 =&gt; IC is not locked. 3'b001 =&gt; IC is locked by NWP mcu. 3'b010 =&gt; IC is locked by WLAN. 3'b100 =&gt; IC is locked by JTAG.</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MCU_SEMAPHORE_PEND</name>
                        <displayName>OCP_SHARED_MCU_SEMAPHORE_PEND</displayName>
                        <description>MCU_SEMAPHORE_PEND</description>
                        <addressOffset>0x34</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_MCU_SEMAPHORE_PEND</name>
                                <description>This register specifies the semaphore for which the NWP mcu is waiting to be released. It is set to the serial number of a given locked semaphore after it was read by the NWP mcu. Only [11:0] is used.</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>WL_SEMAPHORE_PEND</name>
                        <displayName>OCP_SHARED_WL_SEMAPHORE_PEND</displayName>
                        <description>WL_SEMAPHORE_PEND</description>
                        <addressOffset>0x38</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_WL_SEMAPHORE_PEND</name>
                                <description>This register specifies the semaphore for which the WLAN is waiting to be released. It is set to the serial number of a given locked semaphore after it was read by the WLAN. Only [11:0] is used.</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>PLATFORM_DETECTION_RD_ONLY</name>
                        <displayName>OCP_SHARED_PLATFORM_DETECTION_RD_ONLY</displayName>
                        <description>PLATFORM_DETECTION_RD_ONLY</description>
                        <addressOffset>0x3C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>PLATFORM_DETECTION</name>
                                <description>This information serves the IPs for knowing in which platform are they integrated at: 0 = CC31XX.</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SEMAPHORES_STATUS_RD_ONLY</name>
                        <displayName>OCP_SHARED_SEMAPHORES_STATUS_RD_ONLY</displayName>
                        <description>SEMAPHORES_STATUS_RD_ONLY</description>
                        <addressOffset>0x40</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SEMAPHORES_STATUS</name>
                                <description>Captured/released semaphores status for the 12 semaphores. Each bit of the 12 bits represents a semaphore. 0 =&gt; Semaphore Free. 1 =&gt; Semaphore Captured.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CC3XX_CONFIG_CTRL</name>
                        <displayName>OCP_SHARED_CC3XX_CONFIG_CTRL</displayName>
                        <description>CC3XX_CONFIG_CTRL</description>
                        <addressOffset>0x44</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CC3XX_SHARED_MEM_SEL_LSB</name>
                        <displayName>OCP_SHARED_CC3XX_SHARED_MEM_SEL_LSB</displayName>
                        <description>CC3XX_SHARED_MEM_SEL_LSB</description>
                        <addressOffset>0x48</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SHARED_MEM_SEL_LSB</name>
                                <description>This register provides memss RAM column configuration for column 0 to 9. 3 bits are allocated per column. This register is required to be configured before starting RAM access. Changing register setting while code is running will result into unpredictable memory behaviour. Register is supported to configured ones after core is booted up. 3 bit encoding per column is as follows: when 000 : WLAN, 001: NWP, 010: APPS, 011: PHY, 100: OCLA column 0 select: bit [2:0] :when 000 -&gt; WLAN,001 -&gt; NWP,010 -&gt; APPS, 011 -&gt; PHY, 100 -&gt; OCLA column 1 select: bit [5:3] :column 2 select: bit [8 : 6]: column 3 select : bit [11: 9] column 4 select : bit [14:12] column 5 select : bit [17:15] column 6 select : bit [20:18] column 7 select : bit [23:21] column 8 select : bit [26:24] column 9 select : bit [29:27] column 10 select</description>
                                <lsb>0</lsb>
                                <msb>29</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CC3XX_SHARED_MEM_SEL_MSB</name>
                        <displayName>OCP_SHARED_CC3XX_SHARED_MEM_SEL_MSB</displayName>
                        <description>CC3XX_SHARED_MEM_SEL_MSB</description>
                        <addressOffset>0x4C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SHARED_MEM_SEL_MSB</name>
                                <description>This register provides memss RAM column configuration for column 10 to 15. 3 bits are allocated per column. This register is required to be configured before starting RAM access. Changing register setting while code is running will result into unpredictable memory behaviour. Register is supported to configured ones after core is booted up. 3 bit encoding per column is as follows: when 000 : WLAN, 001: NWP, 010: APPS, 011: PHY, 100: OCLA column 11 select : bit [2:0] column 12 select : bit [5:3] column 13 select : bit [8 : 6] column 14 select :</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>WLAN_ELP_WAKE_EN</name>
                        <displayName>OCP_SHARED_WLAN_ELP_WAKE_EN</displayName>
                        <description>WLAN_ELP_WAKE_EN</description>
                        <addressOffset>0x50</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DEVINIT_ROM_START_ADDR</name>
                        <displayName>OCP_SHARED_DEVINIT_ROM_START_ADDR</displayName>
                        <description>DEVINIT_ROM_START_ADDR</description>
                        <addressOffset>0x54</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DEVINIT_ROM_END_ADDR</name>
                        <displayName>OCP_SHARED_DEVINIT_ROM_END_ADDR</displayName>
                        <description>DEVINIT_ROM_END_ADDR</description>
                        <addressOffset>0x58</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SSBD_SEED</name>
                        <displayName>OCP_SHARED_SSBD_SEED</displayName>
                        <description>SSBD_SEED</description>
                        <addressOffset>0x5C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SSBD_CHK</name>
                        <displayName>OCP_SHARED_SSBD_CHK</displayName>
                        <description>SSBD_CHK</description>
                        <addressOffset>0x60</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SSBD_POLY_SEL</name>
                        <displayName>OCP_SHARED_SSBD_POLY_SEL</displayName>
                        <description>SSBD_POLY_SEL</description>
                        <addressOffset>0x64</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SSBD_POLY_SEL</name>
                                <description>2 bit, Writable only during devinit, and whole 2 bit should be output of the config register module.</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SPARE_REG_0</name>
                        <displayName>OCP_SHARED_SPARE_REG_0</displayName>
                        <description>SPARE_REG_0</description>
                        <addressOffset>0x68</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SPARE_REG_1</name>
                        <displayName>OCP_SHARED_SPARE_REG_1</displayName>
                        <description>SPARE_REG_1</description>
                        <addressOffset>0x6C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SPARE_REG_2</name>
                        <displayName>OCP_SHARED_SPARE_REG_2</displayName>
                        <description>SPARE_REG_2</description>
                        <addressOffset>0x70</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SPARE_REG_3</name>
                        <displayName>OCP_SHARED_SPARE_REG_3</displayName>
                        <description>SPARE_REG_3</description>
                        <addressOffset>0x74</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_0</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_0</displayName>
                        <description>GPIO_PAD_CONFIG_0</description>
                        <addressOffset>0xA0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_0</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; &amp;quot;For example in case of I2C Value gets latched at rising edge of RET33.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_1</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_1</displayName>
                        <description>GPIO_PAD_CONFIG_1</description>
                        <addressOffset>0xA4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_1</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_2</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_2</displayName>
                        <description>GPIO_PAD_CONFIG_2</description>
                        <addressOffset>0xA8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_2</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_3</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_3</displayName>
                        <description>GPIO_PAD_CONFIG_3</description>
                        <addressOffset>0xAC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_3</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_4</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_4</displayName>
                        <description>GPIO_PAD_CONFIG_4</description>
                        <addressOffset>0xB0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_4</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_5</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_5</displayName>
                        <description>GPIO_PAD_CONFIG_5</description>
                        <addressOffset>0xB4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_5</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_6</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_6</displayName>
                        <description>GPIO_PAD_CONFIG_6</description>
                        <addressOffset>0xB8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_6</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_7</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_7</displayName>
                        <description>GPIO_PAD_CONFIG_7</description>
                        <addressOffset>0xBC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_7</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_8</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_8</displayName>
                        <description>GPIO_PAD_CONFIG_8</description>
                        <addressOffset>0xC0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_8</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_9</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_9</displayName>
                        <description>GPIO_PAD_CONFIG_9</description>
                        <addressOffset>0xC4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_9</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_10</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_10</displayName>
                        <description>GPIO_PAD_CONFIG_10</description>
                        <addressOffset>0xC8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_10</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_11</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_11</displayName>
                        <description>GPIO_PAD_CONFIG_11</description>
                        <addressOffset>0xCC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_11</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_12</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_12</displayName>
                        <description>GPIO_PAD_CONFIG_12</description>
                        <addressOffset>0xD0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_12</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_13</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_13</displayName>
                        <description>GPIO_PAD_CONFIG_13</description>
                        <addressOffset>0xD4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_13</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_14</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_14</displayName>
                        <description>GPIO_PAD_CONFIG_14</description>
                        <addressOffset>0xD8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_14</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_15</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_15</displayName>
                        <description>GPIO_PAD_CONFIG_15</description>
                        <addressOffset>0xDC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_15</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_16</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_16</displayName>
                        <description>GPIO_PAD_CONFIG_16</description>
                        <addressOffset>0xE0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_16</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_17</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_17</displayName>
                        <description>GPIO_PAD_CONFIG_17</description>
                        <addressOffset>0xE4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_17</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_18</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_18</displayName>
                        <description>GPIO_PAD_CONFIG_18</description>
                        <addressOffset>0xE8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_18</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_19</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_19</displayName>
                        <description>GPIO_PAD_CONFIG_19</description>
                        <addressOffset>0xEC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_19</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_20</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_20</displayName>
                        <description>GPIO_PAD_CONFIG_20</description>
                        <addressOffset>0xF0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_20</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_21</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_21</displayName>
                        <description>GPIO_PAD_CONFIG_21</description>
                        <addressOffset>0xF4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_21</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_22</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_22</displayName>
                        <description>GPIO_PAD_CONFIG_22</description>
                        <addressOffset>0xF8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_22</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_23</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_23</displayName>
                        <description>GPIO_PAD_CONFIG_23</description>
                        <addressOffset>0xFC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_23</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_24</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_24</displayName>
                        <description>GPIO_PAD_CONFIG_24</description>
                        <addressOffset>0x100</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_24</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_25</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_25</displayName>
                        <description>GPIO_PAD_CONFIG_25</description>
                        <addressOffset>0x104</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_25</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_26</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_26</displayName>
                        <description>GPIO_PAD_CONFIG_26</description>
                        <addressOffset>0x108</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_26</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_27</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_27</displayName>
                        <description>GPIO_PAD_CONFIG_27</description>
                        <addressOffset>0x10C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_27</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_28</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_28</displayName>
                        <description>GPIO_PAD_CONFIG_28</description>
                        <addressOffset>0x110</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_28</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_29</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_29</displayName>
                        <description>GPIO_PAD_CONFIG_29</description>
                        <addressOffset>0x114</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_29</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_30</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_30</displayName>
                        <description>GPIO_PAD_CONFIG_30</description>
                        <addressOffset>0x118</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_30</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_31</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_31</displayName>
                        <description>GPIO_PAD_CONFIG_31</description>
                        <addressOffset>0x11C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_31</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_32</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_32</displayName>
                        <description>GPIO_PAD_CONFIG_32</description>
                        <addressOffset>0x120</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_32</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; it can be used for I2C type of peripherals. 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_33</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_33</displayName>
                        <description>GPIO_PAD_CONFIG_33</description>
                        <addressOffset>0x124</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_33</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 5 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'. IODEN and I8MAEN is diesabled for all development IO's. These signals are tied to logic level '0'. common control is implemented for I2MAEN, I4MAEN, WKPU, WKPD control . refer dev_pad_cmn_config register bits.</description>
                                <lsb>0</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_34</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_34</displayName>
                        <description>GPIO_PAD_CONFIG_34</description>
                        <addressOffset>0x128</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_34</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 5 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'. IODEN and I8MAEN is diesabled for all development IO's. These signals are tied to logic level '0'. common control is implemented for I2MAEN, I4MAEN, WKPU, WKPD control . refer dev_pad_cmn_config register bits.</description>
                                <lsb>0</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_35</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_35</displayName>
                        <description>GPIO_PAD_CONFIG_35</description>
                        <addressOffset>0x12C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_35</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 5 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'. IODEN and I8MAEN is diesabled for all development IO's. These signals are tied to logic level '0'. common control is implemented for I2MAEN, I4MAEN, WKPU, WKPD control . refer dev_pad_cmn_config register bits.</description>
                                <lsb>0</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_36</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_36</displayName>
                        <description>GPIO_PAD_CONFIG_36</description>
                        <addressOffset>0x130</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_36</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 5 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'. IODEN and I8MAEN is diesabled for all development IO's. These signals are tied to logic level '0'. common control is implemented for I2MAEN, I4MAEN, WKPU, WKPD control . refer dev_pad_cmn_config register bits.</description>
                                <lsb>0</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_37</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_37</displayName>
                        <description>GPIO_PAD_CONFIG_37</description>
                        <addressOffset>0x134</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_37</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 5 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'. IODEN and I8MAEN is diesabled for all development IO's. These signals are tied to logic level '0'. common control is implemented for I2MAEN, I4MAEN, WKPU, WKPD control . refer dev_pad_cmn_config register bits.</description>
                                <lsb>0</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_38</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_38</displayName>
                        <description>GPIO_PAD_CONFIG_38</description>
                        <addressOffset>0x138</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_38</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 5 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'. IODEN and I8MAEN is diesabled for all development IO's. These signals are tied to logic level '0'. common control is implemented for I2MAEN, I4MAEN, WKPU, WKPD control . refer dev_pad_cmn_config register bits.</description>
                                <lsb>0</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_39</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_39</displayName>
                        <description>GPIO_PAD_CONFIG_39</description>
                        <addressOffset>0x13C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_39</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 5 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'. IODEN and I8MAEN is diesabled for all development IO's. These signals are tied to logic level '0'. common control is implemented for I2MAEN, I4MAEN, WKPU, WKPD control . refer dev_pad_cmn_config register bits.</description>
                                <lsb>0</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CONFIG_40</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CONFIG_40</displayName>
                        <description>GPIO_PAD_CONFIG_40</description>
                        <addressOffset>0x140</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_PAD_CONFIG_40</name>
                                <description>GPIO 0 register: &amp;quot;Bit 0 - 3 is used for PAD IO mode selection. io_register={ &amp;quot;&amp;quot; 0 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[0]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 1 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[1]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 2 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[2]&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot; 3 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;CONFMODE[3]&amp;quot;&amp;quot;&amp;quot;&amp;quot; 4 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IODEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; When level 1 this disables the PMOS xtors of the output stages making them open-drain type.&amp;quot; &amp;quot;For example in case of I2C Value gets latched at rising edge of RET33.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 5 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I2MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 2mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 6 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I4MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 4mA output stage&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 7 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;I8MAEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; Level 1 enables the approx 8mA output stage. Note: any drive strength between 2mA and 14mA can be obtained with combination of 2mA 4mA and 8mA.&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 8 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPUEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull up (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 9 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IWKPDEN&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; 10uA pull down (weak strength)&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 10 =&gt; &amp;quot;&amp;quot;&amp;quot;&amp;quot;IOE_N&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable value. level 0 enables the IDO to PAD path. Else PAD is tristated (except for the PU/PD which are independent).&amp;quot; &amp;quot;Value gets latched at rising edge of RET33&amp;quot;&amp;quot;&amp;quot; &amp;quot;&amp;quot;&amp;quot; 11 =&gt;&amp;quot;&amp;quot;&amp;quot;&amp;quot; IOE_N_OV&amp;quot;&amp;quot;&amp;quot;&amp;quot; --&gt; output enable overirde. when bit is set to logic '1' IOE_N (bit 4) value will control IO IOE_N signal else IOE_N is control via selected HW logic. strong PULL UP and PULL Down control is disabled for all IO's. both controls are tied to logic level '0'.</description>
                                <lsb>0</lsb>
                                <msb>18</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>GPIO_PAD_CMN_CONFIG</name>
                        <displayName>OCP_SHARED_GPIO_PAD_CMN_CONFIG</displayName>
                        <description>This register provide control to GPIO_CC3XXV1 IO PAD. Common control signals to all bottom Die IO's are controlled via this.</description>
                        <addressOffset>0x144</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_PAD_HYSTVAL</name>
                                <description>00: hysteriris = 10% of VDDS (difference between upper and lower threshold of the schmit trigger) 01: hysteriris = 20% of VDDS (difference between upper and lower threshold of the schmit trigger) 10: hysteriris = 30% of VDDS (difference between upper and lower threshold of the schmit trigger) 11: hysteriris = 40% of VDDS (difference between upper and lower threshold of the schmit trigger)&amp;quot; &amp;quot;&amp;quot;&amp;quot;</description>
                                <lsb>3</lsb>
                                <msb>4</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>D2D_DEV_PAD_CMN_CONFIG</name>
                        <displayName>OCP_SHARED_D2D_DEV_PAD_CMN_CONFIG</displayName>
                        <description>D2D_DEV_PAD_CMN_CONFIG</description>
                        <addressOffset>0x148</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_DEV_PAD_CMN_CONF</name>
                                <description>this register implements common IO control to all devement mode PADs; these PADs are DEV_PAD33 to DEV_PAD39. Bit [1:0] : Drive strength control. These 2 bits are connected to DEV PAD drive strength control. possible drive stregnths are 2MA, 4MA and 6 MA for the these IO's. bit 0: when set to logic value '1' enable 2MA drive strength for DEVPAD01 to 07 bit 1: when set to logic value '1' enable 4MA drive strength for DEVPAD01 to 07. bit[3:2] : WK PULL UP and PULL down control. These 2 bits provide IWKPUEN and IWKPDEN control for all DEV IO's. bit 2: when set to logic value '1' enable WKPU to DEVPAD01 to 07 bit 3: when set to logic value '1' enable WKPD to DEVPAD01 to 07. bit 4: WK PULL control for DEV_PKG_DETECT pin. when '1' pullup enabled else it is disable. bit 5: when set to logic value '1' enable 8MA drive strength for DEVPAD01 to 07.</description>
                                <lsb>0</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>D2D_TOSTACK_PAD_CONF</name>
                        <displayName>OCP_SHARED_D2D_TOSTACK_PAD_CONF</displayName>
                        <description>D2D_TOSTACK_PAD_CONF</description>
                        <addressOffset>0x14C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_D2D_TOSTACK_PAD_CONF</name>
                                <description>OEN/OEN2X control. When 0 : Act as input buffer else output buffer with drive strength 2. this register control OEN2X pin of D2D TOSTACK PAD: OEN1X and OEN2X decoding is as follows: &amp;quot;when &amp;quot;&amp;quot;00&amp;quot;&amp;quot; :&amp;quot; &amp;quot;when &amp;quot;&amp;quot;01&amp;quot;&amp;quot; : dirve strength is '1' and output buffer enabled.&amp;quot; &amp;quot;when &amp;quot;&amp;quot;10&amp;quot;&amp;quot; : drive strength is 2 and output buffer is disabled.&amp;quot; &amp;quot;when &amp;quot;&amp;quot;11&amp;quot;&amp;quot; : dirve strength is '3' and output buffer enabled.&amp;quot;</description>
                                <lsb>0</lsb>
                                <msb>28</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>D2D_MISC_PAD_CONF</name>
                        <displayName>OCP_SHARED_D2D_MISC_PAD_CONF</displayName>
                        <description>D2D_MISC_PAD_CONF</description>
                        <addressOffset>0x150</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_D2D_SPARE</name>
                                <description>D2D SPARE PAD OEN/OEN2X control. When 0: Act as input buffer else output buffer with drive strength 2.</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SOP_CONF_OVERRIDE</name>
                        <displayName>OCP_SHARED_SOP_CONF_OVERRIDE</displayName>
                        <description>SOP_CONF_OVERRIDE</description>
                        <addressOffset>0x154</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CC3XX_DEBUGSS_STATUS</name>
                        <displayName>OCP_SHARED_CC3XX_DEBUGSS_STATUS</displayName>
                        <description>CC3XX_DEBUGSS_STATUS</description>
                        <addressOffset>0x158</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CC3XX_DEBUGMUX_SEL</name>
                        <displayName>OCP_SHARED_CC3XX_DEBUGMUX_SEL</displayName>
                        <description>CC3XX_DEBUGMUX_SEL</description>
                        <addressOffset>0x15C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_CC3XX_DEBUGMUX_SEL</name>
                                <description>debug mux select register. Upper 8 bits are used for debug module selection. Lower 8 bit [7:0] used inside debug module for selecting module specific signals. Bits[15:8: when set x&amp;quot;00&amp;quot; : GPRCM debug bus. When &amp;quot;o1&amp;quot; : SDIO debug debug bus when x&amp;quot;02&amp;quot; : autonoumous SPI when x&amp;quot;03&amp;quot; : TOPIC when x&amp;quot;04&amp;quot;: memss when x&amp;quot;25&amp;quot;: mcu debug bus : APPS debug when x&amp;quot;45&amp;quot;: mcu debug bus : NWP debug when x&amp;quot;65&amp;quot;: mcu debug bus : AHB2VBUS debug when x&amp;quot;85&amp;quot;: mcu debug bus : VBUS2HAB debug when x&amp;quot;95&amp;quot;: mcu debug bus : RCM debug when x&amp;quot;A5&amp;quot;: mcu debug bus : crypto debug when x&amp;quot;06&amp;quot;: WLAN debug bus when x&amp;quot;07&amp;quot;: debugss bus when x&amp;quot;08&amp;quot;: ADC debug when x&amp;quot;09&amp;quot;: SDIO PHY debug bus then &amp;quot;others&amp;quot; : no debug is selected</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>ALT_PC_VAL_NW</name>
                        <displayName>OCP_SHARED_ALT_PC_VAL_NW</displayName>
                        <description>ALT_PC_VAL_NW</description>
                        <addressOffset>0x160</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ALT_PC_VAL_APPS</name>
                        <displayName>OCP_SHARED_ALT_PC_VAL_APPS</displayName>
                        <description>ALT_PC_VAL_APPS</description>
                        <addressOffset>0x164</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SPARE_REG_4</name>
                        <displayName>OCP_SHARED_SPARE_REG_4</displayName>
                        <description>SPARE_REG_4</description>
                        <addressOffset>0x168</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SPARE_REG_4</name>
                                <description>HW register</description>
                                <lsb>1</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SPARE_REG_5</name>
                        <displayName>OCP_SHARED_SPARE_REG_5</displayName>
                        <description>SPARE_REG_5</description>
                        <addressOffset>0x16C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SH_SPI_CS_MASK</name>
                        <displayName>OCP_SHARED_SH_SPI_CS_MASK</displayName>
                        <description>SH_SPI_CS_MASK</description>
                        <addressOffset>0x170</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SH_SPI_CS_MASK</name>
                                <description>( chip select 0 is unmasked after reset. When 1 : CS is unmasked or else masked. Valid configurations are 1000, 0100, 0010 or 0001. Any other setting can lead to unpredictable behavior.</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CC3XX_DEVICE_TYPE</name>
                        <displayName>OCP_SHARED_CC3XX_DEVICE_TYPE</displayName>
                        <description>CC3XX_DEVICE_TYPE</description>
                        <addressOffset>0x174</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>DEVICE_TYPE</name>
                                <description>CC3XX Device type information.</description>
                                <lsb>0</lsb>
                                <msb>4</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_TOPMUXCTRL_IFORCE</name>
                        <displayName>OCP_SHARED_MEM_TOPMUXCTRL_IFORCE</displayName>
                        <description>MEM_TOPMUXCTRL_IFORCE</description>
                        <addressOffset>0x178</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_TOPMUXCTRL_IFORCE1</name>
                                <description>[4] 1: switch between WLAN_I2C_SCL and TOP_GPIO_PORT4_I2C closes 0: switch opens [5] 1: switch between WLAN_I2C_SCL and TOP_VSENSE_PORT closes 0: switch opens [6] 1: switch between WLAN_I2C_SCL and WLAN_ANA_TP4 closes 0: switch opens [7] Reserved</description>
                                <lsb>4</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_TOPMUXCTRL_IFORCE</name>
                                <description>[0] 1: switch between WLAN_I2C_SDA and TOP_GPIO_PORT3_I2C closes 0: switch opens [1] 1: switch between WLAN_I2C_SDA and TOP_IFORCE_PORT closes 0: switch opens [2] 1: switch between WLAN_I2C_SDA and WLAN_ANA_TP3 closes 0: switch opens [3] Reserved</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CC3XX_DEV_PACKAGE_DETECT</name>
                        <displayName>OCP_SHARED_CC3XX_DEV_PACKAGE_DETECT</displayName>
                        <description>CC3XX_DEV_PACKAGE_DETECT</description>
                        <addressOffset>0x17C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>AUTONMS_SPICLK_SEL</name>
                        <displayName>OCP_SHARED_AUTONMS_SPICLK_SEL</displayName>
                        <description>AUTONMS_SPICLK_SEL</description>
                        <addressOffset>0x180</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CC3XX_DEV_PADCONF</name>
                        <displayName>OCP_SHARED_CC3XX_DEV_PADCONF</displayName>
                        <description>CC3XX_DEV_PADCONF</description>
                        <addressOffset>0x184</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_CC3XX_DEV_PADCONF</name>
                                <description>MEM_CC3XX_DEV_PADCONF</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SPARE_REG_8</name>
                        <displayName>OCP_SHARED_SPARE_REG_8</displayName>
                        <description>SPARE_REG_8</description>
                        <addressOffset>0x188</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SPARE_REG_6</name>
                        <displayName>OCP_SHARED_SPARE_REG_6</displayName>
                        <description>SPARE_REG_6</description>
                        <addressOffset>0x18C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SPARE_REG_7</name>
                        <displayName>OCP_SHARED_SPARE_REG_7</displayName>
                        <description>SPARE_REG_7</description>
                        <addressOffset>0x190</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APPS_WLAN_ORBIT</name>
                        <displayName>OCP_SHARED_APPS_WLAN_ORBIT</displayName>
                        <description>APPS_WLAN_ORBIT</description>
                        <addressOffset>0x194</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_ORBIT_SPARE</name>
                                <description>Spare bit</description>
                                <lsb>10</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_ORBIT_TEST_ID</name>
                                <description>Implies the test case ID that needs to run.</description>
                                <lsb>2</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>APPS_WLAN_SCRATCH_PAD</name>
                        <displayName>OCP_SHARED_APPS_WLAN_SCRATCH_PAD</displayName>
                        <description>APPS_WLAN_SCRATCH_PAD</description>
                        <addressOffset>0x198</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>ADC</name>
                <version>1.0</version>
                <description>ADC</description>
                <baseAddress>0x4402E800</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>CTRL</name>
                        <displayName>ADC_CTRL</displayName>
                        <description>ADC control register.</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH0_GAIN</name>
                        <displayName>ADC_CH0_GAIN</displayName>
                        <description>Channel 0 gain setting</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH1_GAIN</name>
                        <displayName>ADC_CH1_GAIN</displayName>
                        <description>Channel 1 gain setting</description>
                        <addressOffset>0x8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH2_GAIN</name>
                        <displayName>ADC_CH2_GAIN</displayName>
                        <description>Channel 2 gain setting</description>
                        <addressOffset>0xC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH3_GAIN</name>
                        <displayName>ADC_CH3_GAIN</displayName>
                        <description>Channel 3 gain setting</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH4_GAIN</name>
                        <displayName>ADC_CH4_GAIN</displayName>
                        <description>Channel 4 gain setting</description>
                        <addressOffset>0x14</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH5_GAIN</name>
                        <displayName>ADC_CH5_GAIN</displayName>
                        <description>Channel 5 gain setting</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH6_GAIN</name>
                        <displayName>ADC_CH6_GAIN</displayName>
                        <description>Channel 6 gain setting</description>
                        <addressOffset>0x1C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH7_GAIN</name>
                        <displayName>ADC_CH7_GAIN</displayName>
                        <description>Channel 7 gain setting</description>
                        <addressOffset>0x20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH0_IRQ_EN</name>
                        <displayName>ADC_CH0_IRQ_EN</displayName>
                        <description>Channel 0 interrupt enable register</description>
                        <addressOffset>0x24</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH1_IRQ_EN</name>
                        <displayName>ADC_CH1_IRQ_EN</displayName>
                        <description>Channel 1 interrupt enable register</description>
                        <addressOffset>0x28</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH2_IRQ_EN</name>
                        <displayName>ADC_CH2_IRQ_EN</displayName>
                        <description>Channel 2 interrupt enable register</description>
                        <addressOffset>0x2C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH3_IRQ_EN</name>
                        <displayName>ADC_CH3_IRQ_EN</displayName>
                        <description>Channel 3 interrupt enable register</description>
                        <addressOffset>0x30</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH4_IRQ_EN</name>
                        <displayName>ADC_CH4_IRQ_EN</displayName>
                        <description>Channel 4 interrupt enable register</description>
                        <addressOffset>0x34</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH5_IRQ_EN</name>
                        <displayName>ADC_CH5_IRQ_EN</displayName>
                        <description>Channel 5 interrupt enable register</description>
                        <addressOffset>0x38</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH6_IRQ_EN</name>
                        <displayName>ADC_CH6_IRQ_EN</displayName>
                        <description>Channel 6 interrupt enable register</description>
                        <addressOffset>0x3C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH7_IRQ_EN</name>
                        <displayName>ADC_CH7_IRQ_EN</displayName>
                        <description>Channel 7 interrupt enable register</description>
                        <addressOffset>0x40</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH0_IRQ_STATUS</name>
                        <displayName>ADC_CH0_IRQ_STATUS</displayName>
                        <description>Channel 0 interrupt status register</description>
                        <addressOffset>0x44</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH1_IRQ_STATUS</name>
                        <displayName>ADC_CH1_IRQ_STATUS</displayName>
                        <description>Channel 1 interrupt status register</description>
                        <addressOffset>0x48</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH2_IRQ_STATUS</name>
                        <displayName>ADC_CH2_IRQ_STATUS</displayName>
                        <description>CH2_IRQ_STATUS</description>
                        <addressOffset>0x4C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH3_IRQ_STATUS</name>
                        <displayName>ADC_CH3_IRQ_STATUS</displayName>
                        <description>Channel 3 interrupt status register</description>
                        <addressOffset>0x50</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH4_IRQ_STATUS</name>
                        <displayName>ADC_CH4_IRQ_STATUS</displayName>
                        <description>Channel 4 interrupt status register</description>
                        <addressOffset>0x54</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH5_IRQ_STATUS</name>
                        <displayName>ADC_CH5_IRQ_STATUS</displayName>
                        <description>CH5_IRQ_STATUS</description>
                        <addressOffset>0x58</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH6_IRQ_STATUS</name>
                        <displayName>ADC_CH6_IRQ_STATUS</displayName>
                        <description>Channel 6 interrupt status register</description>
                        <addressOffset>0x5C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH7_IRQ_STATUS</name>
                        <displayName>ADC_CH7_IRQ_STATUS</displayName>
                        <description>Channel 7 interrupt status register</description>
                        <addressOffset>0x60</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DMA_MODE_EN</name>
                        <displayName>ADC_DMA_MODE_EN</displayName>
                        <description>DMA mode enable register</description>
                        <addressOffset>0x64</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TIMER_CONFIGURATION</name>
                        <displayName>ADC_TIMER_CONFIGURATION</displayName>
                        <description>ADC timer configuration register</description>
                        <addressOffset>0x68</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TIMER_CURRENT_COUNT</name>
                        <displayName>ADC_TIMER_CURRENT_COUNT</displayName>
                        <description>ADC timer current count register</description>
                        <addressOffset>0x70</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CHANNEL0FIFODATA</name>
                        <displayName>ADC_CHANNEL0FIFODATA</displayName>
                        <description>CH0 FIFO DATA register</description>
                        <addressOffset>0x74</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CHANNEL1FIFODATA</name>
                        <displayName>ADC_CHANNEL1FIFODATA</displayName>
                        <description>CH1 FIFO DATA register</description>
                        <addressOffset>0x78</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CHANNEL2FIFODATA</name>
                        <displayName>ADC_CHANNEL2FIFODATA</displayName>
                        <description>CH2 FIFO DATA register</description>
                        <addressOffset>0x7C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CHANNEL3FIFODATA</name>
                        <displayName>ADC_CHANNEL3FIFODATA</displayName>
                        <description>CH3 FIFO DATA register</description>
                        <addressOffset>0x80</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CHANNEL4FIFODATA</name>
                        <displayName>ADC_CHANNEL4FIFODATA</displayName>
                        <description>CH4 FIFO DATA register</description>
                        <addressOffset>0x84</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CHANNEL5FIFODATA</name>
                        <displayName>ADC_CHANNEL5FIFODATA</displayName>
                        <description>CH5 FIFO DATA register</description>
                        <addressOffset>0x88</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CHANNEL6FIFODATA</name>
                        <displayName>ADC_CHANNEL6FIFODATA</displayName>
                        <description>CH6 FIFO DATA register</description>
                        <addressOffset>0x8C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CHANNEL7FIFODATA</name>
                        <displayName>ADC_CHANNEL7FIFODATA</displayName>
                        <description>CH7 FIFO DATA register</description>
                        <addressOffset>0x90</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH0_FIFO_LVL</name>
                        <displayName>ADC_CH0_FIFO_LVL</displayName>
                        <description>channel 0 FIFO Level register</description>
                        <addressOffset>0x94</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH1_FIFO_LVL</name>
                        <displayName>ADC_CH1_FIFO_LVL</displayName>
                        <description>Channel 1 interrupt status register</description>
                        <addressOffset>0x98</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH2_FIFO_LVL</name>
                        <displayName>ADC_CH2_FIFO_LVL</displayName>
                        <description>CH2_FIFO_LVL</description>
                        <addressOffset>0x9C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH3_FIFO_LVL</name>
                        <displayName>ADC_CH3_FIFO_LVL</displayName>
                        <description>Channel 3 interrupt status register</description>
                        <addressOffset>0xA0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH4_FIFO_LVL</name>
                        <displayName>ADC_CH4_FIFO_LVL</displayName>
                        <description>Channel 4 interrupt status register</description>
                        <addressOffset>0xA4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH5_FIFO_LVL</name>
                        <displayName>ADC_CH5_FIFO_LVL</displayName>
                        <description>CH5_FIFO_LVL</description>
                        <addressOffset>0xA8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH6_FIFO_LVL</name>
                        <displayName>ADC_CH6_FIFO_LVL</displayName>
                        <description>Channel 6 interrupt status register</description>
                        <addressOffset>0xAC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH7_FIFO_LVL</name>
                        <displayName>ADC_CH7_FIFO_LVL</displayName>
                        <description>Channel 7 interrupt status register</description>
                        <addressOffset>0xB0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CH_ENABLE</name>
                        <displayName>ADC_CH_ENABLE</displayName>
                        <description>CH_ENABLE</description>
                        <addressOffset>0xB8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>HIB1P2</name>
                <version>1.0</version>
                <description>HIB1P2</description>
                <baseAddress>0x4402F000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>SRAM_SKA_LDO_PARAMETERS0</name>
                        <displayName>HIB1P2_SRAM_SKA_LDO_PARAMETERS0</displayName>
                        <description>SRAM_SKA_LDO_PARAMETERS0</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SLDO_EN_SC_ITRIM_LOWV</name>
                                <description>MEM_SLDO_EN_SC_ITRIM_LOWV</description>
                                <lsb>30</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_SLDO_EN_IQ_TRIM_LOWV</name>
                                <description>MEM_SLDO_EN_IQ_TRIM_LOWV</description>
                                <lsb>28</lsb>
                                <msb>29</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_SLDO_VTRIM_LOWV</name>
                                <description>MEM_SLDO_VTRIM_LOWV</description>
                                <lsb>18</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_SLDO_SPARE_LOWV</name>
                                <description>MEM_SLDO_SPARE_LOWV</description>
                                <lsb>8</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NA1</name>
                                <description>NA1</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SRAM_SKA_LDO_PARAMETERS1</name>
                        <displayName>HIB1P2_SRAM_SKA_LDO_PARAMETERS1</displayName>
                        <description>SRAM_SKA_LDO_PARAMETERS1</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SKALDO_CTRL_LOWV</name>
                                <description>MEM_SKALDO_CTRL_LOWV</description>
                                <lsb>22</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_SKALDO_VTRIM_LOWV</name>
                                <description>MEM_SKALDO_VTRIM_LOWV</description>
                                <lsb>16</lsb>
                                <msb>21</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NA2</name>
                                <description>NA2</description>
                                <lsb>0</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DIG_DCDC_PARAMETERS0</name>
                        <displayName>HIB1P2_DIG_DCDC_PARAMETERS0</displayName>
                        <description>DIG_DCDC_PARAMETERS0</description>
                        <addressOffset>0x8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_DCDC_DIG_VTRIM_LOWV_OVERRIDE</name>
                                <description>Override value for DCDC_DIG_VTRIM : Applicable only when bit [27] of DIG_DCDC_PARAMETERS1 [0x000C] is set to 1.</description>
                                <lsb>16</lsb>
                                <msb>21</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_DIG_PFM_RIPPLE_TRIM_LOWV</name>
                                <description>MEM_DCDC_DIG_PFM_RIPPLE_TRIM_LOWV</description>
                                <lsb>14</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_DIG_IQ_CTRL_LOWV</name>
                                <description>MEM_DCDC_DIG_IQ_CTRL_LOWV</description>
                                <lsb>12</lsb>
                                <msb>13</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_DIG_NON_OV_CTRL_LOWV</name>
                                <description>MEM_DCDC_DIG_NON_OV_CTRL_LOWV</description>
                                <lsb>7</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_DIG_SLP_DRV_DLY_SEL_LOWV</name>
                                <description>MEM_DCDC_DIG_SLP_DRV_DLY_SEL_LOWV</description>
                                <lsb>3</lsb>
                                <msb>6</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NA3</name>
                                <description>NA3</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DIG_DCDC_PARAMETERS1</name>
                        <displayName>HIB1P2_DIG_DCDC_PARAMETERS1</displayName>
                        <description>DIG_DCDC_PARAMETERS1</description>
                        <addressOffset>0xC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>NA4</name>
                                <description>NA4</description>
                                <lsb>0</lsb>
                                <msb>24</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DIG_DCDC_PARAMETERS2</name>
                        <displayName>HIB1P2_DIG_DCDC_PARAMETERS2</displayName>
                        <description>DIG_DCDC_PARAMETERS2</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_DCDC_DIG_PFET_SEL_LOWV</name>
                                <description>MEM_DCDC_DIG_PFET_SEL_LOWV</description>
                                <lsb>28</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_DIG_NFET_SEL_LOWV</name>
                                <description>MEM_DCDC_DIG_NFET_SEL_LOWV</description>
                                <lsb>24</lsb>
                                <msb>27</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_DIG_PDRV_STAGGER_CTRL_LOWV</name>
                                <description>MEM_DCDC_DIG_PDRV_STAGGER_CTRL_LOWV</description>
                                <lsb>22</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_DIG_NDRV_STAGGER_CTRL_LOWV</name>
                                <description>MEM_DCDC_DIG_NDRV_STAGGER_CTRL_LOWV</description>
                                <lsb>20</lsb>
                                <msb>21</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_DIG_PDRV_STR_SEL_LOWV</name>
                                <description>MEM_DCDC_DIG_PDRV_STR_SEL_LOWV</description>
                                <lsb>16</lsb>
                                <msb>19</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_DIG_NDRV_STR_SEL_LOWV</name>
                                <description>MEM_DCDC_DIG_NDRV_STR_SEL_LOWV</description>
                                <lsb>11</lsb>
                                <msb>14</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_DIG_TON_TRIM_LOWV</name>
                                <description>MEM_DCDC_DIG_TON_TRIM_LOWV</description>
                                <lsb>2</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DIG_DCDC_PARAMETERS3</name>
                        <displayName>HIB1P2_DIG_DCDC_PARAMETERS3</displayName>
                        <description>DIG_DCDC_PARAMETERS3</description>
                        <addressOffset>0x14</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_DCDC_DIG_COT_CTRL_LOWV</name>
                                <description>MEM_DCDC_DIG_COT_CTRL_LOWV</description>
                                <lsb>23</lsb>
                                <msb>30</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_DIG_ILIM_TRIM_LOWV_OVERRIDE</name>
                                <description>Override value for DCDC_DIG_ILIM_TRIM : Applicable only when bit [25] of DIG_DCDC_PARAMETERS1 [0x000C] is set to 1</description>
                                <lsb>13</lsb>
                                <msb>20</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_DIG_ILIM_MASK_DLY_SEL_LOWV</name>
                                <description>MEM_DCDC_DIG_ILIM_MASK_DLY_SEL_LOWV</description>
                                <lsb>11</lsb>
                                <msb>12</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_DIG_NCOMP_TRIM_LOWV</name>
                                <description>MEM_DCDC_DIG_NCOMP_TRIM_LOWV</description>
                                <lsb>4</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_DIG_NCOMP_MASK_DLY_SEL_LOWV</name>
                                <description>MEM_DCDC_DIG_NCOMP_MASK_DLY_SEL_LOWV</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DIG_DCDC_PARAMETERS4</name>
                        <displayName>HIB1P2_DIG_DCDC_PARAMETERS4</displayName>
                        <description>DIG_DCDC_PARAMETERS4</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>NA7</name>
                                <description>NA7</description>
                                <lsb>0</lsb>
                                <msb>28</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DIG_DCDC_PARAMETERS5</name>
                        <displayName>HIB1P2_DIG_DCDC_PARAMETERS5</displayName>
                        <description>DIG_DCDC_PARAMETERS5</description>
                        <addressOffset>0x1C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DIG_DCDC_PARAMETERS6</name>
                        <displayName>HIB1P2_DIG_DCDC_PARAMETERS6</displayName>
                        <description>DIG_DCDC_PARAMETERS6</description>
                        <addressOffset>0x20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ANA_DCDC_PARAMETERS0</name>
                        <displayName>HIB1P2_ANA_DCDC_PARAMETERS0</displayName>
                        <description>ANA_DCDC_PARAMETERS0</description>
                        <addressOffset>0x24</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_DCDC_ANA_VTRIM_LOWV</name>
                                <description>MEM_DCDC_ANA_VTRIM_LOWV</description>
                                <lsb>17</lsb>
                                <msb>20</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_ANA_PFM_RIPPLE_TRIM_LOWV</name>
                                <description>MEM_DCDC_ANA_PFM_RIPPLE_TRIM_LOWV</description>
                                <lsb>15</lsb>
                                <msb>16</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_ANA_IQ_CTRL_LOWV</name>
                                <description>MEM_DCDC_ANA_IQ_CTRL_LOWV</description>
                                <lsb>13</lsb>
                                <msb>14</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_ANA_NON_OV_CTRL_LOWV</name>
                                <description>MEM_DCDC_ANA_NON_OV_CTRL_LOWV</description>
                                <lsb>8</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_ANA_SLP_DRV_DLY_SEL_LOWV</name>
                                <description>MEM_DCDC_ANA_SLP_DRV_DLY_SEL_LOWV</description>
                                <lsb>4</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_ANA_PFET_SEL_LOWV</name>
                                <description>MEM_DCDC_ANA_PFET_SEL_LOWV</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>ANA_DCDC_PARAMETERS1</name>
                        <displayName>HIB1P2_ANA_DCDC_PARAMETERS1</displayName>
                        <description>ANA_DCDC_PARAMETERS1</description>
                        <addressOffset>0x28</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_DCDC_ANA_NFET_SEL_LOWV</name>
                                <description>MEM_DCDC_ANA_NFET_SEL_LOWV</description>
                                <lsb>28</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_ANA_PDRV_STAGGER_CTRL_LOWV</name>
                                <description>MEM_DCDC_ANA_PDRV_STAGGER_CTRL_LOWV</description>
                                <lsb>26</lsb>
                                <msb>27</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_ANA_NDRV_STAGGER_CTRL_LOWV</name>
                                <description>MEM_DCDC_ANA_NDRV_STAGGER_CTRL_LOWV</description>
                                <lsb>24</lsb>
                                <msb>25</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_ANA_PDRV_STR_SEL_LOWV</name>
                                <description>MEM_DCDC_ANA_PDRV_STR_SEL_LOWV</description>
                                <lsb>20</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_ANA_NDRV_STR_SEL_LOWV</name>
                                <description>MEM_DCDC_ANA_NDRV_STR_SEL_LOWV</description>
                                <lsb>16</lsb>
                                <msb>19</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_ANA_RAMP_HGT_LOWV</name>
                                <description>MEM_DCDC_ANA_RAMP_HGT_LOWV</description>
                                <lsb>9</lsb>
                                <msb>13</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_ANA_HI_CLAMP_TRIM_LOWV</name>
                                <description>MEM_DCDC_ANA_HI_CLAMP_TRIM_LOWV</description>
                                <lsb>5</lsb>
                                <msb>6</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_ANA_LO_CLAMP_TRIM_LOWV</name>
                                <description>MEM_DCDC_ANA_LO_CLAMP_TRIM_LOWV</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NA8</name>
                                <description>NA8</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>ANA_DCDC_PARAMETERS16</name>
                        <displayName>HIB1P2_ANA_DCDC_PARAMETERS16</displayName>
                        <description>ANA_DCDC_PARAMETERS16</description>
                        <addressOffset>0x64</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_DCDC_ANA_ILIM_TRIM_LOWV_OVERRIDE</name>
                                <description>MEM_DCDC_ANA_ILIM_TRIM_LOWV_OVERRIDE</description>
                                <lsb>12</lsb>
                                <msb>19</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_ANA_ILIM_MASK_DLY_SEL_LOWV</name>
                                <description>MEM_DCDC_ANA_ILIM_MASK_DLY_SEL_LOWV</description>
                                <lsb>10</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_ANA_NCOMP_TRIM_LOWV</name>
                                <description>MEM_DCDC_ANA_NCOMP_TRIM_LOWV</description>
                                <lsb>3</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_ANA_NCOMP_MASK_DLY_SEL_LOWV</name>
                                <description>MEM_DCDC_ANA_NCOMP_MASK_DLY_SEL_LOWV</description>
                                <lsb>1</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>ANA_DCDC_PARAMETERS17</name>
                        <displayName>HIB1P2_ANA_DCDC_PARAMETERS17</displayName>
                        <description>ANA_DCDC_PARAMETERS17</description>
                        <addressOffset>0x68</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>NA17</name>
                                <description>NA17</description>
                                <lsb>0</lsb>
                                <msb>29</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>ANA_DCDC_PARAMETERS18</name>
                        <displayName>HIB1P2_ANA_DCDC_PARAMETERS18</displayName>
                        <description>ANA_DCDC_PARAMETERS18</description>
                        <addressOffset>0x6C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ANA_DCDC_PARAMETERS19</name>
                        <displayName>HIB1P2_ANA_DCDC_PARAMETERS19</displayName>
                        <description>ANA_DCDC_PARAMETERS19</description>
                        <addressOffset>0x70</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FLASH_DCDC_PARAMETERS0</name>
                        <displayName>HIB1P2_FLASH_DCDC_PARAMETERS0</displayName>
                        <description>FLASH_DCDC_PARAMETERS0</description>
                        <addressOffset>0x74</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_DCDC_FLASH_IQ_CTRL_LOWV</name>
                                <description>MEM_DCDC_FLASH_IQ_CTRL_LOWV</description>
                                <lsb>27</lsb>
                                <msb>28</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_NON_OV_CTRL_LOWV</name>
                                <description>MEM_DCDC_FLASH_NON_OV_CTRL_LOWV</description>
                                <lsb>18</lsb>
                                <msb>21</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_P1FET_SEL_LOWV</name>
                                <description>MEM_DCDC_FLASH_P1FET_SEL_LOWV</description>
                                <lsb>5</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_N1FET_SEL_LOWV</name>
                                <description>MEM_DCDC_FLASH_N1FET_SEL_LOWV</description>
                                <lsb>1</lsb>
                                <msb>4</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>FLASH_DCDC_PARAMETERS1</name>
                        <displayName>HIB1P2_FLASH_DCDC_PARAMETERS1</displayName>
                        <description>FLASH_DCDC_PARAMETERS1</description>
                        <addressOffset>0x78</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_DCDC_FLASH_P2FET_SEL_LOWV</name>
                                <description>MEM_DCDC_FLASH_P2FET_SEL_LOWV</description>
                                <lsb>28</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_N2FET_SEL_LOWV</name>
                                <description>MEM_DCDC_FLASH_N2FET_SEL_LOWV</description>
                                <lsb>24</lsb>
                                <msb>27</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_P1DRV_STR_SEL_LOWV</name>
                                <description>MEM_DCDC_FLASH_P1DRV_STR_SEL_LOWV</description>
                                <lsb>20</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_N1DRV_STR_SEL_LOWV</name>
                                <description>MEM_DCDC_FLASH_N1DRV_STR_SEL_LOWV</description>
                                <lsb>16</lsb>
                                <msb>19</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_P2DRV_STR_SEL_LOWV</name>
                                <description>MEM_DCDC_FLASH_P2DRV_STR_SEL_LOWV</description>
                                <lsb>12</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_N2DRV_STR_SEL_LOWV</name>
                                <description>MEM_DCDC_FLASH_N2DRV_STR_SEL_LOWV</description>
                                <lsb>8</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_P1FET_NON_OV_LOWV</name>
                                <description>MEM_DCDC_FLASH_P1FET_NON_OV_LOWV</description>
                                <lsb>6</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_N1FET_NON_OV_LOWV</name>
                                <description>MEM_DCDC_FLASH_N1FET_NON_OV_LOWV</description>
                                <lsb>4</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_P2FET_NON_OV_LOWV</name>
                                <description>MEM_DCDC_FLASH_P2FET_NON_OV_LOWV</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_N2FET_NON_OV_LOWV</name>
                                <description>MEM_DCDC_FLASH_N2FET_NON_OV_LOWV</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>FLASH_DCDC_PARAMETERS2</name>
                        <displayName>HIB1P2_FLASH_DCDC_PARAMETERS2</displayName>
                        <description>FLASH_DCDC_PARAMETERS2</description>
                        <addressOffset>0x7C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_DCDC_FLASH_P1FET_STAGGER_LOWV</name>
                                <description>MEM_DCDC_FLASH_P1FET_STAGGER_LOWV</description>
                                <lsb>30</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_N1FET_STAGGER_LOWV</name>
                                <description>MEM_DCDC_FLASH_N1FET_STAGGER_LOWV</description>
                                <lsb>28</lsb>
                                <msb>29</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_P2FET_STAGGER_LOWV</name>
                                <description>MEM_DCDC_FLASH_P2FET_STAGGER_LOWV</description>
                                <lsb>26</lsb>
                                <msb>27</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_N2FET_STAGGER_LOWV</name>
                                <description>MEM_DCDC_FLASH_N2FET_STAGGER_LOWV</description>
                                <lsb>24</lsb>
                                <msb>25</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_NCOMP_TRIM_LOWV</name>
                                <description>MEM_DCDC_FLASH_NCOMP_TRIM_LOWV</description>
                                <lsb>16</lsb>
                                <msb>20</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_NCOMP_MASK_DLY_TRIM_LOWV</name>
                                <description>MEM_DCDC_FLASH_NCOMP_MASK_DLY_TRIM_LOWV</description>
                                <lsb>12</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_ILIM_TRIM_LOWV_OVERRIDE</name>
                                <description>MEM_DCDC_FLASH_ILIM_TRIM_LOWV_OVERRIDE</description>
                                <lsb>2</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_ILIM_MASK_DLY_SEL_LOWV</name>
                                <description>MEM_DCDC_FLASH_ILIM_MASK_DLY_SEL_LOWV</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>FLASH_DCDC_PARAMETERS3</name>
                        <displayName>HIB1P2_FLASH_DCDC_PARAMETERS3</displayName>
                        <description>FLASH_DCDC_PARAMETERS3</description>
                        <addressOffset>0x80</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_DCDC_FLASH_RAMP_HGT_LOWV</name>
                                <description>MEM_DCDC_FLASH_RAMP_HGT_LOWV</description>
                                <lsb>24</lsb>
                                <msb>28</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_VCLAMPH_TRIM_LOWV</name>
                                <description>MEM_DCDC_FLASH_VCLAMPH_TRIM_LOWV</description>
                                <lsb>21</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_VCLAMPL_TRIM_LOWV</name>
                                <description>MEM_DCDC_FLASH_VCLAMPL_TRIM_LOWV</description>
                                <lsb>18</lsb>
                                <msb>20</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_VTRIM_LOWV</name>
                                <description>MEM_DCDC_FLASH_VTRIM_LOWV</description>
                                <lsb>14</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_PFM_RIPPLE_TRIM_LOWV</name>
                                <description>MEM_DCDC_FLASH_PFM_RIPPLE_TRIM_LOWV</description>
                                <lsb>10</lsb>
                                <msb>13</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_FLASH_SLP_DRV_DLY_SEL_LOWV</name>
                                <description>MEM_DCDC_FLASH_SLP_DRV_DLY_SEL_LOWV</description>
                                <lsb>8</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NA19</name>
                                <description>NA19</description>
                                <lsb>0</lsb>
                                <msb>4</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>FLASH_DCDC_PARAMETERS4</name>
                        <displayName>HIB1P2_FLASH_DCDC_PARAMETERS4</displayName>
                        <description>FLASH_DCDC_PARAMETERS4</description>
                        <addressOffset>0x84</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FLASH_DCDC_PARAMETERS5</name>
                        <displayName>HIB1P2_FLASH_DCDC_PARAMETERS5</displayName>
                        <description>FLASH_DCDC_PARAMETERS5</description>
                        <addressOffset>0x88</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FLASH_DCDC_PARAMETERS6</name>
                        <displayName>HIB1P2_FLASH_DCDC_PARAMETERS6</displayName>
                        <description>FLASH_DCDC_PARAMETERS6</description>
                        <addressOffset>0x8C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>NA20</name>
                                <description>NA20</description>
                                <lsb>0</lsb>
                                <msb>29</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>PMBIST_PARAMETERS0</name>
                        <displayName>HIB1P2_PMBIST_PARAMETERS0</displayName>
                        <description>PMBIST_PARAMETERS0</description>
                        <addressOffset>0x94</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_PM_BIST_CTRL_LOWV</name>
                                <description>MEM_PM_BIST_CTRL_LOWV</description>
                                <lsb>11</lsb>
                                <msb>30</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NA21</name>
                                <description>NA21</description>
                                <lsb>0</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>PMBIST_PARAMETERS1</name>
                        <displayName>HIB1P2_PMBIST_PARAMETERS1</displayName>
                        <description>PMBIST_PARAMETERS1</description>
                        <addressOffset>0x98</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_PM_BIST_SPARE_LOWV</name>
                                <description>MEM_PM_BIST_SPARE_LOWV</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NA22</name>
                                <description>NA22</description>
                                <lsb>0</lsb>
                                <msb>14</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>PMBIST_PARAMETERS2</name>
                        <displayName>HIB1P2_PMBIST_PARAMETERS2</displayName>
                        <description>PMBIST_PARAMETERS2</description>
                        <addressOffset>0x9C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PMBIST_PARAMETERS3</name>
                        <displayName>HIB1P2_PMBIST_PARAMETERS3</displayName>
                        <description>PMBIST_PARAMETERS3</description>
                        <addressOffset>0xA0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_PMTEST_SPARE_LOWV</name>
                                <description>MEM_PMTEST_SPARE_LOWV</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_PMTEST_LOAD_TRIM_LOWV</name>
                                <description>MEM_PMTEST_LOAD_TRIM_LOWV</description>
                                <lsb>13</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NA23</name>
                                <description>NA23</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>FLASH_DCDC_PARAMETERS8</name>
                        <displayName>HIB1P2_FLASH_DCDC_PARAMETERS8</displayName>
                        <description>FLASH_DCDC_PARAMETERS8</description>
                        <addressOffset>0xA4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_FLASH_HIGH_SUP_TRIM_LOWV</name>
                                <description>MEM_FLASH_HIGH_SUP_TRIM_LOWV</description>
                                <lsb>26</lsb>
                                <msb>30</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_FLASH_LOW_SUP_TRIM_LOWV</name>
                                <description>MEM_FLASH_LOW_SUP_TRIM_LOWV</description>
                                <lsb>21</lsb>
                                <msb>25</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NA24</name>
                                <description>NA24</description>
                                <lsb>0</lsb>
                                <msb>20</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>ANA_DCDC_PARAMETERS_OVERRIDE</name>
                        <displayName>HIB1P2_ANA_DCDC_PARAMETERS_OVERRIDE</displayName>
                        <description>ANA_DCDC_PARAMETERS_OVERRIDE</description>
                        <addressOffset>0xA8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FLASH_DCDC_PARAMETERS_OVERRIDE</name>
                        <displayName>HIB1P2_FLASH_DCDC_PARAMETERS_OVERRIDE</displayName>
                        <description>FLASH_DCDC_PARAMETERS_OVERRIDE</description>
                        <addressOffset>0xAC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DIG_DCDC_VTRIM_CFG</name>
                        <displayName>HIB1P2_DIG_DCDC_VTRIM_CFG</displayName>
                        <description>DIG_DCDC_VTRIM_CFG</description>
                        <addressOffset>0xB0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_DCDC_DIG_RUN_VTRIM</name>
                                <description>MEM_DCDC_DIG_RUN_VTRIM</description>
                                <lsb>18</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_DIG_DSLP_VTRIM</name>
                                <description>MEM_DCDC_DIG_DSLP_VTRIM</description>
                                <lsb>12</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_DIG_LPDS_VTRIM</name>
                                <description>MEM_DCDC_DIG_LPDS_VTRIM</description>
                                <lsb>6</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>SPARE_RW</name>
                                <description>SPARE_RW</description>
                                <lsb>0</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>DIG_DCDC_FSM_PARAMETERS</name>
                        <displayName>HIB1P2_DIG_DCDC_FSM_PARAMETERS</displayName>
                        <description>DIG_DCDC_FSM_PARAMETERS</description>
                        <addressOffset>0xB4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_DCDC_DIG_DSLP_ENTER_COT_TO_VTRIM</name>
                                <description>MEM_DCDC_DIG_DSLP_ENTER_COT_TO_VTRIM</description>
                                <lsb>12</lsb>
                                <msb>14</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_DIG_DSLP_ENTER_VTRIM_TO_SLEEP</name>
                                <description>MEM_DCDC_DIG_DSLP_ENTER_VTRIM_TO_SLEEP</description>
                                <lsb>9</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_DIG_DSLP_EXIT_SLEEP_TO_VTRIM</name>
                                <description>MEM_DCDC_DIG_DSLP_EXIT_SLEEP_TO_VTRIM</description>
                                <lsb>6</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_DIG_DSLP_EXIT_VTRIM_TO_COT</name>
                                <description>MEM_DCDC_DIG_DSLP_EXIT_VTRIM_TO_COT</description>
                                <lsb>3</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DCDC_DIG_DSLP_EXIT_COT_TO_RUN</name>
                                <description>MEM_DCDC_DIG_DSLP_EXIT_COT_TO_RUN</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>ANA_DCDC_FSM_PARAMETERS</name>
                        <displayName>HIB1P2_ANA_DCDC_FSM_PARAMETERS</displayName>
                        <description>ANA_DCDC_FSM_PARAMETERS</description>
                        <addressOffset>0xB8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_DCDC_ANA_DSLP_EXIT_SLEEP_TO_RUN</name>
                                <description>MEM_DCDC_ANA_DSLP_EXIT_SLEEP_TO_RUN</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SRAM_SKA_LDO_FSM_PARAMETERS</name>
                        <displayName>HIB1P2_SRAM_SKA_LDO_FSM_PARAMETERS</displayName>
                        <description>SRAM_SKA_LDO_FSM_PARAMETERS</description>
                        <addressOffset>0xBC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SKA_LDO_EN_TO_SRAM_LDO_DIS</name>
                                <description>MEM_SKA_LDO_EN_TO_SRAM_LDO_DIS</description>
                                <lsb>3</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_SRAM_LDO_EN_TO_SKA_LDO_DIS</name>
                                <description>MEM_SRAM_LDO_EN_TO_SKA_LDO_DIS</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>BGAP_DUTY_CYCLING_EXIT_CFG</name>
                        <displayName>HIB1P2_BGAP_DUTY_CYCLING_EXIT_CFG</displayName>
                        <description>BGAP_DUTY_CYCLING_EXIT_CFG</description>
                        <addressOffset>0xC0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_BGAP_DUTY_CYCLING_EXIT_TIME</name>
                                <description>MEM_BGAP_DUTY_CYCLING_EXIT_TIME</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CM_OSC_16M_CONFIG</name>
                        <displayName>HIB1P2_CM_OSC_16M_CONFIG</displayName>
                        <description>CM_OSC_16M_CONFIG</description>
                        <addressOffset>0xC4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_CM_OSC_16M_TRIM</name>
                                <description>MEM_CM_OSC_16M_TRIM</description>
                                <lsb>10</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_CM_OSC_16M_SPARE</name>
                                <description>MEM_CM_OSC_16M_SPARE</description>
                                <lsb>4</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_CM_SLI_16M_TRIM</name>
                                <description>MEM_CM_SLI_16M_TRIM</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SOP_SENSE_VALUE</name>
                        <displayName>HIB1P2_SOP_SENSE_VALUE</displayName>
                        <description>SOP_SENSE_VALUE</description>
                        <addressOffset>0xC8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SOP_SENSE_VALUE</name>
                                <description>SOP_SENSE_VALUE</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>HIB_RTC_TIMER_LSW_1P2</name>
                        <displayName>HIB1P2_HIB_RTC_TIMER_LSW_1P2</displayName>
                        <description>HIB_RTC_TIMER_LSW_1P2</description>
                        <addressOffset>0xCC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HIB_RTC_TIMER_MSW_1P2</name>
                        <displayName>HIB1P2_HIB_RTC_TIMER_MSW_1P2</displayName>
                        <description>HIB_RTC_TIMER_MSW_1P2</description>
                        <addressOffset>0xD0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>HIB_RTC_TIMER_MSW</name>
                                <description>HIB_RTC_TIMER_MSW</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>BGAP_TRIM_OVERRIDES</name>
                        <displayName>HIB1P2_BGAP_TRIM_OVERRIDES</displayName>
                        <description>BGAP_TRIM_OVERRIDES</description>
                        <addressOffset>0xD4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EFUSE_READ_REG0</name>
                        <displayName>HIB1P2_EFUSE_READ_REG0</displayName>
                        <description>EFUSE_READ_REG0</description>
                        <addressOffset>0xD8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EFUSE_READ_REG1</name>
                        <displayName>HIB1P2_EFUSE_READ_REG1</displayName>
                        <description>EFUSE_READ_REG1</description>
                        <addressOffset>0xDC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>POR_TEST_CTRL</name>
                        <displayName>HIB1P2_POR_TEST_CTRL</displayName>
                        <description>POR_TEST_CTRL</description>
                        <addressOffset>0xE0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HIB_TIMER_SYNC_CALIB_CFG0</name>
                        <displayName>HIB1P2_HIB_TIMER_SYNC_CALIB_CFG0</displayName>
                        <description>HIB_TIMER_SYNC_CALIB_CFG0</description>
                        <addressOffset>0xE4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_CFG_CALIB_TIME</name>
                                <description>MEM_CFG_CALIB_TIME</description>
                                <lsb>8</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>1</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>HIB_TIMER_SYNC_CALIB_CFG1</name>
                        <displayName>HIB1P2_HIB_TIMER_SYNC_CALIB_CFG1</displayName>
                        <description>HIB_TIMER_SYNC_CALIB_CFG1</description>
                        <addressOffset>0xE8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>FAST_CALIB_COUNT</name>
                                <description>FAST_CALIB_COUNT</description>
                                <lsb>0</lsb>
                                <msb>19</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>HIB_TIMER_SYNC_CFG2</name>
                        <displayName>HIB1P2_HIB_TIMER_SYNC_CFG2</displayName>
                        <description>HIB_TIMER_SYNC_CFG2</description>
                        <addressOffset>0xEC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>2</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>HIB_TIMER_SYNC_TSF_ADJ_VAL</name>
                        <displayName>HIB1P2_HIB_TIMER_SYNC_TSF_ADJ_VAL</displayName>
                        <description>HIB_TIMER_SYNC_TSF_ADJ_VAL</description>
                        <addressOffset>0xF0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HIB_TIMER_RTC_GTS_TIMESTAMP_LSW</name>
                        <displayName>HIB1P2_HIB_TIMER_RTC_GTS_TIMESTAMP_LSW</displayName>
                        <description>HIB_TIMER_RTC_GTS_TIMESTAMP_LSW</description>
                        <addressOffset>0xF4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HIB_TIMER_RTC_GTS_TIMESTAMP_MSW</name>
                        <displayName>HIB1P2_HIB_TIMER_RTC_GTS_TIMESTAMP_MSW</displayName>
                        <description>HIB_TIMER_RTC_GTS_TIMESTAMP_MSW</description>
                        <addressOffset>0xF8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>RTC_GTS_TIMESTAMP_MSW</name>
                                <description>RTC_GTS_TIMESTAMP_MSW</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>HIB_TIMER_RTC_WUP_TIMESTAMP_LSW</name>
                        <displayName>HIB1P2_HIB_TIMER_RTC_WUP_TIMESTAMP_LSW</displayName>
                        <description>HIB_TIMER_RTC_WUP_TIMESTAMP_LSW</description>
                        <addressOffset>0xFC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HIB_TIMER_RTC_WUP_TIMESTAMP_MSW</name>
                        <displayName>HIB1P2_HIB_TIMER_RTC_WUP_TIMESTAMP_MSW</displayName>
                        <description>HIB_TIMER_RTC_WUP_TIMESTAMP_MSW</description>
                        <addressOffset>0x100</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>RTC_WUP_TIMESTAMP_MSW</name>
                                <description>RTC_WUP_TIMESTAMP_MSW</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>HIB_TIMER_SYNC_WAKE_OFFSET_ERR</name>
                        <displayName>HIB1P2_HIB_TIMER_SYNC_WAKE_OFFSET_ERR</displayName>
                        <description>HIB_TIMER_SYNC_WAKE_OFFSET_ERR</description>
                        <addressOffset>0x104</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>WUP_OFFSET_ERROR</name>
                                <description>WUP_OFFSET_ERROR</description>
                                <lsb>0</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>HIB_TIMER_SYNC_TSF_CURR_VAL_LSW</name>
                        <displayName>HIB1P2_HIB_TIMER_SYNC_TSF_CURR_VAL_LSW</displayName>
                        <description>HIB_TIMER_SYNC_TSF_CURR_VAL_LSW</description>
                        <addressOffset>0x108</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HIB_TIMER_SYNC_TSF_CURR_VAL_MSW</name>
                        <displayName>HIB1P2_HIB_TIMER_SYNC_TSF_CURR_VAL_MSW</displayName>
                        <description>HIB_TIMER_SYNC_TSF_CURR_VAL_MSW</description>
                        <addressOffset>0x10C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CM_SPARE</name>
                        <displayName>HIB1P2_CM_SPARE</displayName>
                        <description>CM_SPARE</description>
                        <addressOffset>0x110</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CM_SPARE_OUT</name>
                                <description>CM_SPARE_OUT</description>
                                <lsb>24</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_CM_TEST_CTRL</name>
                                <description>MEM_CM_TEST_CTRL</description>
                                <lsb>16</lsb>
                                <msb>23</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_CM_SPARE</name>
                                <description>MEM_CM_SPARE</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>PORPOL_SPARE</name>
                        <displayName>HIB1P2_PORPOL_SPARE</displayName>
                        <description>PORPOL_SPARE</description>
                        <addressOffset>0x114</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_DIG_DCDC_CLK_CONFIG</name>
                        <displayName>HIB1P2_MEM_DIG_DCDC_CLK_CONFIG</displayName>
                        <description>MEM_DIG_DCDC_CLK_CONFIG</description>
                        <addressOffset>0x118</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_DIG_DCDC_CLK_PLLGEN_OFF_TIME</name>
                                <description>MEM_DIG_DCDC_CLK_PLLGEN_OFF_TIME</description>
                                <lsb>4</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_DIG_DCDC_CLK_PLLGEN_ON_TIME</name>
                                <description>MEM_DIG_DCDC_CLK_PLLGEN_ON_TIME</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_ANA_DCDC_CLK_CONFIG</name>
                        <displayName>HIB1P2_MEM_ANA_DCDC_CLK_CONFIG</displayName>
                        <description>MEM_ANA_DCDC_CLK_CONFIG</description>
                        <addressOffset>0x11C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_ANA_DCDC_CLK_PLLGEN_OFF_TIME</name>
                                <description>MEM_ANA_DCDC_CLK_PLLGEN_OFF_TIME</description>
                                <lsb>4</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_ANA_DCDC_CLK_PLLGEN_ON_TIME</name>
                                <description>MEM_ANA_DCDC_CLK_PLLGEN_ON_TIME</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_FLASH_DCDC_CLK_CONFIG</name>
                        <displayName>HIB1P2_MEM_FLASH_DCDC_CLK_CONFIG</displayName>
                        <description>MEM_FLASH_DCDC_CLK_CONFIG</description>
                        <addressOffset>0x120</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_FLASH_DCDC_CLK_PLLGEN_OFF_TIME</name>
                                <description>MEM_FLASH_DCDC_CLK_PLLGEN_OFF_TIME</description>
                                <lsb>4</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_FLASH_DCDC_CLK_PLLGEN_ON_TIME</name>
                                <description>MEM_FLASH_DCDC_CLK_PLLGEN_ON_TIME</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_PA_DCDC_CLK_CONFIG</name>
                        <displayName>HIB1P2_MEM_PA_DCDC_CLK_CONFIG</displayName>
                        <description>MEM_PA_DCDC_CLK_CONFIG</description>
                        <addressOffset>0x124</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_PA_DCDC_CLK_PLLGEN_OFF_TIME</name>
                                <description>MEM_PA_DCDC_CLK_PLLGEN_OFF_TIME</description>
                                <lsb>4</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_PA_DCDC_CLK_PLLGEN_ON_TIME</name>
                                <description>MEM_PA_DCDC_CLK_PLLGEN_ON_TIME</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_SLDO_VNWA_OVERRIDE</name>
                        <displayName>HIB1P2_MEM_SLDO_VNWA_OVERRIDE</displayName>
                        <description>MEM_SLDO_VNWA_OVERRIDE</description>
                        <addressOffset>0x128</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_BGAP_DUTY_CYCLING_ENABLE_OVERRIDE</name>
                        <displayName>HIB1P2_MEM_BGAP_DUTY_CYCLING_ENABLE_OVERRIDE</displayName>
                        <description>MEM_BGAP_DUTY_CYCLING_ENABLE_OVERRIDE</description>
                        <addressOffset>0x12C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_HIB_FSM_DEBUG</name>
                        <displayName>HIB1P2_MEM_HIB_FSM_DEBUG</displayName>
                        <description>MEM_HIB_FSM_DEBUG</description>
                        <addressOffset>0x130</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SRAM_PS</name>
                                <description>SRAM_PS</description>
                                <lsb>8</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>ANA_DCDC_PS</name>
                                <description>ANA_DCDC_PS</description>
                                <lsb>4</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>DIG_DCDC_PS</name>
                                <description>DIG_DCDC_PS</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_SLDO_VNWA_SW_CTRL</name>
                        <displayName>HIB1P2_MEM_SLDO_VNWA_SW_CTRL</displayName>
                        <description>MEM_SLDO_VNWA_SW_CTRL</description>
                        <addressOffset>0x134</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_SLDO_VNWA_SW_CTRL</name>
                                <description>MEM_SLDO_VNWA_SW_CTRL</description>
                                <lsb>0</lsb>
                                <msb>19</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_SLDO_WEAK_PROCESS</name>
                        <displayName>HIB1P2_MEM_SLDO_WEAK_PROCESS</displayName>
                        <description>MEM_SLDO_WEAK_PROCESS</description>
                        <addressOffset>0x138</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_PA_DCDC_OV_UV_STATUS</name>
                        <displayName>HIB1P2_MEM_PA_DCDC_OV_UV_STATUS</displayName>
                        <description>MEM_PA_DCDC_OV_UV_STATUS</description>
                        <addressOffset>0x13C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_CM_TEST_MODE</name>
                        <displayName>HIB1P2_MEM_CM_TEST_MODE</displayName>
                        <description>MEM_CM_TEST_MODE</description>
                        <addressOffset>0x140</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>HIB3P3</name>
                <version>1.0</version>
                <description>HIB3P3</description>
                <baseAddress>0x4402F800</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>MEM_HIB_REQ</name>
                        <displayName>HIB3P3_MEM_HIB_REQ</displayName>
                        <description>MEM_HIB_REQ</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>2</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_HIB_RTC_TIMER_ENABLE</name>
                        <displayName>HIB3P3_MEM_HIB_RTC_TIMER_ENABLE</displayName>
                        <description>MEM_HIB_RTC_TIMER_ENABLE</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_HIB_RTC_TIMER_RESET</name>
                        <displayName>HIB3P3_MEM_HIB_RTC_TIMER_RESET</displayName>
                        <description>MEM_HIB_RTC_TIMER_RESET</description>
                        <addressOffset>0x8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_HIB_RTC_TIMER_READ</name>
                        <displayName>HIB3P3_MEM_HIB_RTC_TIMER_READ</displayName>
                        <description>MEM_HIB_RTC_TIMER_READ</description>
                        <addressOffset>0xC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_HIB_RTC_TIMER_LSW</name>
                        <displayName>HIB3P3_MEM_HIB_RTC_TIMER_LSW</displayName>
                        <description>MEM_HIB_RTC_TIMER_LSW</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_HIB_RTC_TIMER_MSW</name>
                        <displayName>HIB3P3_MEM_HIB_RTC_TIMER_MSW</displayName>
                        <description>MEM_HIB_RTC_TIMER_MSW</description>
                        <addressOffset>0x14</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>HIB_RTC_TIMER_MSW</name>
                                <description>Upper 32b value of the latched RTC-Timer.</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_HIB_RTC_WAKE_EN</name>
                        <displayName>HIB3P3_MEM_HIB_RTC_WAKE_EN</displayName>
                        <description>MEM_HIB_RTC_WAKE_EN</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_HIB_RTC_WAKE_LSW_CONF</name>
                        <displayName>HIB3P3_MEM_HIB_RTC_WAKE_LSW_CONF</displayName>
                        <description>MEM_HIB_RTC_WAKE_LSW_CONF</description>
                        <addressOffset>0x1C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_HIB_RTC_WAKE_MSW_CONF</name>
                        <displayName>HIB3P3_MEM_HIB_RTC_WAKE_MSW_CONF</displayName>
                        <description>MEM_HIB_RTC_WAKE_MSW_CONF</description>
                        <addressOffset>0x20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_HIB_RTC_WAKE_MSW_CONF</name>
                                <description>Configuration for RTC-Timer Wakeup (Upper 16b word)</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_INT_OSC_CONF</name>
                        <displayName>HIB3P3_MEM_INT_OSC_CONF</displayName>
                        <description>MEM_INT_OSC_CONF</description>
                        <addressOffset>0x2C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_CM_INTOSC_32K_SPARE</name>
                                <description>MEM_CM_INTOSC_32K_SPARE</description>
                                <lsb>9</lsb>
                                <msb>14</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_CM_INTOSC_32K_TRIM</name>
                                <description>MEM_CM_INTOSC_32K_TRIM</description>
                                <lsb>1</lsb>
                                <msb>6</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_XTAL_OSC_CONF</name>
                        <displayName>HIB3P3_MEM_XTAL_OSC_CONF</displayName>
                        <description>MEM_XTAL_OSC_CONF</description>
                        <addressOffset>0x34</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_CM_XTAL_TRIM</name>
                                <description>MEM_CM_XTAL_TRIM</description>
                                <lsb>11</lsb>
                                <msb>16</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_CM_SLI_32K_TRIM</name>
                                <description>MEM_CM_SLI_32K_TRIM</description>
                                <lsb>7</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_CM_FREF_32K_SLICER_ITRIM</name>
                                <description>MEM_CM_FREF_32K_SLICER_ITRIM</description>
                                <lsb>4</lsb>
                                <msb>6</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_CM_EN_INPUT_SENSE</name>
                                <description>MEM_CM_EN_INPUT_SENSE</description>
                                <lsb>1</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_BGAP_PARAMETERS0</name>
                        <displayName>HIB3P3_MEM_BGAP_PARAMETERS0</displayName>
                        <description>MEM_BGAP_PARAMETERS0</description>
                        <addressOffset>0x38</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_VBOK4BG_COMP_TRIM</name>
                                <description>MEM_VBOK4BG_COMP_TRIM</description>
                                <lsb>14</lsb>
                                <msb>16</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_BGAP_SPARE</name>
                                <description>MEM_BGAP_SPARE</description>
                                <lsb>0</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_BGAP_PARAMETERS1</name>
                        <displayName>HIB3P3_MEM_BGAP_PARAMETERS1</displayName>
                        <description>MEM_BGAP_PARAMETERS1</description>
                        <addressOffset>0x3C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_BGAP_ACT_IREF_ITRIM</name>
                                <description>MEM_BGAP_ACT_IREF_ITRIM</description>
                                <lsb>24</lsb>
                                <msb>28</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_HIB_DETECTION_STATUS</name>
                        <displayName>HIB3P3_MEM_HIB_DETECTION_STATUS</displayName>
                        <description>MEM_HIB_DETECTION_STATUS</description>
                        <addressOffset>0x40</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_HIB_MISC_CONTROLS</name>
                        <displayName>HIB3P3_MEM_HIB_MISC_CONTROLS</displayName>
                        <description>MEM_HIB_MISC_CONTROLS</description>
                        <addressOffset>0x44</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_HIB_POK_POR_COMP_TRIM</name>
                                <description>MEM_HIB_POK_POR_COMP_TRIM</description>
                                <lsb>6</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_HIB_CONFIG</name>
                        <displayName>HIB3P3_MEM_HIB_CONFIG</displayName>
                        <description>MEM_HIB_CONFIG</description>
                        <addressOffset>0x50</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>TOP_MUX_CTRL_SOP_SPIO</name>
                                <description>TOP_MUX_CTRL_SOP_SPIO</description>
                                <lsb>24</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_HIB_RTC_IRQ_ENABLE</name>
                        <displayName>HIB3P3_MEM_HIB_RTC_IRQ_ENABLE</displayName>
                        <description>MEM_HIB_RTC_IRQ_ENABLE</description>
                        <addressOffset>0x54</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_HIB_RTC_IRQ_LSW_CONF</name>
                        <displayName>HIB3P3_MEM_HIB_RTC_IRQ_LSW_CONF</displayName>
                        <description>MEM_HIB_RTC_IRQ_LSW_CONF</description>
                        <addressOffset>0x58</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_HIB_RTC_IRQ_MSW_CONF</name>
                        <displayName>HIB3P3_MEM_HIB_RTC_IRQ_MSW_CONF</displayName>
                        <description>MEM_HIB_RTC_IRQ_MSW_CONF</description>
                        <addressOffset>0x5C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>HIB_RTC_IRQ_MSW_CONF</name>
                                <description>Configuration for MSW of thr RTC-Timestamp at which the interrupt need to be generated</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_HIB_UART_CONF</name>
                        <displayName>HIB3P3_MEM_HIB_UART_CONF</displayName>
                        <description>MEM_HIB_UART_CONF</description>
                        <addressOffset>0x400</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_GPIO_WAKE_EN</name>
                        <displayName>HIB3P3_MEM_GPIO_WAKE_EN</displayName>
                        <description>MEM_GPIO_WAKE_EN</description>
                        <addressOffset>0x404</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_WAKE_EN</name>
                                <description>1 - Enable the GPIO-Autonomous mode wakeup during Hibernate mode ; This is an auto-clear bit, once programmed to 1, it will latched into an internal register which remain asserted until the Hib-wakeup is initiated.</description>
                                <lsb>0</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_GPIO_WAKE_CONF</name>
                        <displayName>HIB3P3_MEM_GPIO_WAKE_CONF</displayName>
                        <description>MEM_GPIO_WAKE_CONF</description>
                        <addressOffset>0x408</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_GPIO_WAKE_CONF</name>
                                <description>Configuration to say whether the GPIO wakeup has to happen on Level0 or falling-edge for the given group. 00?  Level0 01?  Level1 10?- Fall-edge 11?- Rise-edge [1:0]  Conf for GPIO0 [3:2]  Conf for GPIO1 [5:4]  Conf for GPIO2 [7:6]  Conf for GPIO3 [9:8]  Conf for GPIO4 [11:10]  Conf for GPIO5 [13:12]  Conf for GPIO6</description>
                                <lsb>0</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_PAD_OEN_RET33_CONF</name>
                        <displayName>HIB3P3_MEM_PAD_OEN_RET33_CONF</displayName>
                        <description>MEM_PAD_OEN_RET33_CONF</description>
                        <addressOffset>0x40C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_UART_RTS_OEN_RET33_CONF</name>
                        <displayName>HIB3P3_MEM_UART_RTS_OEN_RET33_CONF</displayName>
                        <description>MEM_UART_RTS_OEN_RET33_CONF</description>
                        <addressOffset>0x410</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_JTAG_CONF</name>
                        <displayName>HIB3P3_MEM_JTAG_CONF</displayName>
                        <description>MEM_JTAG_CONF</description>
                        <addressOffset>0x414</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_HIB_REG0</name>
                        <displayName>HIB3P3_MEM_HIB_REG0</displayName>
                        <description>MEM_HIB_REG0</description>
                        <addressOffset>0x418</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_HIB_REG1</name>
                        <displayName>HIB3P3_MEM_HIB_REG1</displayName>
                        <description>MEM_HIB_REG1</description>
                        <addressOffset>0x41C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_HIB_REG2</name>
                        <displayName>HIB3P3_MEM_HIB_REG2</displayName>
                        <description>MEM_HIB_REG2</description>
                        <addressOffset>0x420</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_HIB_REG3</name>
                        <displayName>HIB3P3_MEM_HIB_REG3</displayName>
                        <description>MEM_HIB_REG3</description>
                        <addressOffset>0x424</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_HIB_SEQUENCER_CFG0</name>
                        <displayName>HIB3P3_MEM_HIB_SEQUENCER_CFG0</displayName>
                        <description>MEM_HIB_SEQUENCER_CFG0</description>
                        <addressOffset>0x45C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_BDC_EV0_TO_EV1_TIME</name>
                                <description>Configuration for the number of slow-clks between de-assertion of EN_BG_3P3V to assertion of EN_BG_3P3V</description>
                                <lsb>16</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_BDC_EV3_TO_EV4_TIME</name>
                                <description>Configuration for the number of slow-clks between assertion of EN_COMP_3P3V and assertion of EN_COMP_LATCH_3P3V</description>
                                <lsb>13</lsb>
                                <msb>14</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_BDC_EV2_TO_EV3_TIME</name>
                                <description>Configuration for the number of slow-clks between assertion of (EN_CAP_SW_3P3V,EN_COMP_REF) and assertion of (EN_COMP_3P3V)</description>
                                <lsb>11</lsb>
                                <msb>12</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_BDC_EV1_TO_EV2_TIME</name>
                                <description>Configuration for the number of slow-clks between assertion of (EN_BG_3P3V) and assertion of (EN_CAP_SW_3P3V, EN_COMP_REF_3P3V)</description>
                                <lsb>9</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_HIB_SEQUENCER_CFG1</name>
                        <displayName>HIB3P3_MEM_HIB_SEQUENCER_CFG1</displayName>
                        <description>MEM_HIB_SEQUENCER_CFG1</description>
                        <addressOffset>0x460</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_BDC_EV5_TO_EV6_TIME</name>
                                <description>Configuration for number of slow-clks between de-assertion of EN_COMP_LATCH and assertion of</description>
                                <lsb>14</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_BDC_TO_ACTIVE_EV1_TO_EV2_TIME</name>
                                <description>Configuration for number of slow-clks between assertion of EN_COMP_REF to assertion of EN_COMP during HIB-Exit</description>
                                <lsb>12</lsb>
                                <msb>13</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_BDC_TO_ACTIVE_EV0_TO_EV1_TIME</name>
                                <description>TBD</description>
                                <lsb>10</lsb>
                                <msb>11</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_BDC_TO_ACTIVE_EV0_TO_ACTIVE</name>
                                <description>Configuration in number of slow-clks between assertion of (EN_BGAP_3P3V, EN_CAP_SW_3P3V, EN_ACT_IREF_3P3V, EN_COMP_REF) to assertion of EN_COMP_3P3V</description>
                                <lsb>8</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_ACTIVE_TO_BDC_EV1_TO_BDC_EV0_TIME</name>
                                <description>Configuration in number of slow-clks between de-assertion of (EN_COMP_3P3V, EN_COMP_REF_3P3V, EN_ACT_IREF_3P3V, EN_CAP_SW_3P3V) to deassertion of EN_BGAP_3P3V.</description>
                                <lsb>6</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>NU1</name>
                                <description>NU1</description>
                                <lsb>0</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_HIB_MISC_CONFIG</name>
                        <displayName>HIB3P3_MEM_HIB_MISC_CONFIG</displayName>
                        <description>MEM_HIB_MISC_CONFIG</description>
                        <addressOffset>0x464</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MEM_HIB_WAKE_STATUS</name>
                        <displayName>HIB3P3_MEM_HIB_WAKE_STATUS</displayName>
                        <description>MEM_HIB_WAKE_STATUS</description>
                        <addressOffset>0x468</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>HIB_WAKE_SRC</name>
                                <description>&amp;quot;0100&amp;quot; - GPIO ; &amp;quot;0010&amp;quot; - RTC ; &amp;quot;0001&amp;quot; - UART Others - Reserved</description>
                                <lsb>1</lsb>
                                <msb>4</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_HIB_LPDS_GPIO_SEL</name>
                        <displayName>HIB3P3_MEM_HIB_LPDS_GPIO_SEL</displayName>
                        <description>MEM_HIB_LPDS_GPIO_SEL</description>
                        <addressOffset>0x46C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>HIB_LPDS_GPIO_SEL</name>
                                <description>HIB_LPDS_GPIO_SEL</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>MEM_HIB_SEQUENCER_CFG2</name>
                        <displayName>HIB3P3_MEM_HIB_SEQUENCER_CFG2</displayName>
                        <description>MEM_HIB_SEQUENCER_CFG2</description>
                        <addressOffset>0x470</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_ACTIVE_TO_BDC_EV0_TO_ACTIVE_TO_BDC_EV1_TIME</name>
                                <description>Deassertion of EN_COMP_LATCH_3P3 to deassertion of (EN_COMP_3P3, EN_COMP_REF_3P3, EN_ACT_IREF_3P3, EN_CAP_SW_3P3)</description>
                                <lsb>9</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_BDC_EV4_TO_EV5_TIME</name>
                                <description>Assertion of EN_COMP_LATCH_3P3 to deassertion of EN_COMP_LATCH_3P3</description>
                                <lsb>6</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_BDC_EV6_TO_EV7_TIME</name>
                                <description>Deassertion of (EN_CAP_SW_3P3, EN_COMP_REF_3P3, EN_COMP_3P3, EN_COMP_OUT_LATCH_3P3) to deassertion of EN_BGAP_3P3</description>
                                <lsb>4</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_BDC_TO_ACTIVE_EV1_TO_EV2_TIME</name>
                                <description>Assertion of EN_COMP_3P3 to assertion of EN_COMPOUT_LATCH_3P3</description>
                                <lsb>2</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_HIB_TO_ACTIVE_EV2_TO_EV3_TIME</name>
                                <description>Assertion of EN_COMP_3P3 to assertion of EN_COMPOUT_LATCH_3P3</description>
                                <lsb>0</lsb>
                                <msb>1</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>HIBANA_SPARE_LOWV</name>
                        <displayName>HIB3P3_HIBANA_SPARE_LOWV</displayName>
                        <description>HIBANA_SPARE_LOWV</description>
                        <addressOffset>0x474</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_HIBANA_SPARE1</name>
                                <description>MEM_HIBANA_SPARE1</description>
                                <lsb>22</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_HIBANA_SPARE0</name>
                                <description>MEM_HIBANA_SPARE0</description>
                                <lsb>0</lsb>
                                <msb>16</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>HIB_TMUX_CTRL</name>
                        <displayName>HIB3P3_HIB_TMUX_CTRL</displayName>
                        <description>HIB_TMUX_CTRL</description>
                        <addressOffset>0x478</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_HD_TMUX_CNTRL</name>
                                <description>MEM_HD_TMUX_CNTRL</description>
                                <lsb>0</lsb>
                                <msb>9</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>HIB_1P2_1P8_LDO_TRIM</name>
                        <displayName>HIB3P3_HIB_1P2_1P8_LDO_TRIM</displayName>
                        <description>HIB_1P2_1P8_LDO_TRIM</description>
                        <addressOffset>0x47C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_HD_1P2_LDO_VTRIM</name>
                                <description>MEM_HD_1P2_LDO_VTRIM</description>
                                <lsb>4</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>MEM_HD_1P8_LDO_VTRIM</name>
                                <description>MEM_HD_1P8_LDO_VTRIM</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>HIB_COMP_TRIM</name>
                        <displayName>HIB3P3_HIB_COMP_TRIM</displayName>
                        <description>HIB_COMP_TRIM</description>
                        <addressOffset>0x480</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MEM_HD_COMP_TRIM</name>
                                <description>MEM_HD_COMP_TRIM</description>
                                <lsb>0</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>HIB_EN_TS</name>
                        <displayName>HIB3P3_HIB_EN_TS</displayName>
                        <description>HIB_EN_TS</description>
                        <addressOffset>0x484</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HIB_1P8V_DET_EN</name>
                        <displayName>HIB3P3_HIB_1P8V_DET_EN</displayName>
                        <description>HIB_1P8V_DET_EN</description>
                        <addressOffset>0x488</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HIB_VBAT_MON_EN</name>
                        <displayName>HIB3P3_HIB_VBAT_MON_EN</displayName>
                        <description>HIB_VBAT_MON_EN</description>
                        <addressOffset>0x48C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HIB_NHIB_ENABLE</name>
                        <displayName>HIB3P3_HIB_NHIB_ENABLE</displayName>
                        <description>HIB_NHIB_ENABLE</description>
                        <addressOffset>0x490</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HIB_UART_RTS_SW_ENABLE</name>
                        <displayName>HIB3P3_HIB_UART_RTS_SW_ENABLE</displayName>
                        <description>HIB_UART_RTS_SW_ENABLE</description>
                        <addressOffset>0x494</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>DTHE</name>
                <version>1.0</version>
                <description>DTHE</description>
                <baseAddress>0x44030000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>SHA_IM</name>
                        <displayName>DTHE_SHA_IM</displayName>
                        <description>SHA_IM</description>
                        <addressOffset>0x810</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SHA_RIS</name>
                        <displayName>DTHE_SHA_RIS</displayName>
                        <description>SHA_RIS</description>
                        <addressOffset>0x814</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SHA_MIS</name>
                        <displayName>DTHE_SHA_MIS</displayName>
                        <description>SHA_MIS</description>
                        <addressOffset>0x818</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SHA_IC</name>
                        <displayName>DTHE_SHA_IC</displayName>
                        <description>SHA_IC</description>
                        <addressOffset>0x81C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>AES_IM</name>
                        <displayName>DTHE_AES_IM</displayName>
                        <description>AES_IM</description>
                        <addressOffset>0x820</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>AES_RIS</name>
                        <displayName>DTHE_AES_RIS</displayName>
                        <description>AES_RIS</description>
                        <addressOffset>0x824</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>AES_MIS</name>
                        <displayName>DTHE_AES_MIS</displayName>
                        <description>AES_MIS</description>
                        <addressOffset>0x828</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>AES_IC</name>
                        <displayName>DTHE_AES_IC</displayName>
                        <description>AES_IC</description>
                        <addressOffset>0x82C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DES_IM</name>
                        <displayName>DTHE_DES_IM</displayName>
                        <description>DES_IM</description>
                        <addressOffset>0x830</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DES_RIS</name>
                        <displayName>DTHE_DES_RIS</displayName>
                        <description>DES_RIS</description>
                        <addressOffset>0x834</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DES_MIS</name>
                        <displayName>DTHE_DES_MIS</displayName>
                        <description>DES_MIS</description>
                        <addressOffset>0x838</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DES_IC</name>
                        <displayName>DTHE_DES_IC</displayName>
                        <description>DES_IC</description>
                        <addressOffset>0x83C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EIP_CGCFG</name>
                        <displayName>DTHE_EIP_CGCFG</displayName>
                        <description>EIP_CGCFG</description>
                        <addressOffset>0xA00</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EIP_CGREQ</name>
                        <displayName>DTHE_EIP_CGREQ</displayName>
                        <description>EIP_CGREQ</description>
                        <addressOffset>0xA04</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CRC_CTRL</name>
                        <displayName>DTHE_CRC_CTRL</displayName>
                        <description>CRC_CTRL</description>
                        <addressOffset>0xC00</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>INIT</name>
                                <description>Initialize the CRC 00  use SEED register context as starting value 10  all zero? 11  all one? This is self clearing. With first write to data register this value clears to zero and remain zero for rest of the operation unless written again</description>
                                <lsb>13</lsb>
                                <msb>14</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>ENDIAN</name>
                                <description>Endian control [0]  swap byte in half-word [1]  swap half word</description>
                                <lsb>4</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>TYPE</name>
                                <description>Type of operation 0000  polynomial 0x8005 0001  polynomial 0x1021 0010  polynomial 0x4C11DB7 0011  polynomial 0x1EDC6F41 1000  TCP checksum TYPE in DTHE_S_CRC_CTRL &amp; DTHE_S_CRC_CTRL should be exclusive</description>
                                <lsb>0</lsb>
                                <msb>3</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>CRC_SEED</name>
                        <displayName>DTHE_CRC_SEED</displayName>
                        <description>CRC_SEED</description>
                        <addressOffset>0xC10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CRC_DIN</name>
                        <displayName>DTHE_CRC_DIN</displayName>
                        <description>CRC_DIN</description>
                        <addressOffset>0xC14</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CRC_RSLT_PP</name>
                        <displayName>DTHE_CRC_RSLT_PP</displayName>
                        <description>CRC_RSLT_PP</description>
                        <addressOffset>0xC18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RAND_KEY0</name>
                        <displayName>DTHE_RAND_KEY0</displayName>
                        <description>RAND_KEY0</description>
                        <addressOffset>0xF00</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RAND_KEY1</name>
                        <displayName>DTHE_RAND_KEY1</displayName>
                        <description>RAND_KEY1</description>
                        <addressOffset>0xF04</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RAND_KEY2</name>
                        <displayName>DTHE_RAND_KEY2</displayName>
                        <description>RAND_KEY2</description>
                        <addressOffset>0xF08</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>RAND_KEY3</name>
                        <displayName>DTHE_RAND_KEY3</displayName>
                        <description>RAND_KEY3</description>
                        <addressOffset>0xF0C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>SHAMD5</name>
                <version>1.0</version>
                <description>SHAMD5</description>
                <baseAddress>0x44035000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>ODIGEST_A</name>
                        <displayName>SHAMD5_ODIGEST_A</displayName>
                        <description>WRITE: Outer Digest [127:96] for MD5 [159:128] for SHA-1 [255:224] for SHA-2 / HMAC Key [31:0] for HMAC key proc READ: Outer Digest [127:96] for MD5 [159:128] for SHA-1 [255:224] for SHA-2</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ODIGEST_B</name>
                        <displayName>SHAMD5_ODIGEST_B</displayName>
                        <description>WRITE: Outer Digest [95:64] for MD5 [127:96] for SHA-1 [223:192] for SHA-2 / HMAC Key [63:32] for HMAC key proc READ: Outer Digest [95:64] for MD5 [127:96] for SHA-1 [223:192] for SHA-2</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ODIGEST_C</name>
                        <displayName>SHAMD5_ODIGEST_C</displayName>
                        <description>WRITE: Outer Digest [63:32] for MD5 [95:64] for SHA-1 [191:160] for SHA-2 / HMAC Key [95:64] for HMAC key proc READ: Outer Digest [63:32] for MD5 [95:64] for SHA-1 [191:160] for SHA-2</description>
                        <addressOffset>0x8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ODIGEST_D</name>
                        <displayName>SHAMD5_ODIGEST_D</displayName>
                        <description>WRITE: Outer Digest [31:0] for MD5 [63:31] for SHA-1 [159:128] for SHA-2 / HMAC Key [127:96] for HMAC key proc READ: Outer Digest [31:0] for MD5 [63:32] for SHA-1 [159:128] for SHA-2</description>
                        <addressOffset>0xC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ODIGEST_E</name>
                        <displayName>SHAMD5_ODIGEST_E</displayName>
                        <description>WRITE: Outer Digest [31:0] for SHA-1 [127:96] for SHA-2 / HMAC Key [159:128] for HMAC key proc READ: Outer Digest [31:0] for SHA-1 [127:96] for SHA-2</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ODIGEST_F</name>
                        <displayName>SHAMD5_ODIGEST_F</displayName>
                        <description>WRITE: Outer Digest [95:64] for SHA-2 / HMAC Key [191:160] for HMAC key proc READ: Outer Digest [95:64] for SHA-2</description>
                        <addressOffset>0x14</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ODIGEST_G</name>
                        <displayName>SHAMD5_ODIGEST_G</displayName>
                        <description>WRITE: Outer Digest [63:32] for SHA-2 / HMAC Key [223:192] for HMAC key proc READ: Outer Digest [63:32] for SHA-2</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ODIGEST_H</name>
                        <displayName>SHAMD5_ODIGEST_H</displayName>
                        <description>WRITE: Outer Digest [31:0] for SHA-2 / HMAC Key [255:224] for HMAC key proc READ: Outer Digest [31:0] for SHA-2</description>
                        <addressOffset>0x1C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IDIGEST_A</name>
                        <displayName>SHAMD5_IDIGEST_A</displayName>
                        <description>WRITE: Inner / Initial Digest [127:96] for MD5 [159:128] for SHA-1 [255:224] for SHA-2 / HMAC Key [287:256] for HMAC key proc READ: Intermediate / Inner Digest [127:96] for MD5 [159:128] for SHA-1 [255:224] for SHA-2 / Result Digest/MAC [127:96] for MD5 [159:128] for SHA-1 [223:192] for SHA-2 224 [255:224] for SHA-2 256</description>
                        <addressOffset>0x20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IDIGEST_B</name>
                        <displayName>SHAMD5_IDIGEST_B</displayName>
                        <description>WRITE: Inner / Initial Digest [95:64] for MD5 [127:96] for SHA-1 [223:192] for SHA-2 / HMAC Key [319:288] for HMAC key proc READ: Intermediate / Inner Digest [95:64] for MD5 [127:96] for SHA-1 [223:192] for SHA-2 / Result Digest/MAC [95:64] for MD5 [127:96] for SHA-1 [191:160] for SHA-2 224 [223:192] for SHA-2 256</description>
                        <addressOffset>0x24</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IDIGEST_C</name>
                        <displayName>SHAMD5_IDIGEST_C</displayName>
                        <description>WRITE: Inner / Initial Digest [63:32] for MD5 [95:64] for SHA-1 [191:160] for SHA- 2 / HMAC Key [351:320] for HMAC key proc READ: Intermediate / Inner Digest [63:32] for MD5 [95:64] for SHA-1 [191:160] for SHA-2 / Result Digest/MAC [63:32] for MD5 [95:64] for SHA-1 [159:128] for SHA-2 224 [191:160] for SHA-2 256</description>
                        <addressOffset>0x28</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IDIGEST_D</name>
                        <displayName>SHAMD5_IDIGEST_D</displayName>
                        <description>WRITE: Inner / Initial Digest [31:0] for MD5 [63:32] for SHA-1 [159:128] for SHA-2 / HMAC Key [383:352] for HMAC key proc READ: Intermediate / Inner Digest [31:0] for MD5 [63:32] for SHA-1 [159:128] for SHA-2 / Result Digest/MAC [31:0] for MD5 [63:32] for SHA-1 [127:96] for SHA-2 224 [159:128] for SHA-2 256</description>
                        <addressOffset>0x2C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IDIGEST_E</name>
                        <displayName>SHAMD5_IDIGEST_E</displayName>
                        <description>WRITE: Inner / Initial Digest [31:0] for SHA-1 [127:96] for SHA-2 / HMAC Key [415:384] for HMAC key proc READ: Intermediate / Inner Digest [31:0] for SHA-1 [127:96] for SHA-2 / Result Digest/MAC [31:0] for SHA-1 [95:64] for SHA-2 224 [127:96] for SHA-2 256</description>
                        <addressOffset>0x30</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IDIGEST_F</name>
                        <displayName>SHAMD5_IDIGEST_F</displayName>
                        <description>WRITE: Inner / Initial Digest [95:64] for SHA-2 / HMAC Key [447:416] for HMAC key proc READ: Intermediate / Inner Digest [95:64] for SHA-2 / Result Digest/MAC [63:32] for SHA-2 224 [95:64] for SHA-2 256</description>
                        <addressOffset>0x34</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IDIGEST_G</name>
                        <displayName>SHAMD5_IDIGEST_G</displayName>
                        <description>WRITE: Inner / Initial Digest [63:32] for SHA-2 / HMAC Key [479:448] for HMAC key proc READ: Intermediate / Inner Digest [63:32] for SHA-2 / Result Digest/MAC [31:0] for SHA-2 224 [63:32] for SHA-2 256</description>
                        <addressOffset>0x38</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IDIGEST_H</name>
                        <displayName>SHAMD5_IDIGEST_H</displayName>
                        <description>WRITE: Inner / Initial Digest [31:0] for SHA-2 / HMAC Key [511:480] for HMAC key proc READ: Intermediate / Inner Digest [31:0] for SHA-2 / Result Digest/MAC [31:0] for SHA-2 256</description>
                        <addressOffset>0x3C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DIGEST_COUNT</name>
                        <displayName>SHAMD5_DIGEST_COUNT</displayName>
                        <description>WRITE: Initial Digest Count ([31:6] only [5:0] assumed 0) READ: Result / IntermediateDigest Count The initial digest byte count for hash/HMAC continue operations (HMAC Key Processing = 0 and Use Algorithm Constants = 0) on the Secure World must be written to this register prior to starting the operation by writing to S_HASH_MODE. When either HMAC Key Processing is 1 or Use Algorithm Constants is 1 this register does not need to be written it will be overwritten with 64 (1 hash block of key XOR ipad) or 0 respectively automatically. When starting a HMAC operation from pre-computes (HMAC Key Processing is 0) then the value 64 must be written here to compensate for the appended key XOR ipad block. Note that the value written should always be a 64 byte multiple the lower 6 bits written are ignored. The updated digest byte count (initial digest byte count + bytes processed) can be read from this register when the status register indicates that the operation is done or suspended due to a context switch request or when a Secure World context out DMA is requested. In Advanced DMA mode when not suspended with a partial result reading the SHAMD5_DIGEST_COUNT register triggers the Hash/HMAC Engine to start the next context input DMA. Therefore reading the SHAMD5_DIGEST_COUNT register should always be the last context-read action if not suspended with a partial result (i.e. PartHashReady interrupt not pending).</description>
                        <addressOffset>0x40</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MODE</name>
                        <displayName>SHAMD5_MODE</displayName>
                        <description>Register SHAMD5_MODE</description>
                        <addressOffset>0x44</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>ALGO</name>
                                <description>These bits select the hash algorithm to be used for processing: 0x0 md5_128 algorithm 0x1 sha1_160 algorithm 0x2 sha2_224 algorithm 0x3 sha2_256 algorithm</description>
                                <lsb>1</lsb>
                                <msb>2</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>LENGTH</name>
                        <displayName>SHAMD5_LENGTH</displayName>
                        <description>WRITE: Block Length / Remaining Byte Count (bytes) READ: Remaining Byte Count. The value programmed MUST be a 64-byte multiple if Close Hash is set to 0. This register is also the trigger to start processing: once this register is written the core will commence requesting input data via DMA or IRQ (if programmed length &gt; 0) and start processing. The remaining byte count for the active operation can be read from this register when the interrupt status register indicates that the operation is suspended due to a context switch request.</description>
                        <addressOffset>0x48</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA0_IN</name>
                        <displayName>SHAMD5_DATA0_IN</displayName>
                        <description>Data input message 0</description>
                        <addressOffset>0x80</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA1_IN</name>
                        <displayName>SHAMD5_DATA1_IN</displayName>
                        <description>Data input message 1</description>
                        <addressOffset>0x84</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA2_IN</name>
                        <displayName>SHAMD5_DATA2_IN</displayName>
                        <description>Data input message 2</description>
                        <addressOffset>0x88</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA3_IN</name>
                        <displayName>SHAMD5_DATA3_IN</displayName>
                        <description>Data input message 3</description>
                        <addressOffset>0x8C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA4_IN</name>
                        <displayName>SHAMD5_DATA4_IN</displayName>
                        <description>Data input message 4</description>
                        <addressOffset>0x90</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA5_IN</name>
                        <displayName>SHAMD5_DATA5_IN</displayName>
                        <description>Data input message 5</description>
                        <addressOffset>0x94</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA6_IN</name>
                        <displayName>SHAMD5_DATA6_IN</displayName>
                        <description>Data input message 6</description>
                        <addressOffset>0x98</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA7_IN</name>
                        <displayName>SHAMD5_DATA7_IN</displayName>
                        <description>Data input message 7</description>
                        <addressOffset>0x9C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA8_IN</name>
                        <displayName>SHAMD5_DATA8_IN</displayName>
                        <description>Data input message 8</description>
                        <addressOffset>0xA0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA9_IN</name>
                        <displayName>SHAMD5_DATA9_IN</displayName>
                        <description>Data input message 9</description>
                        <addressOffset>0xA4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA10_IN</name>
                        <displayName>SHAMD5_DATA10_IN</displayName>
                        <description>Data input message 10</description>
                        <addressOffset>0xA8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA11_IN</name>
                        <displayName>SHAMD5_DATA11_IN</displayName>
                        <description>Data input message 11</description>
                        <addressOffset>0xAC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA12_IN</name>
                        <displayName>SHAMD5_DATA12_IN</displayName>
                        <description>Data input message 12</description>
                        <addressOffset>0xB0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA13_IN</name>
                        <displayName>SHAMD5_DATA13_IN</displayName>
                        <description>Data input message 13</description>
                        <addressOffset>0xB4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA14_IN</name>
                        <displayName>SHAMD5_DATA14_IN</displayName>
                        <description>Data input message 14</description>
                        <addressOffset>0xB8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA15_IN</name>
                        <displayName>SHAMD5_DATA15_IN</displayName>
                        <description>Data input message 15</description>
                        <addressOffset>0xBC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>REVISION</name>
                        <displayName>SHAMD5_REVISION</displayName>
                        <description>Register SHAMD5_REV</description>
                        <addressOffset>0x100</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SCHEME</name>
                                <description>SCHEME</description>
                                <lsb>30</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>FUNC</name>
                                <description>Function indicates a software compatible module family. If there is no level of software compatibility a new Func number (and hence REVISION) should be assigned.</description>
                                <lsb>16</lsb>
                                <msb>27</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>R_RTL</name>
                                <description>RTL Version (R) maintained by IP design owner. RTL follows a numbering such as X.Y.R.Z which are explained in this table. R changes ONLY when: (1) PDS uploads occur which may have been due to spec changes (2) Bug fixes occur (3) Resets to '0' when X or Y changes. Design team has an internal 'Z' (customer invisible) number which increments on every drop that happens due to DV and RTL updates. Z resets to 0 when R increments.</description>
                                <lsb>11</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>X_MAJOR</name>
                                <description>Major Revision (X) maintained by IP specification owner. X changes ONLY when: (1) There is a major feature addition. An example would be adding Master Mode to Utopia Level2. The Func field (or Class/Type in old PID format) will remain the same. X does NOT change due to: (1) Bug fixes (2) Change in feature parameters.</description>
                                <lsb>8</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CUSTOM</name>
                                <description>CUSTOM</description>
                                <lsb>6</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>Y_MINOR</name>
                                <description>Minor Revision (Y) maintained by IP specification owner. Y changes ONLY when: (1) Features are scaled (up or down). Flexibility exists in that this feature scalability may either be represented in the Y change or a specific register in the IP that indicates which features are exactly available. (2) When feature creeps from Is-Not list to Is list. But this may not be the case once it sees silicon; in which case X will change. Y does NOT change due to: (1) Bug fixes (2) Typos or clarifications (3) major functional/feature change/addition/deletion. Instead these changes may be reflected via R S X as applicable. Spec owner maintains a customer-invisible number 'S' which changes due to: (1) Typos/clarifications (2) Bug documentation. Note that this bug is not due to a spec change but due to implementation. Nevertheless the spec tracks the IP bugs. An RTL release (say for silicon PG1.1) that occurs due to bug fix should document the corresponding spec number (X.Y.S) in its release notes.</description>
                                <lsb>0</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SYSCONFIG</name>
                        <displayName>SHAMD5_SYSCONFIG</displayName>
                        <description>Register SHAMD5_SYSCONFIG</description>
                        <addressOffset>0x110</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SYSSTATUS</name>
                        <displayName>SHAMD5_SYSSTATUS</displayName>
                        <description>Register SHAMD5_SYSSTATUS</description>
                        <addressOffset>0x114</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IRQSTATUS</name>
                        <displayName>SHAMD5_IRQSTATUS</displayName>
                        <description>Register SHAMD5_IRQSTATUS</description>
                        <addressOffset>0x118</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IRQENABLE</name>
                        <displayName>SHAMD5_IRQENABLE</displayName>
                        <description>Register SHAMD5_IRQENABLE. The SHAMD5_IRQENABLE register contains an enable bit for each unique interrupt for the public side. An interrupt is enabled when both the global enable in SHAMD5_SYSCONFIG (PIT_en) and the bit in this register are both set to 1. An interrupt that is enabled is propagated to the SINTREQUEST_P output. Please note that the dedicated partial hash output (SINTREQUEST_PART_P) is not affected by this register it is only affected by the global enable SHAMD5_SYSCONFIG (PIT_en).</description>
                        <addressOffset>0x11C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_ODIGEST_A</name>
                        <displayName>SHAMD5_HASH512_ODIGEST_A</displayName>
                        <description>HASH512_ODIGEST_A</description>
                        <addressOffset>0x200</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_ODIGEST_B</name>
                        <displayName>SHAMD5_HASH512_ODIGEST_B</displayName>
                        <description>HASH512_ODIGEST_B</description>
                        <addressOffset>0x204</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_ODIGEST_C</name>
                        <displayName>SHAMD5_HASH512_ODIGEST_C</displayName>
                        <description>HASH512_ODIGEST_C</description>
                        <addressOffset>0x208</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_ODIGEST_D</name>
                        <displayName>SHAMD5_HASH512_ODIGEST_D</displayName>
                        <description>HASH512_ODIGEST_D</description>
                        <addressOffset>0x20C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_ODIGEST_E</name>
                        <displayName>SHAMD5_HASH512_ODIGEST_E</displayName>
                        <description>HASH512_ODIGEST_E</description>
                        <addressOffset>0x210</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_ODIGEST_F</name>
                        <displayName>SHAMD5_HASH512_ODIGEST_F</displayName>
                        <description>HASH512_ODIGEST_F</description>
                        <addressOffset>0x214</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_ODIGEST_G</name>
                        <displayName>SHAMD5_HASH512_ODIGEST_G</displayName>
                        <description>HASH512_ODIGEST_G</description>
                        <addressOffset>0x218</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_ODIGEST_H</name>
                        <displayName>SHAMD5_HASH512_ODIGEST_H</displayName>
                        <description>HASH512_ODIGEST_H</description>
                        <addressOffset>0x21C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_ODIGEST_I</name>
                        <displayName>SHAMD5_HASH512_ODIGEST_I</displayName>
                        <description>HASH512_ODIGEST_I</description>
                        <addressOffset>0x220</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_ODIGEST_J</name>
                        <displayName>SHAMD5_HASH512_ODIGEST_J</displayName>
                        <description>HASH512_ODIGEST_J</description>
                        <addressOffset>0x224</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_ODIGEST_K</name>
                        <displayName>SHAMD5_HASH512_ODIGEST_K</displayName>
                        <description>HASH512_ODIGEST_K</description>
                        <addressOffset>0x228</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_ODIGEST_L</name>
                        <displayName>SHAMD5_HASH512_ODIGEST_L</displayName>
                        <description>HASH512_ODIGEST_L</description>
                        <addressOffset>0x22C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_ODIGEST_M</name>
                        <displayName>SHAMD5_HASH512_ODIGEST_M</displayName>
                        <description>HASH512_ODIGEST_M</description>
                        <addressOffset>0x230</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_ODIGEST_N</name>
                        <displayName>SHAMD5_HASH512_ODIGEST_N</displayName>
                        <description>HASH512_ODIGEST_N</description>
                        <addressOffset>0x234</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_ODIGEST_O</name>
                        <displayName>SHAMD5_HASH512_ODIGEST_O</displayName>
                        <description>HASH512_ODIGEST_O</description>
                        <addressOffset>0x238</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_ODIGEST_P</name>
                        <displayName>SHAMD5_HASH512_ODIGEST_P</displayName>
                        <description>HASH512_ODIGEST_P</description>
                        <addressOffset>0x23C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_IDIGEST_A</name>
                        <displayName>SHAMD5_HASH512_IDIGEST_A</displayName>
                        <description>HASH512_IDIGEST_A</description>
                        <addressOffset>0x240</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_IDIGEST_B</name>
                        <displayName>SHAMD5_HASH512_IDIGEST_B</displayName>
                        <description>HASH512_IDIGEST_B</description>
                        <addressOffset>0x244</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_IDIGEST_C</name>
                        <displayName>SHAMD5_HASH512_IDIGEST_C</displayName>
                        <description>HASH512_IDIGEST_C</description>
                        <addressOffset>0x248</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_IDIGEST_D</name>
                        <displayName>SHAMD5_HASH512_IDIGEST_D</displayName>
                        <description>HASH512_IDIGEST_D</description>
                        <addressOffset>0x24C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_IDIGEST_E</name>
                        <displayName>SHAMD5_HASH512_IDIGEST_E</displayName>
                        <description>HASH512_IDIGEST_E</description>
                        <addressOffset>0x250</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_IDIGEST_F</name>
                        <displayName>SHAMD5_HASH512_IDIGEST_F</displayName>
                        <description>HASH512_IDIGEST_F</description>
                        <addressOffset>0x254</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_IDIGEST_G</name>
                        <displayName>SHAMD5_HASH512_IDIGEST_G</displayName>
                        <description>HASH512_IDIGEST_G</description>
                        <addressOffset>0x258</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_IDIGEST_H</name>
                        <displayName>SHAMD5_HASH512_IDIGEST_H</displayName>
                        <description>HASH512_IDIGEST_H</description>
                        <addressOffset>0x25C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_IDIGEST_I</name>
                        <displayName>SHAMD5_HASH512_IDIGEST_I</displayName>
                        <description>HASH512_IDIGEST_I</description>
                        <addressOffset>0x260</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_IDIGEST_J</name>
                        <displayName>SHAMD5_HASH512_IDIGEST_J</displayName>
                        <description>HASH512_IDIGEST_J</description>
                        <addressOffset>0x264</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_IDIGEST_K</name>
                        <displayName>SHAMD5_HASH512_IDIGEST_K</displayName>
                        <description>HASH512_IDIGEST_K</description>
                        <addressOffset>0x268</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_IDIGEST_L</name>
                        <displayName>SHAMD5_HASH512_IDIGEST_L</displayName>
                        <description>HASH512_IDIGEST_L</description>
                        <addressOffset>0x26C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_IDIGEST_M</name>
                        <displayName>SHAMD5_HASH512_IDIGEST_M</displayName>
                        <description>HASH512_IDIGEST_M</description>
                        <addressOffset>0x270</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_IDIGEST_N</name>
                        <displayName>SHAMD5_HASH512_IDIGEST_N</displayName>
                        <description>HASH512_IDIGEST_N</description>
                        <addressOffset>0x274</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_IDIGEST_O</name>
                        <displayName>SHAMD5_HASH512_IDIGEST_O</displayName>
                        <description>HASH512_IDIGEST_O</description>
                        <addressOffset>0x278</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_IDIGEST_P</name>
                        <displayName>SHAMD5_HASH512_IDIGEST_P</displayName>
                        <description>HASH512_IDIGEST_P</description>
                        <addressOffset>0x27C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_DIGEST_COUNT</name>
                        <displayName>SHAMD5_HASH512_DIGEST_COUNT</displayName>
                        <description>HASH512_DIGEST_COUNT</description>
                        <addressOffset>0x280</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_MODE</name>
                        <displayName>SHAMD5_HASH512_MODE</displayName>
                        <description>HASH512_MODE</description>
                        <addressOffset>0x284</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HASH512_LENGTH</name>
                        <displayName>SHAMD5_HASH512_LENGTH</displayName>
                        <description>HASH512_LENGTH</description>
                        <addressOffset>0x288</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>AES</name>
                <version>1.0</version>
                <description>AES</description>
                <baseAddress>0x44037000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>KEY2_6</name>
                        <displayName>AES_KEY2_6</displayName>
                        <description>XTS second key / CBC-MAC third key</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>KEY2_7</name>
                        <displayName>AES_KEY2_7</displayName>
                        <description>XTS second key (MSW for 256-bit key) / CBC-MAC third key (MSW)</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>KEY2_4</name>
                        <displayName>AES_KEY2_4</displayName>
                        <description>XTS / CCM second key / CBC-MAC third key (LSW)</description>
                        <addressOffset>0x8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>KEY2_5</name>
                        <displayName>AES_KEY2_5</displayName>
                        <description>XTS second key (MSW for 192-bit key) / CBC-MAC third key</description>
                        <addressOffset>0xC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>KEY2_2</name>
                        <displayName>AES_KEY2_2</displayName>
                        <description>XTS / CCM / CBC-MAC second key / Hash Key input</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>KEY2_3</name>
                        <displayName>AES_KEY2_3</displayName>
                        <description>XTS second key (MSW for 128-bit key) + CCM/CBC-MAC second key (MSW) / Hash Key input (MSW)</description>
                        <addressOffset>0x14</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>KEY2_0</name>
                        <displayName>AES_KEY2_0</displayName>
                        <description>XTS / CCM / CBC-MAC second key (LSW) / Hash Key input (LSW)</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>KEY2_1</name>
                        <displayName>AES_KEY2_1</displayName>
                        <description>XTS / CCM / CBC-MAC second key / Hash Key input</description>
                        <addressOffset>0x1C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>KEY1_6</name>
                        <displayName>AES_KEY1_6</displayName>
                        <description>Key (LSW for 256-bit key)</description>
                        <addressOffset>0x20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>KEY1_7</name>
                        <displayName>AES_KEY1_7</displayName>
                        <description>Key (MSW for 256-bit key)</description>
                        <addressOffset>0x24</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>KEY1_4</name>
                        <displayName>AES_KEY1_4</displayName>
                        <description>Key (LSW for 192-bit key)</description>
                        <addressOffset>0x28</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>KEY1_5</name>
                        <displayName>AES_KEY1_5</displayName>
                        <description>Key (MSW for 192-bit key)</description>
                        <addressOffset>0x2C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>KEY1_2</name>
                        <displayName>AES_KEY1_2</displayName>
                        <description>Key</description>
                        <addressOffset>0x30</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>KEY1_3</name>
                        <displayName>AES_KEY1_3</displayName>
                        <description>Key (MSW for 128-bit key)</description>
                        <addressOffset>0x34</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>KEY1_0</name>
                        <displayName>AES_KEY1_0</displayName>
                        <description>Key (LSW for 128-bit key)</description>
                        <addressOffset>0x38</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>KEY1_1</name>
                        <displayName>AES_KEY1_1</displayName>
                        <description>Key</description>
                        <addressOffset>0x3C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IV_IN_0</name>
                        <displayName>AES_IV_IN_0</displayName>
                        <description>Initialization Vector input (LSW)</description>
                        <addressOffset>0x40</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IV_IN_1</name>
                        <displayName>AES_IV_IN_1</displayName>
                        <description>Initialization vector input</description>
                        <addressOffset>0x44</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IV_IN_2</name>
                        <displayName>AES_IV_IN_2</displayName>
                        <description>Initialization vector input</description>
                        <addressOffset>0x48</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IV_IN_3</name>
                        <displayName>AES_IV_IN_3</displayName>
                        <description>Initialization Vector input (MSW)</description>
                        <addressOffset>0x4C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CTRL</name>
                        <displayName>AES_CTRL</displayName>
                        <description>register determines the mode of operation of the AES Engine</description>
                        <addressOffset>0x50</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>CCM</name>
                                <description>Defines M? that indicated the length of the authentication field for CCM operations; the authentication field length equals two times (the value of CCM-M plus one). Note that the AES Engine always returns a 128-bit authentication field@@ of which the M least significant bytes are valid. All values are supported.</description>
                                <lsb>22</lsb>
                                <msb>24</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CCM_L</name>
                                <description>Defines L? that indicated the width of the length field for CCM operations; the length field in bytes equals the value of CMM-L plus one. Supported values for L are (programmed value): 2 (1)@@ 4 (3) and 8 (7).</description>
                                <lsb>19</lsb>
                                <msb>21</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>GCM</name>
                                <description>AES-GCM mode is selected.this is a combined mode@@ using the Galois field multiplier GF(2^128) for authentication and AES-CTR mode for encryption@@ the bits specify the GCM mode. 0x0 No operation 0x1 GHASH with H loaded and Y0-encrypted forced to zero 0x2 GHASH with H loaded and Y0-encrypted calculated internally 0x3 Autonomous GHASH (both H and Y0-encrypted calculated internally)</description>
                                <lsb>16</lsb>
                                <msb>17</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>XTS</name>
                                <description>AES-XTS operation is selected; the bits specify the XTS mode.01 = Previous/intermediate tweak value and j loaded (value is loaded via IV@@ j is loaded via the AAD length register) 0x0 No operation 0x1 Previous/intermediate tweak value and j loaded (value is loaded via IV@@ j is loaded via the AAD length register) 0x2 Key2@@ i and j loaded (i is loaded via IV@@ j is loaded via the AAD length register) 0x3 Key2 and i loaded@@ j=0 (i is loaded via IV)</description>
                                <lsb>11</lsb>
                                <msb>12</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CTR_WIDTH</name>
                                <description>Specifies the counter width for AES-CTR mode 0x0 Counter is 32 bits 0x1 Counter is 64 bits 0x2 Counter is 128 bits 0x3 Counter is 192 bits</description>
                                <lsb>7</lsb>
                                <msb>8</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>KEY_SIZE</name>
                                <description>key size 0x0 reserved 0x1 Key is 128 bits. 0x2 Key is 192 bits 0x3 Key is 256</description>
                                <lsb>3</lsb>
                                <msb>4</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>C_LENGTH_0</name>
                        <displayName>AES_C_LENGTH_0</displayName>
                        <description>Crypto data length registers (LSW and MSW) store the cryptographic data length in bytes for all modes. Once processing with this context is started@@ this length decrements to zero. Data lengths up to (2^61  1) bytes are allowed. For GCM@@ any value up to 2^36 - 32 bytes can be used. This is because a 32-bit counter mode is used; the maximum number of 128-bit blocks is 2^32  2@@ resulting in a maximum number of bytes of 2^36 - 32. A write to this register triggers the engine to start using this context. This is valid for all modes except GCM and CCM. Note that for the combined modes@@ this length does not include the authentication only data; the authentication length is specified in the AES_AUTH_LENGTH register below. All modes must have a length &gt; 0. For the combined modes@@ it is allowed to have one of the lengths equal to zero. For the basic encryption modes (ECB/CBC/CTR/ICM/CFB128) it is allowed to program zero to the length field; in that case the length is assumed infinite. All data must be byte (8-bit) aligned; bit aligned data streams are not supported by the AES Engine. For a Host read operation@@ these registers return all-zeroes.</description>
                        <addressOffset>0x54</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>C_LENGTH_1</name>
                        <displayName>AES_C_LENGTH_1</displayName>
                        <description>Crypto data length registers (LSW and MSW) store the cryptographic data length in bytes for all modes. Once processing with this context is started@@ this length decrements to zero. Data lengths up to (2^61  1) bytes are allowed. For GCM@@ any value up to 2^36 - 32 bytes can be used. This is because a 32-bit counter mode is used; the maximum number of 128-bit blocks is 2^32  2@@ resulting in a maximum number of bytes of 2^36 - 32. A write to this register triggers the engine to start using this context. This is valid for all modes except GCM and CCM. Note that for the combined modes@@ this length does not include the authentication only data; the authentication length is specified in the AES_AUTH_LENGTH register below. All modes must have a length &gt; 0. For the combined modes@@ it is allowed to have one of the lengths equal to zero. For the basic encryption modes (ECB/CBC/CTR/ICM/CFB128) it is allowed to program zero to the length field; in that case the length is assumed infinite. All data must be byte (8-bit) aligned; bit aligned data streams are not supported by the AES Engine. For a Host read operation@@ these registers return all-zeroes.</description>
                        <addressOffset>0x58</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>LENGTH</name>
                                <description>Data length (MSW) length registers (LSW and MSW) store the cryptographic data length in bytes for all modes. Once processing with this context is started@@ this length decrements to zero. Data lengths up to (2^61  1) bytes are allowed. For GCM@@ any value up to 2^36 - 32 bytes can be used. This is because a 32-bit counter mode is used; the maximum number of 128-bit blocks is 2^32  2@@ resulting in a maximum number of bytes of 2^36 - 32. A write to this register triggers the engine to start using this context. This is valid for all modes except GCM and CCM. Note that for the combined modes@@ this length does not include the authentication only data; the authentication length is specified in the AES_AUTH_LENGTH register below. All modes must have a length &gt; 0. For the combined modes@@ it is allowed to have one of the lengths equal to zero. For the basic encryption modes (ECB/CBC/CTR/ICM/CFB128) it is allowed to program zero to the length field; in that case the length is assumed infinite. All data must be byte (8-bit) aligned; bit aligned data streams are not supported by the AES Engine. For a Host read operation@@ these registers return all-zeroes.</description>
                                <lsb>0</lsb>
                                <msb>28</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>AUTH_LENGTH</name>
                        <displayName>AES_AUTH_LENGTH</displayName>
                        <description>AAD data length. The authentication length register store the authentication data length in bytes for combined modes only (GCM or CCM) Supported AAD-lengths for CCM are from 0 to (2^16 - 2^8) bytes. For GCM any value up to (2^32 - 1) bytes can be used. Once processing with this context is started@@ this length decrements to zero. A write to this register triggers the engine to start using this context for GCM and CCM. For XTS this register is optionally used to load j. Loading of j is only required if j != 0. j is a 28-bit value and must be written to bits [31-4] of this register. j represents the sequential number of the 128-bit block inside the data unit. For the first block in a unit@@ this value is zero. It is not required to provide a j for each new data block within a unit. Note that it is possible to start with a j unequal to zero; refer to Table 4 for more details. For a Host read operation@@ these registers return all-zeroes.</description>
                        <addressOffset>0x5C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA_IN_0</name>
                        <displayName>AES_DATA_IN_0</displayName>
                        <description>Data register to read and write plaintext/ciphertext (MSW)</description>
                        <addressOffset>0x60</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA_IN_1</name>
                        <displayName>AES_DATA_IN_1</displayName>
                        <description>Data register to read and write plaintext/ciphertext</description>
                        <addressOffset>0x64</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA_IN_2</name>
                        <displayName>AES_DATA_IN_2</displayName>
                        <description>Data register to read and write plaintext/ciphertext</description>
                        <addressOffset>0x68</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA_IN_3</name>
                        <displayName>AES_DATA_IN_3</displayName>
                        <description>Data register to read and write plaintext/ciphertext (LSW)</description>
                        <addressOffset>0x6C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TAG_OUT_0</name>
                        <displayName>AES_TAG_OUT_0</displayName>
                        <description>TAG_OUT_0</description>
                        <addressOffset>0x70</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TAG_OUT_1</name>
                        <displayName>AES_TAG_OUT_1</displayName>
                        <description>TAG_OUT_1</description>
                        <addressOffset>0x74</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TAG_OUT_2</name>
                        <displayName>AES_TAG_OUT_2</displayName>
                        <description>TAG_OUT_2</description>
                        <addressOffset>0x78</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>TAG_OUT_3</name>
                        <displayName>AES_TAG_OUT_3</displayName>
                        <description>TAG_OUT_3</description>
                        <addressOffset>0x7C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>REVISION</name>
                        <displayName>AES_REVISION</displayName>
                        <description>Register AES_REVISION</description>
                        <addressOffset>0x80</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SCHEME</name>
                                <description>SCHEME</description>
                                <lsb>30</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>FUNC</name>
                                <description>Function indicates a software compatible module family. If there is no level of software compatibility a new Func number (and hence REVISION) should be assigned.</description>
                                <lsb>16</lsb>
                                <msb>27</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>R_RTL</name>
                                <description>RTL Version (R)@@ maintained by IP design owner. RTL follows a numbering such as X.Y.R.Z which are explained in this table. R changes ONLY when: (1) PDS uploads occur which may have been due to spec changes (2) Bug fixes occur (3) Resets to '0' when X or Y changes. Design team has an internal 'Z' (customer invisible) number which increments on every drop that happens due to DV and RTL updates. Z resets to 0 when R increments.</description>
                                <lsb>11</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>X_MAJOR</name>
                                <description>Major Revision (X)@@ maintained by IP specification owner. X changes ONLY when: (1) There is a major feature addition. An example would be adding Master Mode to Utopia Level2. The Func field (or Class/Type in old PID format) will remain the same. X does NOT change due to: (1) Bug fixes (2) Change in feature parameters.</description>
                                <lsb>8</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CUSTOM</name>
                                <description>CUSTOM</description>
                                <lsb>6</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>Y_MINOR</name>
                                <description>Minor Revision (Y)@@ maintained by IP specification owner. Y changes ONLY when: (1) Features are scaled (up or down). Flexibility exists in that this feature scalability may either be represented in the Y change or a specific register in the IP that indicates which features are exactly available. (2) When feature creeps from Is-Not list to Is list. But this may not be the case once it sees silicon; in which case X will change. Y does NOT change due to: (1) Bug fixes (2) Typos or clarifications (3) major functional/feature change/addition/deletion. Instead these changes may be reflected via R@@ S@@ X as applicable. Spec owner maintains a customer-invisible number 'S' which changes due to: (1) Typos/clarifications (2) Bug documentation. Note that this bug is not due to a spec change but due to implementation. Nevertheless@@ the spec tracks the IP bugs. An RTL release (say for silicon PG1.1) that occurs due to bug fix should document the corresponding spec number (X.Y.S) in its release notes.</description>
                                <lsb>0</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SYSCONFIG</name>
                        <displayName>AES_SYSCONFIG</displayName>
                        <description>Register AES_SYSCONFIG.This register configures the DMA signals and controls the IDLE and reset logic</description>
                        <addressOffset>0x84</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SYSSTATUS</name>
                        <displayName>AES_SYSSTATUS</displayName>
                        <description>SYSSTATUS</description>
                        <addressOffset>0x88</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IRQSTATUS</name>
                        <displayName>AES_IRQSTATUS</displayName>
                        <description>This register indicates the interrupt status. If one of the interrupt bits is set the interrupt output will be asserted</description>
                        <addressOffset>0x8C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IRQENABLE</name>
                        <displayName>AES_IRQENABLE</displayName>
                        <description>This register contains an enable bit for each unique interrupt generated by the module. It matches the layout of AES_IRQSTATUS register. An interrupt is enabled when the bit in this register is set to 1. An interrupt that is enabled is propagated to the SINTREQUEST_x output. All interrupts need to be enabled explicitly by writing this register. ****************************************************************************</description>
                        <addressOffset>0x90</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>DES</name>
                <version>1.0</version>
                <description>DES</description>
                <baseAddress>0x44039000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>KEY3_L</name>
                        <displayName>DES_KEY3_L</displayName>
                        <description>KEY3 (LSW) for 192-bit key</description>
                        <addressOffset>0x0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>KEY3_H</name>
                        <displayName>DES_KEY3_H</displayName>
                        <description>KEY3 (MSW) for 192-bit key</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>KEY2_L</name>
                        <displayName>DES_KEY2_L</displayName>
                        <description>KEY2 (LSW) for 192-bit key</description>
                        <addressOffset>0x8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>KEY2_H</name>
                        <displayName>DES_KEY2_H</displayName>
                        <description>KEY2 (MSW) for 192-bit key</description>
                        <addressOffset>0xC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>KEY1_L</name>
                        <displayName>DES_KEY1_L</displayName>
                        <description>KEY1 (LSW) for 128-bit key/192-bit key</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>KEY1_H</name>
                        <displayName>DES_KEY1_H</displayName>
                        <description>KEY1 (LSW) for 128-bit key/192-bit key</description>
                        <addressOffset>0x14</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IV_L</name>
                        <displayName>DES_IV_L</displayName>
                        <description>Initialization vector LSW</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IV_H</name>
                        <displayName>DES_IV_H</displayName>
                        <description>Initialization vector MSW</description>
                        <addressOffset>0x1C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CTRL</name>
                        <displayName>DES_CTRL</displayName>
                        <description>CTRL</description>
                        <addressOffset>0x20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>MODE</name>
                                <description>Select CBC ECB or CFB mode 0x0 ecb mode 0x1 cbc mode 0x2 cfb mode 0x3 reserved</description>
                                <lsb>4</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>LENGTH</name>
                        <displayName>DES_LENGTH</displayName>
                        <description>Indicates the cryptographic data length in bytes for all modes. Once processing is started with this context this length decrements to zero. Data lengths up to (2^32  1) bytes are allowed. A write to this register triggers the engine to start using this context. For a Host read operation these registers return all-zeroes.</description>
                        <addressOffset>0x24</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA_L</name>
                        <displayName>DES_DATA_L</displayName>
                        <description>Data register(LSW) to read/write encrypted/decrypted data.</description>
                        <addressOffset>0x28</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DATA_H</name>
                        <displayName>DES_DATA_H</displayName>
                        <description>Data register(MSW) to read/write encrypted/decrypted data.</description>
                        <addressOffset>0x2C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>REVISION</name>
                        <displayName>DES_REVISION</displayName>
                        <description>REVISION</description>
                        <addressOffset>0x30</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                        <fields>
                            <field>
                                <name>SCHEME</name>
                                <description>SCHEME</description>
                                <lsb>30</lsb>
                                <msb>31</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>FUNC</name>
                                <description>Function indicates a software compatible module family. If there is no level of software compatibility a new Func number (and hence REVISION) should be assigned.</description>
                                <lsb>16</lsb>
                                <msb>27</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>R_RTL</name>
                                <description>RTL Version (R) maintained by IP design owner. RTL follows a numbering such as X.Y.R.Z which are explained in this table. R changes ONLY when: (1) PDS uploads occur which may have been due to spec changes (2) Bug fixes occur (3) Resets to '0' when X or Y changes. Design team has an internal 'Z' (customer invisible) number which increments on every drop that happens due to DV and RTL updates. Z resets to 0 when R increments.</description>
                                <lsb>11</lsb>
                                <msb>15</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>X_MAJOR</name>
                                <description>Major Revision (X) maintained by IP specification owner. X changes ONLY when: (1) There is a major feature addition. An example would be adding Master Mode to Utopia Level2. The Func field (or Class/Type in old PID format) will remain the same. X does NOT change due to: (1) Bug fixes (2) Change in feature parameters.</description>
                                <lsb>8</lsb>
                                <msb>10</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>CUSTOM</name>
                                <description>CUSTOM</description>
                                <lsb>6</lsb>
                                <msb>7</msb>
                                <access>read-write</access>
                            </field>
                            <field>
                                <name>Y_MINOR</name>
                                <description>Minor Revision (Y) maintained by IP specification owner. Y changes ONLY when: (1) Features are scaled (up or down). Flexibility exists in that this feature scalability may either be represented in the Y change or a specific register in the IP that indicates which features are exactly available. (2) When feature creeps from Is-Not list to Is list. But this may not be the case once it sees silicon; in which case X will change. Y does NOT change due to: (1) Bug fixes (2) Typos or clarifications (3) major functional/feature change/addition/deletion. Instead these changes may be reflected via R S X as applicable. Spec owner maintains a customer-invisible number 'S' which changes due to: (1) Typos/clarifications (2) Bug documentation. Note that this bug is not due to a spec change but due to implementation. Nevertheless the spec tracks the IP bugs. An RTL release (say for silicon PG1.1) that occurs due to bug fix should document the corresponding spec number (X.Y.S) in its release notes.</description>
                                <lsb>0</lsb>
                                <msb>5</msb>
                                <access>read-write</access>
                            </field>
                        </fields>
                    </register>
                    <register>
                        <name>SYSCONFIG</name>
                        <displayName>DES_SYSCONFIG</displayName>
                        <description>SYSCONFIG</description>
                        <addressOffset>0x34</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SYSSTATUS</name>
                        <displayName>DES_SYSSTATUS</displayName>
                        <description>SYSSTATUS</description>
                        <addressOffset>0x38</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IRQSTATUS</name>
                        <displayName>DES_IRQSTATUS</displayName>
                        <description>This register indicates the interrupt status. If one of the interrupt bits is set the interrupt output will be asserted</description>
                        <addressOffset>0x3C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>IRQENABLE</name>
                        <displayName>DES_IRQENABLE</displayName>
                        <description>This register contains an enable bit for each unique interrupt generated by the module. It matches the layout of DES_IRQSTATUS register. An interrupt is enabled when the bit in this register is set to 1 ****************************************************************************</description>
                        <addressOffset>0x40</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                </registers>
            </peripheral>
            <peripheral>
                <name>NVIC</name>
                <version>1.0</version>
                <description>NVIC</description>
                <baseAddress>0xE000E000</baseAddress>
                <protection>p</protection>
                <addressBlock>
                    <offset>0</offset>
                    <size>4</size>
                    <usage>registers</usage>
                    <protection>p</protection>
                </addressBlock>
                <registers>
                    <register>
                        <name>INT_TYPE</name>
                        <displayName>NVIC_INT_TYPE</displayName>
                        <description>Interrupt Controller Type Reg</description>
                        <addressOffset>0x4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ACTLR</name>
                        <displayName>NVIC_ACTLR</displayName>
                        <description>Auxiliary Control</description>
                        <addressOffset>0x8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ST_CTRL</name>
                        <displayName>NVIC_ST_CTRL</displayName>
                        <description>SysTick Control and Status Register</description>
                        <addressOffset>0x10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ST_RELOAD</name>
                        <displayName>NVIC_ST_RELOAD</displayName>
                        <description>SysTick Reload Value Register</description>
                        <addressOffset>0x14</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ST_CURRENT</name>
                        <displayName>NVIC_ST_CURRENT</displayName>
                        <description>SysTick Current Value Register</description>
                        <addressOffset>0x18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ST_CAL</name>
                        <displayName>NVIC_ST_CAL</displayName>
                        <description>SysTick Calibration Value Reg</description>
                        <addressOffset>0x1C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EN0</name>
                        <displayName>NVIC_EN0</displayName>
                        <description>Interrupt 0-31 Set Enable</description>
                        <addressOffset>0x100</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EN1</name>
                        <displayName>NVIC_EN1</displayName>
                        <description>Interrupt 32-54 Set Enable</description>
                        <addressOffset>0x104</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EN2</name>
                        <displayName>NVIC_EN2</displayName>
                        <description>Interrupt 64-95 Set Enable</description>
                        <addressOffset>0x108</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EN3</name>
                        <displayName>NVIC_EN3</displayName>
                        <description>Interrupt 96-127 Set Enable</description>
                        <addressOffset>0x10C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EN4</name>
                        <displayName>NVIC_EN4</displayName>
                        <description>Interrupt 128-131 Set Enable</description>
                        <addressOffset>0x110</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>EN5</name>
                        <displayName>NVIC_EN5</displayName>
                        <description>Interrupt 160-191 Set Enable</description>
                        <addressOffset>0x114</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DIS0</name>
                        <displayName>NVIC_DIS0</displayName>
                        <description>Interrupt 0-31 Clear Enable</description>
                        <addressOffset>0x180</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DIS1</name>
                        <displayName>NVIC_DIS1</displayName>
                        <description>Interrupt 32-54 Clear Enable</description>
                        <addressOffset>0x184</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DIS2</name>
                        <displayName>NVIC_DIS2</displayName>
                        <description>Interrupt 64-95 Clear Enable</description>
                        <addressOffset>0x188</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DIS3</name>
                        <displayName>NVIC_DIS3</displayName>
                        <description>Interrupt 96-127 Clear Enable</description>
                        <addressOffset>0x18C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DIS4</name>
                        <displayName>NVIC_DIS4</displayName>
                        <description>Interrupt 128-131 Clear Enable</description>
                        <addressOffset>0x190</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DIS5</name>
                        <displayName>NVIC_DIS5</displayName>
                        <description>Interrupt 160-191 Clear Enable</description>
                        <addressOffset>0x194</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PEND0</name>
                        <displayName>NVIC_PEND0</displayName>
                        <description>Interrupt 0-31 Set Pending</description>
                        <addressOffset>0x200</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PEND1</name>
                        <displayName>NVIC_PEND1</displayName>
                        <description>Interrupt 32-54 Set Pending</description>
                        <addressOffset>0x204</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PEND2</name>
                        <displayName>NVIC_PEND2</displayName>
                        <description>Interrupt 64-95 Set Pending</description>
                        <addressOffset>0x208</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PEND3</name>
                        <displayName>NVIC_PEND3</displayName>
                        <description>Interrupt 96-127 Set Pending</description>
                        <addressOffset>0x20C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PEND4</name>
                        <displayName>NVIC_PEND4</displayName>
                        <description>Interrupt 128-131 Set Pending</description>
                        <addressOffset>0x210</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PEND5</name>
                        <displayName>NVIC_PEND5</displayName>
                        <description>Interrupt 160-191 Set Pending</description>
                        <addressOffset>0x214</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>UNPEND0</name>
                        <displayName>NVIC_UNPEND0</displayName>
                        <description>Interrupt 0-31 Clear Pending</description>
                        <addressOffset>0x280</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>UNPEND1</name>
                        <displayName>NVIC_UNPEND1</displayName>
                        <description>Interrupt 32-54 Clear Pending</description>
                        <addressOffset>0x284</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>UNPEND2</name>
                        <displayName>NVIC_UNPEND2</displayName>
                        <description>Interrupt 64-95 Clear Pending</description>
                        <addressOffset>0x288</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>UNPEND3</name>
                        <displayName>NVIC_UNPEND3</displayName>
                        <description>Interrupt 96-127 Clear Pending</description>
                        <addressOffset>0x28C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>UNPEND4</name>
                        <displayName>NVIC_UNPEND4</displayName>
                        <description>Interrupt 128-131 Clear Pending</description>
                        <addressOffset>0x290</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>UNPEND5</name>
                        <displayName>NVIC_UNPEND5</displayName>
                        <description>Interrupt 160-191 Clear Pending</description>
                        <addressOffset>0x294</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ACTIVE0</name>
                        <displayName>NVIC_ACTIVE0</displayName>
                        <description>Interrupt 0-31 Active Bit</description>
                        <addressOffset>0x300</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ACTIVE1</name>
                        <displayName>NVIC_ACTIVE1</displayName>
                        <description>Interrupt 32-54 Active Bit</description>
                        <addressOffset>0x304</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ACTIVE2</name>
                        <displayName>NVIC_ACTIVE2</displayName>
                        <description>Interrupt 64-95 Active Bit</description>
                        <addressOffset>0x308</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ACTIVE3</name>
                        <displayName>NVIC_ACTIVE3</displayName>
                        <description>Interrupt 96-127 Active Bit</description>
                        <addressOffset>0x30C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ACTIVE4</name>
                        <displayName>NVIC_ACTIVE4</displayName>
                        <description>Interrupt 128-131 Active Bit</description>
                        <addressOffset>0x310</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>ACTIVE5</name>
                        <displayName>NVIC_ACTIVE5</displayName>
                        <description>Interrupt 160-191 Active Bit</description>
                        <addressOffset>0x314</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI0</name>
                        <displayName>NVIC_PRI0</displayName>
                        <description>Interrupt 0-3 Priority</description>
                        <addressOffset>0x400</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI1</name>
                        <displayName>NVIC_PRI1</displayName>
                        <description>Interrupt 4-7 Priority</description>
                        <addressOffset>0x404</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI2</name>
                        <displayName>NVIC_PRI2</displayName>
                        <description>Interrupt 8-11 Priority</description>
                        <addressOffset>0x408</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI3</name>
                        <displayName>NVIC_PRI3</displayName>
                        <description>Interrupt 12-15 Priority</description>
                        <addressOffset>0x40C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI4</name>
                        <displayName>NVIC_PRI4</displayName>
                        <description>Interrupt 16-19 Priority</description>
                        <addressOffset>0x410</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI5</name>
                        <displayName>NVIC_PRI5</displayName>
                        <description>Interrupt 20-23 Priority</description>
                        <addressOffset>0x414</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI6</name>
                        <displayName>NVIC_PRI6</displayName>
                        <description>Interrupt 24-27 Priority</description>
                        <addressOffset>0x418</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI7</name>
                        <displayName>NVIC_PRI7</displayName>
                        <description>Interrupt 28-31 Priority</description>
                        <addressOffset>0x41C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI8</name>
                        <displayName>NVIC_PRI8</displayName>
                        <description>Interrupt 32-35 Priority</description>
                        <addressOffset>0x420</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI9</name>
                        <displayName>NVIC_PRI9</displayName>
                        <description>Interrupt 36-39 Priority</description>
                        <addressOffset>0x424</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI10</name>
                        <displayName>NVIC_PRI10</displayName>
                        <description>Interrupt 40-43 Priority</description>
                        <addressOffset>0x428</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI11</name>
                        <displayName>NVIC_PRI11</displayName>
                        <description>Interrupt 44-47 Priority</description>
                        <addressOffset>0x42C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI12</name>
                        <displayName>NVIC_PRI12</displayName>
                        <description>Interrupt 48-51 Priority</description>
                        <addressOffset>0x430</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI13</name>
                        <displayName>NVIC_PRI13</displayName>
                        <description>Interrupt 52-53 Priority</description>
                        <addressOffset>0x434</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI14</name>
                        <displayName>NVIC_PRI14</displayName>
                        <description>Interrupt 56-59 Priority</description>
                        <addressOffset>0x438</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI15</name>
                        <displayName>NVIC_PRI15</displayName>
                        <description>Interrupt 60-63 Priority</description>
                        <addressOffset>0x43C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI16</name>
                        <displayName>NVIC_PRI16</displayName>
                        <description>Interrupt 64-67 Priority</description>
                        <addressOffset>0x440</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI17</name>
                        <displayName>NVIC_PRI17</displayName>
                        <description>Interrupt 68-71 Priority</description>
                        <addressOffset>0x444</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI18</name>
                        <displayName>NVIC_PRI18</displayName>
                        <description>Interrupt 72-75 Priority</description>
                        <addressOffset>0x448</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI19</name>
                        <displayName>NVIC_PRI19</displayName>
                        <description>Interrupt 76-79 Priority</description>
                        <addressOffset>0x44C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI20</name>
                        <displayName>NVIC_PRI20</displayName>
                        <description>Interrupt 80-83 Priority</description>
                        <addressOffset>0x450</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI21</name>
                        <displayName>NVIC_PRI21</displayName>
                        <description>Interrupt 84-87 Priority</description>
                        <addressOffset>0x454</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI22</name>
                        <displayName>NVIC_PRI22</displayName>
                        <description>Interrupt 88-91 Priority</description>
                        <addressOffset>0x458</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI23</name>
                        <displayName>NVIC_PRI23</displayName>
                        <description>Interrupt 92-95 Priority</description>
                        <addressOffset>0x45C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI24</name>
                        <displayName>NVIC_PRI24</displayName>
                        <description>Interrupt 96-99 Priority</description>
                        <addressOffset>0x460</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI25</name>
                        <displayName>NVIC_PRI25</displayName>
                        <description>Interrupt 100-103 Priority</description>
                        <addressOffset>0x464</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI26</name>
                        <displayName>NVIC_PRI26</displayName>
                        <description>Interrupt 104-107 Priority</description>
                        <addressOffset>0x468</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI27</name>
                        <displayName>NVIC_PRI27</displayName>
                        <description>Interrupt 108-111 Priority</description>
                        <addressOffset>0x46C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI28</name>
                        <displayName>NVIC_PRI28</displayName>
                        <description>Interrupt 112-115 Priority</description>
                        <addressOffset>0x470</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI29</name>
                        <displayName>NVIC_PRI29</displayName>
                        <description>Interrupt 116-119 Priority</description>
                        <addressOffset>0x474</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI30</name>
                        <displayName>NVIC_PRI30</displayName>
                        <description>Interrupt 120-123 Priority</description>
                        <addressOffset>0x478</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI31</name>
                        <displayName>NVIC_PRI31</displayName>
                        <description>Interrupt 124-127 Priority</description>
                        <addressOffset>0x47C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI32</name>
                        <displayName>NVIC_PRI32</displayName>
                        <description>Interrupt 128-131 Priority</description>
                        <addressOffset>0x480</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI33</name>
                        <displayName>NVIC_PRI33</displayName>
                        <description>Interrupt 132-135 Priority</description>
                        <addressOffset>0x484</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI34</name>
                        <displayName>NVIC_PRI34</displayName>
                        <description>Interrupt 136-139 Priority</description>
                        <addressOffset>0x488</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI35</name>
                        <displayName>NVIC_PRI35</displayName>
                        <description>Interrupt 140-143 Priority</description>
                        <addressOffset>0x48C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI36</name>
                        <displayName>NVIC_PRI36</displayName>
                        <description>Interrupt 144-147 Priority</description>
                        <addressOffset>0x490</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI37</name>
                        <displayName>NVIC_PRI37</displayName>
                        <description>Interrupt 148-151 Priority</description>
                        <addressOffset>0x494</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI38</name>
                        <displayName>NVIC_PRI38</displayName>
                        <description>Interrupt 152-155 Priority</description>
                        <addressOffset>0x498</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI39</name>
                        <displayName>NVIC_PRI39</displayName>
                        <description>Interrupt 156-159 Priority</description>
                        <addressOffset>0x49C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI40</name>
                        <displayName>NVIC_PRI40</displayName>
                        <description>Interrupt 160-163 Priority</description>
                        <addressOffset>0x4A0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI41</name>
                        <displayName>NVIC_PRI41</displayName>
                        <description>Interrupt 164-167 Priority</description>
                        <addressOffset>0x4A4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI42</name>
                        <displayName>NVIC_PRI42</displayName>
                        <description>Interrupt 168-171 Priority</description>
                        <addressOffset>0x4A8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI43</name>
                        <displayName>NVIC_PRI43</displayName>
                        <description>Interrupt 172-175 Priority</description>
                        <addressOffset>0x4AC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI44</name>
                        <displayName>NVIC_PRI44</displayName>
                        <description>Interrupt 176-179 Priority</description>
                        <addressOffset>0x4B0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI45</name>
                        <displayName>NVIC_PRI45</displayName>
                        <description>Interrupt 180-183 Priority</description>
                        <addressOffset>0x4B4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI46</name>
                        <displayName>NVIC_PRI46</displayName>
                        <description>Interrupt 184-187 Priority</description>
                        <addressOffset>0x4B8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI47</name>
                        <displayName>NVIC_PRI47</displayName>
                        <description>Interrupt 188-191 Priority</description>
                        <addressOffset>0x4BC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>PRI48</name>
                        <displayName>NVIC_PRI48</displayName>
                        <description>Interrupt 192-195 Priority</description>
                        <addressOffset>0x4C0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CPUID</name>
                        <displayName>NVIC_CPUID</displayName>
                        <description>CPU ID Base</description>
                        <addressOffset>0xD00</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>INT_CTRL</name>
                        <displayName>NVIC_INT_CTRL</displayName>
                        <description>Interrupt Control and State</description>
                        <addressOffset>0xD04</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>VTABLE</name>
                        <displayName>NVIC_VTABLE</displayName>
                        <description>Vector Table Offset</description>
                        <addressOffset>0xD08</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>APINT</name>
                        <displayName>NVIC_APINT</displayName>
                        <description>Application Interrupt and Reset Control</description>
                        <addressOffset>0xD0C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SYS_CTRL</name>
                        <displayName>NVIC_SYS_CTRL</displayName>
                        <description>System Control</description>
                        <addressOffset>0xD10</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>CFG_CTRL</name>
                        <displayName>NVIC_CFG_CTRL</displayName>
                        <description>Configuration and Control</description>
                        <addressOffset>0xD14</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SYS_PRI1</name>
                        <displayName>NVIC_SYS_PRI1</displayName>
                        <description>System Handler Priority 1</description>
                        <addressOffset>0xD18</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SYS_PRI2</name>
                        <displayName>NVIC_SYS_PRI2</displayName>
                        <description>System Handler Priority 2</description>
                        <addressOffset>0xD1C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SYS_PRI3</name>
                        <displayName>NVIC_SYS_PRI3</displayName>
                        <description>System Handler Priority 3</description>
                        <addressOffset>0xD20</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SYS_HND_CTRL</name>
                        <displayName>NVIC_SYS_HND_CTRL</displayName>
                        <description>System Handler Control and State</description>
                        <addressOffset>0xD24</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FAULT_STAT</name>
                        <displayName>NVIC_FAULT_STAT</displayName>
                        <description>Configurable Fault Status</description>
                        <addressOffset>0xD28</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>HFAULT_STAT</name>
                        <displayName>NVIC_HFAULT_STAT</displayName>
                        <description>Hard Fault Status</description>
                        <addressOffset>0xD2C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DEBUG_STAT</name>
                        <displayName>NVIC_DEBUG_STAT</displayName>
                        <description>Debug Status Register</description>
                        <addressOffset>0xD30</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MM_ADDR</name>
                        <displayName>NVIC_MM_ADDR</displayName>
                        <description>Memory Management Fault Address</description>
                        <addressOffset>0xD34</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>FAULT_ADDR</name>
                        <displayName>NVIC_FAULT_ADDR</displayName>
                        <description>Bus Fault Address</description>
                        <addressOffset>0xD38</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MPU_TYPE</name>
                        <displayName>NVIC_MPU_TYPE</displayName>
                        <description>MPU Type</description>
                        <addressOffset>0xD90</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MPU_CTRL</name>
                        <displayName>NVIC_MPU_CTRL</displayName>
                        <description>MPU Control</description>
                        <addressOffset>0xD94</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MPU_NUMBER</name>
                        <displayName>NVIC_MPU_NUMBER</displayName>
                        <description>MPU Region Number</description>
                        <addressOffset>0xD98</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MPU_BASE</name>
                        <displayName>NVIC_MPU_BASE</displayName>
                        <description>MPU Region Base Address</description>
                        <addressOffset>0xD9C</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MPU_ATTR</name>
                        <displayName>NVIC_MPU_ATTR</displayName>
                        <description>MPU Region Attribute and Size</description>
                        <addressOffset>0xDA0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MPU_BASE1</name>
                        <displayName>NVIC_MPU_BASE1</displayName>
                        <description>MPU Region Base Address Alias 1</description>
                        <addressOffset>0xDA4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MPU_ATTR1</name>
                        <displayName>NVIC_MPU_ATTR1</displayName>
                        <description>MPU Region Attribute and Size Alias 1</description>
                        <addressOffset>0xDA8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MPU_BASE2</name>
                        <displayName>NVIC_MPU_BASE2</displayName>
                        <description>MPU Region Base Address Alias 2</description>
                        <addressOffset>0xDAC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MPU_ATTR2</name>
                        <displayName>NVIC_MPU_ATTR2</displayName>
                        <description>MPU Region Attribute and Size Alias 2</description>
                        <addressOffset>0xDB0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MPU_BASE3</name>
                        <displayName>NVIC_MPU_BASE3</displayName>
                        <description>MPU Region Base Address Alias 3</description>
                        <addressOffset>0xDB4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>MPU_ATTR3</name>
                        <displayName>NVIC_MPU_ATTR3</displayName>
                        <description>MPU Region Attribute and Size Alias 3</description>
                        <addressOffset>0xDB8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DBG_CTRL</name>
                        <displayName>NVIC_DBG_CTRL</displayName>
                        <description>Debug Control and Status Reg</description>
                        <addressOffset>0xDF0</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DBG_XFER</name>
                        <displayName>NVIC_DBG_XFER</displayName>
                        <description>Debug Core Reg. Transfer Select</description>
                        <addressOffset>0xDF4</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DBG_DATA</name>
                        <displayName>NVIC_DBG_DATA</displayName>
                        <description>Debug Core Register Data</description>
                        <addressOffset>0xDF8</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>DBG_INT</name>
                        <displayName>NVIC_DBG_INT</displayName>
                        <description>Debug Reset Interrupt Control</description>
                        <addressOffset>0xDFC</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                    <register>
                        <name>SW_TRIG</name>
                        <displayName>NVIC_SW_TRIG</displayName>
                        <description>Software Trigger Interrupt ***************************************************************************</description>
                        <addressOffset>0xF00</addressOffset>
                        <size>32</size>
                        <access>read-write</access>
                    </register>
                </registers>
            </peripheral>
        </peripherals>
    </device>
